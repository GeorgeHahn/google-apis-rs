{
    "docs": [
        {
            "location": "/", 
            "text": "The \nsheets4\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Sheets\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nSheets\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-sheets4-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nSheets\n API at revision \n20171208\n. The CLI is at version \n1.0.7\n.\n\n\nsheets4 [options]\n        spreadsheets\n                batch-update \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                create (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                developer-metadata-get \nspreadsheet-id\n \nmetadata-id\n [-p \nv\n]... [-o \nout\n]\n                developer-metadata-search \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                get \nspreadsheet-id\n [-p \nv\n]... [-o \nout\n]\n                get-by-data-filter \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                sheets-copy-to \nspreadsheet-id\n \nsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-append \nspreadsheet-id\n \nrange\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-batch-clear \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-batch-clear-by-data-filter \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-batch-get \nspreadsheet-id\n [-p \nv\n]... [-o \nout\n]\n                values-batch-get-by-data-filter \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-batch-update \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-batch-update-by-data-filter \nspreadsheet-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-clear \nspreadsheet-id\n \nrange\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                values-get \nspreadsheet-id\n \nrange\n [-p \nv\n]... [-o \nout\n]\n                values-update \nspreadsheet-id\n \nrange\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  sheets4 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nsheets4-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/sheets4-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/sheets4-secret.json\n, assuming that the required \nsheets\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nsheets4 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-sheets4-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Sheets  API at revision  20171208 . The CLI is at version  1.0.7 .  sheets4 [options]\n        spreadsheets\n                batch-update  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                create (-r  kv )... [-p  v ]... [-o  out ]\n                developer-metadata-get  spreadsheet-id   metadata-id  [-p  v ]... [-o  out ]\n                developer-metadata-search  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                get  spreadsheet-id  [-p  v ]... [-o  out ]\n                get-by-data-filter  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                sheets-copy-to  spreadsheet-id   sheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                values-append  spreadsheet-id   range  (-r  kv )... [-p  v ]... [-o  out ]\n                values-batch-clear  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                values-batch-clear-by-data-filter  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                values-batch-get  spreadsheet-id  [-p  v ]... [-o  out ]\n                values-batch-get-by-data-filter  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                values-batch-update  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                values-batch-update-by-data-filter  spreadsheet-id  (-r  kv )... [-p  v ]... [-o  out ]\n                values-clear  spreadsheet-id   range  (-r  kv )... [-p  v ]... [-o  out ]\n                values-get  spreadsheet-id   range  [-p  v ]... [-o  out ]\n                values-update  spreadsheet-id   range  (-r  kv )... [-p  v ]... [-o  out ]\n  sheets4 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  sheets4- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/sheets4-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/sheets4-secret.json , assuming that the required  sheets  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  sheets4 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/spreadsheets_batch-update/", 
            "text": "Applies one or more updates to the spreadsheet.\n\n\nEach request is validated before\nbeing applied. If any request is not valid then the entire request will\nfail and nothing will be applied.\n\n\nSome requests have replies to\ngive you some information about how\nthey are applied. The replies will mirror the requests.  For example,\nif you applied 4 updates and the 3rd one had a reply, then the\nresponse will have 2 empty replies, the actual reply, and another empty\nreply, in that order.\n\n\nDue to the collaborative nature of spreadsheets, it is not guaranteed that\nthe spreadsheet will reflect exactly your changes after this completes,\nhowever it is guaranteed that the updates in the request will be\napplied together atomically. Your changes may be altered with respect to\ncollaborator changes. If there are no collaborators, the spreadsheet\nshould reflect your changes.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets batch-update ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe spreadsheet to apply the updates to.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchUpdateSpreadsheetRequest:\n  include-spreadsheet-in-response: boolean\n  response-include-grid-data: boolean\n  response-ranges: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    include-spreadsheet-in-response=true\n\n\nDetermines if the update response should include the spreadsheet\n    resource.\n\n\n\n\n\n\nresponse-include-grid-data=true\n\n\nTrue if grid data should be returned. Meaningful only if\n    if include_spreadsheet_response is \ntrue\n.\n    This parameter is ignored if a field mask was set in the request.\n\n\n\n\n\n\nresponse-ranges=stet\n\n\nLimits the ranges included in the response spreadsheet.\n    Meaningful only if include_spreadsheet_response is \ntrue\n.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Batch Update"
        }, 
        {
            "location": "/spreadsheets_batch-update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets batch-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_batch-update/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The spreadsheet to apply the updates to.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_batch-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchUpdateSpreadsheetRequest:\n  include-spreadsheet-in-response: boolean\n  response-include-grid-data: boolean\n  response-ranges: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    include-spreadsheet-in-response=true  Determines if the update response should include the spreadsheet\n    resource.    response-include-grid-data=true  True if grid data should be returned. Meaningful only if\n    if include_spreadsheet_response is  true .\n    This parameter is ignored if a field mask was set in the request.    response-ranges=stet  Limits the ranges included in the response spreadsheet.\n    Meaningful only if include_spreadsheet_response is  true .  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_batch-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_batch-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_batch-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_create/", 
            "text": "Creates a spreadsheet, returning the newly created spreadsheet.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets create ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSpreadsheet:\n  properties:\n    auto-recalc: string\n    default-format:\n      background-color:\n        alpha: number\n        blue: number\n        green: number\n        red: number\n      borders:\n        bottom:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n        left:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n        right:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n        top:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n      horizontal-alignment: string\n      hyperlink-display-type: string\n      number-format:\n        pattern: string\n        type: string\n      padding:\n        bottom: integer\n        left: integer\n        right: integer\n        top: integer\n      text-direction: string\n      text-format:\n        bold: boolean\n        font-family: string\n        font-size: integer\n        foreground-color:\n          alpha: number\n          blue: number\n          green: number\n          red: number\n        italic: boolean\n        strikethrough: boolean\n        underline: boolean\n      text-rotation:\n        angle: integer\n        vertical: boolean\n      vertical-alignment: string\n      wrap-strategy: string\n    iterative-calculation-settings:\n      convergence-threshold: number\n      max-iterations: integer\n    locale: string\n    time-zone: string\n    title: string\n  spreadsheet-id: string\n  spreadsheet-url: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .properties    auto-recalc=sed\n\n\nThe amount of time to wait before volatile functions are recalculated.\n\n\n\n\n\n\n\n\ndefault-format.background-color    alpha=0.165687283689\n\n\n\n\n\n\nThe fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:\n\n\npixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).\n\n \nblue=0.824373746908\n\n    - The amount of blue in the color as a value in the interval [0, 1].\n\n \ngreen=0.383704808614\n\n    - The amount of green in the color as a value in the interval [0, 1].\n* \nred=0.789612824916\n\n    - The amount of red in the color as a value in the interval [0, 1].\n\n\n\n\n\n\n\n\n\n\n..borders.bottom.color    alpha=0.921726509896\n\n\n\n\n\n\nThe fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:\n\n\npixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).\n\n \nblue=0.30763338798\n\n    - The amount of blue in the color as a value in the interval [0, 1].\n\n \ngreen=0.992247072586\n\n    - The amount of green in the color as a value in the interval [0, 1].\n* \nred=0.204946002078\n\n    - The amount of red in the color as a value in the interval [0, 1].\n\n\n\n\n\n\n\n\n\n\n..    style=labore\n\n\n\n\nThe style of the border.\n\n\n\n\n\n\n\n\nwidth=92\n\n\n\n\nThe width of the border, in pixels.\n    Deprecated; the width is determined by the \nstyle\n field.\n\n\n\n\n\n\n\n\n..left.color    alpha=0.109288397621\n\n\n\n\n\n\nThe fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:\n\n\npixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).\n\n \nblue=0.820437629783\n\n    - The amount of blue in the color as a value in the interval [0, 1].\n\n \ngreen=0.398739054055\n\n    - The amount of green in the color as a value in the interval [0, 1].\n* \nred=0.0653431304201\n\n    - The amount of red in the color as a value in the interval [0, 1].\n\n\n\n\n\n\n\n\n\n\n..    style=aliquyam\n\n\n\n\nThe style of the border.\n\n\n\n\n\n\n\n\nwidth=35\n\n\n\n\nThe width of the border, in pixels.\n    Deprecated; the width is determined by the \nstyle\n field.\n\n\n\n\n\n\n\n\n..right.color    alpha=0.403587530578\n\n\n\n\n\n\nThe fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:\n\n\npixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).\n\n \nblue=0.801612546575\n\n    - The amount of blue in the color as a value in the interval [0, 1].\n\n \ngreen=0.800065132311\n\n    - The amount of green in the color as a value in the interval [0, 1].\n* \nred=0.663748882844\n\n    - The amount of red in the color as a value in the interval [0, 1].\n\n\n\n\n\n\n\n\n\n\n..    style=et\n\n\n\n\nThe style of the border.\n\n\n\n\n\n\n\n\nwidth=60\n\n\n\n\nThe width of the border, in pixels.\n    Deprecated; the width is determined by the \nstyle\n field.\n\n\n\n\n\n\n\n\n..top.color    alpha=0.460933679688\n\n\n\n\n\n\nThe fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:\n\n\npixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).\n\n \nblue=0.957563386643\n\n    - The amount of blue in the color as a value in the interval [0, 1].\n\n \ngreen=0.795720263212\n\n    - The amount of green in the color as a value in the interval [0, 1].\n* \nred=0.313727897996\n\n    - The amount of red in the color as a value in the interval [0, 1].\n\n\n\n\n\n\n\n\n\n\n..    style=aliquyam\n\n\n\n\nThe style of the border.\n\n\n\n\n\n\n\n\nwidth=92\n\n\n\n\nThe width of the border, in pixels.\n    Deprecated; the width is determined by the \nstyle\n field.\n\n\n\n\n\n\n\n\n...    horizontal-alignment=lorem\n\n\n\n\nThe horizontal alignment of the value in the cell.\n\n\n\n\n\n\nhyperlink-display-type=eos\n\n\nHow a hyperlink, if it exists, should be displayed in the cell.\n\n\n\n\n\n\nnumber-format    pattern=erat\n\n\nPattern string used for formatting.  If not set, a default pattern based on\n    the user\ns locale will be used if necessary for the given type.\n    See the \nDate and Number Formats guide\n for more\n    information about the supported patterns.\n\n\n\n\n\n\n\n\ntype=sadipscing\n\n\n\n\nThe type of the number format.\n    When writing, this field must be set.\n\n\n\n\n\n\n\n\n..padding    bottom=53\n\n\n\n\nThe bottom padding of the cell.\n\n\n\n\n\n\nleft=62\n\n\nThe left padding of the cell.\n\n\n\n\n\n\nright=58\n\n\nThe right padding of the cell.\n\n\n\n\n\n\n\n\ntop=4\n\n\n\n\nThe top padding of the cell.\n\n\n\n\n\n\n\n\n..    text-direction=no\n\n\n\n\nThe direction of the text in the cell.\n\n\n\n\n\n\ntext-format    bold=true\n\n\nTrue if the text is bold.\n\n\n\n\n\n\nfont-family=eirmod\n\n\nThe font family.\n\n\n\n\n\n\nfont-size=68\n\n\nThe size of the font.\n\n\n\n\n\n\n\n\nforeground-color    alpha=0.634997883415\n\n\n\n\n\n\nThe fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:\n\n\npixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).\n\n \nblue=0.197022051398\n\n    - The amount of blue in the color as a value in the interval [0, 1].\n\n \ngreen=0.284925834809\n\n    - The amount of green in the color as a value in the interval [0, 1].\n* \nred=0.452328203239\n\n    - The amount of red in the color as a value in the interval [0, 1].\n\n\n\n\n\n\n\n\n\n\n..    italic=true\n\n\n\n\nTrue if the text is italicized.\n\n\n\n\n\n\nstrikethrough=true\n\n\nTrue if the text has a strikethrough.\n\n\n\n\n\n\n\n\nunderline=false\n\n\n\n\nTrue if the text is underlined.\n\n\n\n\n\n\n\n\n..text-rotation    angle=80\n\n\n\n\n\n\nThe angle between the standard orientation and the desired orientation.\n    Measured in degrees. Valid values are between -90 and 90. Positive\n    angles are angled upwards, negative are angled downwards.\n\n\nNote: For LTR text direction positive angles are in the counterclockwise\ndirection, whereas for RTL they are in the clockwise direction\n* \nvertical=true\n\n    - If true, text reads top to bottom, but the orientation of individual\ncharacters is unchanged.\nFor example:\n\n\n| V |\n| e |\n| r |\n| t |\n| i |\n| c |\n| a |\n| l |\n\n\n\n\n\n\n\n\n\n\n\n..    vertical-alignment=sanctus\n\n\n\n\nThe vertical alignment of the value in the cell.\n\n\n\n\n\n\n\n\nwrap-strategy=et\n\n\n\n\nThe wrap strategy for the value in the cell.\n\n\n\n\n\n\n\n\n..iterative-calculation-settings    convergence-threshold=0.549609244211\n\n\n\n\nWhen iterative calculation is enabled and successive results differ by\n    less than this threshold value, the calculation rounds stop.\n\n\n\n\n\n\n\n\nmax-iterations=78\n\n\n\n\nWhen iterative calculation is enabled, the maximum number of calculation\n    rounds to perform.\n\n\n\n\n\n\n\n\n..    locale=consetetur\n\n\n\n\n\n\nThe locale of the spreadsheet in one of the following formats:\n\n\n\n\n\n\nan ISO 639-1 language code such as \nen\n\n\n\n\n\n\nan ISO 639-2 language code such as \nfil\n, if no 639-1 code exists\n\n\n\n\n\n\na combination of the ISO language code and country code, such as \nen_US\n\n\n\n\n\n\nNote: when updating this field, not all locales/languages are supported.\n\n \ntime-zone=ut\n\n    - The time zone of the spreadsheet, in CLDR format such as\n\nAmerica/New_York\n. If the time zone isn\nt recognized, this may\nbe a custom time zone such as \nGMT-07:00\n.\n\n \ntitle=ea\n\n    - The title of the spreadsheet.\n\n\n\n\n\n\n\n\n\n\n..    spreadsheet-id=sed\n\n\n\n\nThe ID of the spreadsheet.\n    This field is read-only.\n\n\n\n\n\n\nspreadsheet-url=dolor\n\n\nThe url of the spreadsheet.\n    This field is read-only.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Create"
        }, 
        {
            "location": "/spreadsheets_create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Spreadsheet:\n  properties:\n    auto-recalc: string\n    default-format:\n      background-color:\n        alpha: number\n        blue: number\n        green: number\n        red: number\n      borders:\n        bottom:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n        left:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n        right:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n        top:\n          color:\n            alpha: number\n            blue: number\n            green: number\n            red: number\n          style: string\n          width: integer\n      horizontal-alignment: string\n      hyperlink-display-type: string\n      number-format:\n        pattern: string\n        type: string\n      padding:\n        bottom: integer\n        left: integer\n        right: integer\n        top: integer\n      text-direction: string\n      text-format:\n        bold: boolean\n        font-family: string\n        font-size: integer\n        foreground-color:\n          alpha: number\n          blue: number\n          green: number\n          red: number\n        italic: boolean\n        strikethrough: boolean\n        underline: boolean\n      text-rotation:\n        angle: integer\n        vertical: boolean\n      vertical-alignment: string\n      wrap-strategy: string\n    iterative-calculation-settings:\n      convergence-threshold: number\n      max-iterations: integer\n    locale: string\n    time-zone: string\n    title: string\n  spreadsheet-id: string\n  spreadsheet-url: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .properties    auto-recalc=sed  The amount of time to wait before volatile functions are recalculated.     default-format.background-color    alpha=0.165687283689    The fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)  This means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).   blue=0.824373746908 \n    - The amount of blue in the color as a value in the interval [0, 1].   green=0.383704808614 \n    - The amount of green in the color as a value in the interval [0, 1].\n*  red=0.789612824916 \n    - The amount of red in the color as a value in the interval [0, 1].      ..borders.bottom.color    alpha=0.921726509896    The fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)  This means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).   blue=0.30763338798 \n    - The amount of blue in the color as a value in the interval [0, 1].   green=0.992247072586 \n    - The amount of green in the color as a value in the interval [0, 1].\n*  red=0.204946002078 \n    - The amount of red in the color as a value in the interval [0, 1].      ..    style=labore   The style of the border.     width=92   The width of the border, in pixels.\n    Deprecated; the width is determined by the  style  field.     ..left.color    alpha=0.109288397621    The fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)  This means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).   blue=0.820437629783 \n    - The amount of blue in the color as a value in the interval [0, 1].   green=0.398739054055 \n    - The amount of green in the color as a value in the interval [0, 1].\n*  red=0.0653431304201 \n    - The amount of red in the color as a value in the interval [0, 1].      ..    style=aliquyam   The style of the border.     width=35   The width of the border, in pixels.\n    Deprecated; the width is determined by the  style  field.     ..right.color    alpha=0.403587530578    The fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)  This means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).   blue=0.801612546575 \n    - The amount of blue in the color as a value in the interval [0, 1].   green=0.800065132311 \n    - The amount of green in the color as a value in the interval [0, 1].\n*  red=0.663748882844 \n    - The amount of red in the color as a value in the interval [0, 1].      ..    style=et   The style of the border.     width=60   The width of the border, in pixels.\n    Deprecated; the width is determined by the  style  field.     ..top.color    alpha=0.460933679688    The fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)  This means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).   blue=0.957563386643 \n    - The amount of blue in the color as a value in the interval [0, 1].   green=0.795720263212 \n    - The amount of green in the color as a value in the interval [0, 1].\n*  red=0.313727897996 \n    - The amount of red in the color as a value in the interval [0, 1].      ..    style=aliquyam   The style of the border.     width=92   The width of the border, in pixels.\n    Deprecated; the width is determined by the  style  field.     ...    horizontal-alignment=lorem   The horizontal alignment of the value in the cell.    hyperlink-display-type=eos  How a hyperlink, if it exists, should be displayed in the cell.    number-format    pattern=erat  Pattern string used for formatting.  If not set, a default pattern based on\n    the user s locale will be used if necessary for the given type.\n    See the  Date and Number Formats guide  for more\n    information about the supported patterns.     type=sadipscing   The type of the number format.\n    When writing, this field must be set.     ..padding    bottom=53   The bottom padding of the cell.    left=62  The left padding of the cell.    right=58  The right padding of the cell.     top=4   The top padding of the cell.     ..    text-direction=no   The direction of the text in the cell.    text-format    bold=true  True if the text is bold.    font-family=eirmod  The font family.    font-size=68  The size of the font.     foreground-color    alpha=0.634997883415    The fraction of this color that should be applied to the pixel. That is,\n    the final pixel color is defined by the equation:  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)  This means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).   blue=0.197022051398 \n    - The amount of blue in the color as a value in the interval [0, 1].   green=0.284925834809 \n    - The amount of green in the color as a value in the interval [0, 1].\n*  red=0.452328203239 \n    - The amount of red in the color as a value in the interval [0, 1].      ..    italic=true   True if the text is italicized.    strikethrough=true  True if the text has a strikethrough.     underline=false   True if the text is underlined.     ..text-rotation    angle=80    The angle between the standard orientation and the desired orientation.\n    Measured in degrees. Valid values are between -90 and 90. Positive\n    angles are angled upwards, negative are angled downwards.  Note: For LTR text direction positive angles are in the counterclockwise\ndirection, whereas for RTL they are in the clockwise direction\n*  vertical=true \n    - If true, text reads top to bottom, but the orientation of individual\ncharacters is unchanged.\nFor example:  | V |\n| e |\n| r |\n| t |\n| i |\n| c |\n| a |\n| l |      ..    vertical-alignment=sanctus   The vertical alignment of the value in the cell.     wrap-strategy=et   The wrap strategy for the value in the cell.     ..iterative-calculation-settings    convergence-threshold=0.549609244211   When iterative calculation is enabled and successive results differ by\n    less than this threshold value, the calculation rounds stop.     max-iterations=78   When iterative calculation is enabled, the maximum number of calculation\n    rounds to perform.     ..    locale=consetetur    The locale of the spreadsheet in one of the following formats:    an ISO 639-1 language code such as  en    an ISO 639-2 language code such as  fil , if no 639-1 code exists    a combination of the ISO language code and country code, such as  en_US    Note: when updating this field, not all locales/languages are supported.   time-zone=ut \n    - The time zone of the spreadsheet, in CLDR format such as America/New_York . If the time zone isn t recognized, this may\nbe a custom time zone such as  GMT-07:00 .   title=ea \n    - The title of the spreadsheet.      ..    spreadsheet-id=sed   The ID of the spreadsheet.\n    This field is read-only.    spreadsheet-url=dolor  The url of the spreadsheet.\n    This field is read-only.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-get/", 
            "text": "Returns the developer metadata with the specified ID.\nThe caller must specify the spreadsheet ID and the developer metadata\ns\nunique metadataId.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets developer-metadata-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to retrieve metadata from.\n\n\n\n\n\n\nmetadata-id\n \n(integer)\n\n\nThe ID of the developer metadata to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Developer Metadata Get"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets developer-metadata-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-get/#required-scalar-arguments", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to retrieve metadata from.    metadata-id   (integer)  The ID of the developer metadata to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-search/", 
            "text": "Returns all developer metadata matching the specified DataFilter.\nIf the provided DataFilter represents a DeveloperMetadataLookup object,\nthis will return all DeveloperMetadata entries selected by it. If the\nDataFilter represents a location in a spreadsheet, this will return all\ndeveloper metadata associated with locations intersecting that region.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets developer-metadata-search ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to retrieve metadata from.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSearchDeveloperMetadataRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Developer Metadata Search"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-search/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets developer-metadata-search ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-search/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to retrieve metadata from.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-search/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SearchDeveloperMetadataRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-search/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-search/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_developer-metadata-search/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_get/", 
            "text": "Returns the spreadsheet at the given ID.\nThe caller must specify the spreadsheet ID.\n\n\nBy default, data within grids will not be returned.\nYou can include grid data one of two ways:\n\n\n\n\n\n\nSpecify a field mask listing your desired fields using the \nfields\n URL\nparameter in HTTP\n\n\n\n\n\n\nSet the includeGridData\nURL parameter to true.  If a field mask is set, the \nincludeGridData\n\nparameter is ignored\n\n\n\n\n\n\nFor large spreadsheets, it is recommended to retrieve only the specific\nfields of the spreadsheet that you want.\n\n\nTo retrieve only subsets of the spreadsheet, use the\nranges URL parameter.\nMultiple ranges can be specified.  Limiting the range will\nreturn only the portions of the spreadsheet that intersect the requested\nranges. Ranges are specified using A1 notation.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/drive.readonly\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\nhttps://www.googleapis.com/auth/spreadsheets.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive.readonly\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets get ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe spreadsheet to request.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p include-grid-data=boolean\n\n\n\n\nTrue if grid data should be returned.\n    This parameter is ignored if a field mask was set in the request.\n\n\n\n\n\n\n\n\n-p ranges=string\n\n\n\n\nThe ranges to retrieve from the spreadsheet.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/spreadsheets_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/drive.readonly  https://www.googleapis.com/auth/spreadsheets  https://www.googleapis.com/auth/spreadsheets.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive.readonly .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_get/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The spreadsheet to request.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p include-grid-data=boolean   True if grid data should be returned.\n    This parameter is ignored if a field mask was set in the request.     -p ranges=string   The ranges to retrieve from the spreadsheet.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/spreadsheets_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_get-by-data-filter/", 
            "text": "Returns the spreadsheet at the given ID.\nThe caller must specify the spreadsheet ID.\n\n\nThis method differs from GetSpreadsheet in that it allows selecting\nwhich subsets of spreadsheet data to return by specifying a\ndataFilters parameter.\nMultiple DataFilters can be specified.  Specifying one or\nmore data filters will return the portions of the spreadsheet that\nintersect ranges matched by any of the filters.\n\n\nBy default, data within grids will not be returned.\nYou can include grid data one of two ways:\n\n\n\n\n\n\nSpecify a field mask listing your desired fields using the \nfields\n URL\nparameter in HTTP\n\n\n\n\n\n\nSet the includeGridData\nparameter to true.  If a field mask is set, the \nincludeGridData\n\nparameter is ignored\n\n\n\n\n\n\nFor large spreadsheets, it is recommended to retrieve only the specific\nfields of the spreadsheet that you want.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets get-by-data-filter ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe spreadsheet to request.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nGetSpreadsheetByDataFilterRequest:\n  include-grid-data: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    include-grid-data=true\n\n\nTrue if grid data should be returned.\n    This parameter is ignored if a field mask was set in the request.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get By Data Filter"
        }, 
        {
            "location": "/spreadsheets_get-by-data-filter/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets get-by-data-filter ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_get-by-data-filter/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The spreadsheet to request.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_get-by-data-filter/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  GetSpreadsheetByDataFilterRequest:\n  include-grid-data: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    include-grid-data=true  True if grid data should be returned.\n    This parameter is ignored if a field mask was set in the request.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_get-by-data-filter/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_get-by-data-filter/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_get-by-data-filter/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_sheets-copy-to/", 
            "text": "Copies a single sheet from a spreadsheet to another spreadsheet.\nReturns the properties of the newly created sheet.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets sheets-copy-to ...\n\n\nRequired Scalar Arguments\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet containing the sheet to copy.\n\n\n\n\n\n\nsheet-id\n \n(integer)\n\n\nThe ID of the sheet to copy.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCopySheetToAnotherSpreadsheetRequest:\n  destination-spreadsheet-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    destination-spreadsheet-id=dolor\n\n\nThe ID of the spreadsheet to copy the sheet to.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Sheets Copy To"
        }, 
        {
            "location": "/spreadsheets_sheets-copy-to/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets sheets-copy-to ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_sheets-copy-to/#required-scalar-arguments", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet containing the sheet to copy.    sheet-id   (integer)  The ID of the sheet to copy.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/spreadsheets_sheets-copy-to/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CopySheetToAnotherSpreadsheetRequest:\n  destination-spreadsheet-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    destination-spreadsheet-id=dolor  The ID of the spreadsheet to copy the sheet to.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_sheets-copy-to/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_sheets-copy-to/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_sheets-copy-to/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-append/", 
            "text": "Appends values to a spreadsheet. The input range is used to search for\nexisting data and find a \ntable\n within that range. Values will be\nappended to the next row of the table, starting with the first column of\nthe table. See the\n\nguide\n\nand\n\nsample code\n\nfor specific details of how tables are detected and data is appended.\n\n\nThe caller must specify the spreadsheet ID, range, and\na valueInputOption.  The \nvalueInputOption\n only\ncontrols how the input data will be added to the sheet (column-wise or\nrow-wise), it does not influence what cell the data starts being written\nto.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-append ...\n\n\nRequired Scalar Arguments\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to update.\n\n\n\n\n\n\nrange\n \n(string)\n\n\nThe A1 notation of a range to search for a logical table of data.\n    Values will be appended after the last row of the table.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nValueRange:\n  major-dimension: string\n  range: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    major-dimension=et\n\n\n\n\nThe major dimension of the values.\n\n\nFor output, if the spreadsheet data is: \nA1=1,B1=2,A2=3,B2=4\n,\nthen requesting \nrange=A1:B2,majorDimension=ROWS\n will return\n\n[[1,2],[3,4]]\n,\nwhereas requesting \nrange=A1:B2,majorDimension=COLUMNS\n will return\n\n[[1,3],[2,4]]\n.\n\n\nFor input, with \nrange=A1:B2,majorDimension=ROWS\n then \n[[1,2],[3,4]]\n\nwill set \nA1=1,B1=2,A2=3,B2=4\n. With \nrange=A1:B2,majorDimension=COLUMNS\n\nthen \n[[1,2],[3,4]]\n will set \nA1=1,B1=3,A2=2,B2=4\n.\n\n\nWhen writing, if this field is not set, it defaults to ROWS.\n* \nrange=consetetur\n\n    - The range the values cover, in A1 notation.\nFor output, this range indicates the entire requested range,\neven though the values will exclude trailing rows and columns.\nWhen appending values, this field represents the range to search for a\ntable, after which values will be appended.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p response-date-time-render-option=string\n\n\n\n\nDetermines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].\n\n\n\n\n\n\n\n\n-p response-value-render-option=string\n\n\n\n\nDetermines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.\n\n\n\n\n\n\n\n\n-p include-values-in-response=boolean\n\n\n\n\nDetermines if the update response should include the values\n    of the cells that were appended. By default, responses\n    do not include the updated values.\n\n\n\n\n\n\n\n\n-p insert-data-option=string\n\n\n\n\nHow the input data should be inserted.\n\n\n\n\n\n\n\n\n-p value-input-option=string\n\n\n\n\nHow the input data should be interpreted.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Append"
        }, 
        {
            "location": "/spreadsheets_values-append/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-append ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-append/#required-scalar-arguments", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to update.    range   (string)  The A1 notation of a range to search for a logical table of data.\n    Values will be appended after the last row of the table.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/spreadsheets_values-append/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ValueRange:\n  major-dimension: string\n  range: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    major-dimension=et   The major dimension of the values.  For output, if the spreadsheet data is:  A1=1,B1=2,A2=3,B2=4 ,\nthen requesting  range=A1:B2,majorDimension=ROWS  will return [[1,2],[3,4]] ,\nwhereas requesting  range=A1:B2,majorDimension=COLUMNS  will return [[1,3],[2,4]] .  For input, with  range=A1:B2,majorDimension=ROWS  then  [[1,2],[3,4]] \nwill set  A1=1,B1=2,A2=3,B2=4 . With  range=A1:B2,majorDimension=COLUMNS \nthen  [[1,2],[3,4]]  will set  A1=1,B1=3,A2=2,B2=4 .  When writing, if this field is not set, it defaults to ROWS.\n*  range=consetetur \n    - The range the values cover, in A1 notation.\nFor output, this range indicates the entire requested range,\neven though the values will exclude trailing rows and columns.\nWhen appending values, this field represents the range to search for a\ntable, after which values will be appended.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-append/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-append/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-append/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p response-date-time-render-option=string   Determines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].     -p response-value-render-option=string   Determines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.     -p include-values-in-response=boolean   Determines if the update response should include the values\n    of the cells that were appended. By default, responses\n    do not include the updated values.     -p insert-data-option=string   How the input data should be inserted.     -p value-input-option=string   How the input data should be interpreted.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/spreadsheets_values-append/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear/", 
            "text": "Clears one or more ranges of values from a spreadsheet.\nThe caller must specify the spreadsheet ID and one or more ranges.\nOnly values are cleared -- all other properties of the cell (such as\nformatting, data validation, etc..) are kept.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-batch-clear ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchClearValuesRequest:\n  ranges: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    ranges=amet.\n\n\nThe ranges to clear, in A1 notation.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Batch Clear"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-batch-clear ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to update.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchClearValuesRequest:\n  ranges: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    ranges=amet.  The ranges to clear, in A1 notation.  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear-by-data-filter/", 
            "text": "Clears one or more ranges of values from a spreadsheet.\nThe caller must specify the spreadsheet ID and one or more\nDataFilters. Ranges matching any of the specified data\nfilters will be cleared.  Only values are cleared -- all other properties\nof the cell (such as formatting, data validation, etc..) are kept.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-batch-clear-by-data-filter ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchClearValuesByDataFilterRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Batch Clear By Data Filter"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear-by-data-filter/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-batch-clear-by-data-filter ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear-by-data-filter/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to update.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear-by-data-filter/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchClearValuesByDataFilterRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear-by-data-filter/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear-by-data-filter/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-batch-clear-by-data-filter/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-batch-get/", 
            "text": "Returns one or more ranges of values from a spreadsheet.\nThe caller must specify the spreadsheet ID and one or more ranges.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/drive.readonly\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\nhttps://www.googleapis.com/auth/spreadsheets.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive.readonly\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-batch-get ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to retrieve data from.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p date-time-render-option=string\n\n\n\n\nHow dates, times, and durations should be represented in the output.\n    This is ignored if value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].\n\n\n\n\n\n\n\n\n-p value-render-option=string\n\n\n\n\nHow values should be represented in the output.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.\n\n\n\n\n\n\n\n\n-p ranges=string\n\n\n\n\nThe A1 notation of the values to retrieve.\n\n\n\n\n\n\n\n\n-p major-dimension=string\n\n\n\n\n\n\nThe major dimension that results should use.\n\n\nFor example, if the spreadsheet data is: \nA1=1,B1=2,A2=3,B2=4\n,\nthen requesting \nrange=A1:B2,majorDimension=ROWS\n will return\n\n[[1,2],[3,4]]\n,\nwhereas requesting \nrange=A1:B2,majorDimension=COLUMNS\n will return\n\n[[1,3],[2,4]]\n.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Batch Get"
        }, 
        {
            "location": "/spreadsheets_values-batch-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/drive.readonly  https://www.googleapis.com/auth/spreadsheets  https://www.googleapis.com/auth/spreadsheets.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive.readonly .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-batch-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-batch-get/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to retrieve data from.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_values-batch-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-batch-get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p date-time-render-option=string   How dates, times, and durations should be represented in the output.\n    This is ignored if value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].     -p value-render-option=string   How values should be represented in the output.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.     -p ranges=string   The A1 notation of the values to retrieve.     -p major-dimension=string    The major dimension that results should use.  For example, if the spreadsheet data is:  A1=1,B1=2,A2=3,B2=4 ,\nthen requesting  range=A1:B2,majorDimension=ROWS  will return [[1,2],[3,4]] ,\nwhereas requesting  range=A1:B2,majorDimension=COLUMNS  will return [[1,3],[2,4]] .", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/spreadsheets_values-batch-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-batch-get-by-data-filter/", 
            "text": "Returns one or more ranges of values that match the specified data filters.\nThe caller must specify the spreadsheet ID and one or more\nDataFilters.  Ranges that match any of the data filters in\nthe request will be returned.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-batch-get-by-data-filter ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to retrieve data from.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchGetValuesByDataFilterRequest:\n  date-time-render-option: string\n  major-dimension: string\n  value-render-option: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    date-time-render-option=voluptua.\n\n\nHow dates, times, and durations should be represented in the output.\n    This is ignored if value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].\n\n\n\n\n\n\nmajor-dimension=lorem\n\n\n\n\nThe major dimension that results should use.\n\n\nFor example, if the spreadsheet data is: \nA1=1,B1=2,A2=3,B2=4\n,\nthen a request that selects that range and sets \nmajorDimension=ROWS\n will\nreturn \n[[1,2],[3,4]]\n,\nwhereas a request that sets \nmajorDimension=COLUMNS\n will return\n\n[[1,3],[2,4]]\n.\n* \nvalue-render-option=gubergren\n\n    - How values should be represented in the output.\nThe default render option is ValueRenderOption.FORMATTED_VALUE.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Batch Get By Data Filter"
        }, 
        {
            "location": "/spreadsheets_values-batch-get-by-data-filter/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-batch-get-by-data-filter ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-batch-get-by-data-filter/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to retrieve data from.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_values-batch-get-by-data-filter/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchGetValuesByDataFilterRequest:\n  date-time-render-option: string\n  major-dimension: string\n  value-render-option: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    date-time-render-option=voluptua.  How dates, times, and durations should be represented in the output.\n    This is ignored if value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].    major-dimension=lorem   The major dimension that results should use.  For example, if the spreadsheet data is:  A1=1,B1=2,A2=3,B2=4 ,\nthen a request that selects that range and sets  majorDimension=ROWS  will\nreturn  [[1,2],[3,4]] ,\nwhereas a request that sets  majorDimension=COLUMNS  will return [[1,3],[2,4]] .\n*  value-render-option=gubergren \n    - How values should be represented in the output.\nThe default render option is ValueRenderOption.FORMATTED_VALUE.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-batch-get-by-data-filter/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-batch-get-by-data-filter/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-batch-get-by-data-filter/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-batch-update/", 
            "text": "Sets values in one or more ranges of a spreadsheet.\nThe caller must specify the spreadsheet ID,\na valueInputOption, and one or more\nValueRanges.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-batch-update ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchUpdateValuesRequest:\n  include-values-in-response: boolean\n  response-date-time-render-option: string\n  response-value-render-option: string\n  value-input-option: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    include-values-in-response=true\n\n\nDetermines if the update response should include the values\n    of the cells that were updated. By default, responses\n    do not include the updated values. The \nupdatedData\n field within\n    each of the BatchUpdateValuesResponse.responses will contain\n    the updated values. If the range to write was larger than than the range\n    actually written, the response will include all values in the requested\n    range (excluding trailing empty rows and columns).\n\n\n\n\n\n\nresponse-date-time-render-option=sit\n\n\nDetermines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is\n    DateTimeRenderOption.SERIAL_NUMBER.\n\n\n\n\n\n\nresponse-value-render-option=vero\n\n\nDetermines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.\n\n\n\n\n\n\nvalue-input-option=diam\n\n\nHow the input data should be interpreted.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Batch Update"
        }, 
        {
            "location": "/spreadsheets_values-batch-update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-batch-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-batch-update/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to update.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_values-batch-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchUpdateValuesRequest:\n  include-values-in-response: boolean\n  response-date-time-render-option: string\n  response-value-render-option: string\n  value-input-option: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    include-values-in-response=true  Determines if the update response should include the values\n    of the cells that were updated. By default, responses\n    do not include the updated values. The  updatedData  field within\n    each of the BatchUpdateValuesResponse.responses will contain\n    the updated values. If the range to write was larger than than the range\n    actually written, the response will include all values in the requested\n    range (excluding trailing empty rows and columns).    response-date-time-render-option=sit  Determines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is\n    DateTimeRenderOption.SERIAL_NUMBER.    response-value-render-option=vero  Determines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.    value-input-option=diam  How the input data should be interpreted.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-batch-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-batch-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-batch-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-batch-update-by-data-filter/", 
            "text": "Sets values in one or more ranges of a spreadsheet.\nThe caller must specify the spreadsheet ID,\na valueInputOption, and one or more\nDataFilterValueRanges.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-batch-update-by-data-filter ...\n\n\nRequired Scalar Argument\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchUpdateValuesByDataFilterRequest:\n  include-values-in-response: boolean\n  response-date-time-render-option: string\n  response-value-render-option: string\n  value-input-option: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    include-values-in-response=false\n\n\nDetermines if the update response should include the values\n    of the cells that were updated. By default, responses\n    do not include the updated values. The \nupdatedData\n field within\n    each of the BatchUpdateValuesResponse.responses will contain\n    the updated values. If the range to write was larger than than the range\n    actually written, the response will include all values in the requested\n    range (excluding trailing empty rows and columns).\n\n\n\n\n\n\nresponse-date-time-render-option=consetetur\n\n\nDetermines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is\n    DateTimeRenderOption.SERIAL_NUMBER.\n\n\n\n\n\n\nresponse-value-render-option=sadipscing\n\n\nDetermines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.\n\n\n\n\n\n\nvalue-input-option=vero\n\n\nHow the input data should be interpreted.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Batch Update By Data Filter"
        }, 
        {
            "location": "/spreadsheets_values-batch-update-by-data-filter/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-batch-update-by-data-filter ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-batch-update-by-data-filter/#required-scalar-argument", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to update.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/spreadsheets_values-batch-update-by-data-filter/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchUpdateValuesByDataFilterRequest:\n  include-values-in-response: boolean\n  response-date-time-render-option: string\n  response-value-render-option: string\n  value-input-option: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    include-values-in-response=false  Determines if the update response should include the values\n    of the cells that were updated. By default, responses\n    do not include the updated values. The  updatedData  field within\n    each of the BatchUpdateValuesResponse.responses will contain\n    the updated values. If the range to write was larger than than the range\n    actually written, the response will include all values in the requested\n    range (excluding trailing empty rows and columns).    response-date-time-render-option=consetetur  Determines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is\n    DateTimeRenderOption.SERIAL_NUMBER.    response-value-render-option=sadipscing  Determines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.    value-input-option=vero  How the input data should be interpreted.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-batch-update-by-data-filter/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-batch-update-by-data-filter/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-batch-update-by-data-filter/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-clear/", 
            "text": "Clears values from a spreadsheet.\nThe caller must specify the spreadsheet ID and range.\nOnly values are cleared -- all other properties of the cell (such as\nformatting, data validation, etc..) are kept.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-clear ...\n\n\nRequired Scalar Arguments\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to update.\n\n\n\n\n\n\nrange\n \n(string)\n\n\nThe A1 notation of the values to clear.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nClearValuesRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Clear"
        }, 
        {
            "location": "/spreadsheets_values-clear/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-clear ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-clear/#required-scalar-arguments", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to update.    range   (string)  The A1 notation of the values to clear.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/spreadsheets_values-clear/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ClearValuesRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-clear/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-clear/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-clear/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-get/", 
            "text": "Returns a range of values from a spreadsheet.\nThe caller must specify the spreadsheet ID and a range.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/drive.readonly\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\nhttps://www.googleapis.com/auth/spreadsheets.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive.readonly\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to retrieve data from.\n\n\n\n\n\n\nrange\n \n(string)\n\n\nThe A1 notation of the values to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p date-time-render-option=string\n\n\n\n\nHow dates, times, and durations should be represented in the output.\n    This is ignored if value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].\n\n\n\n\n\n\n\n\n-p value-render-option=string\n\n\n\n\nHow values should be represented in the output.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.\n\n\n\n\n\n\n\n\n-p major-dimension=string\n\n\n\n\n\n\nThe major dimension that results should use.\n\n\nFor example, if the spreadsheet data is: \nA1=1,B1=2,A2=3,B2=4\n,\nthen requesting \nrange=A1:B2,majorDimension=ROWS\n will return\n\n[[1,2],[3,4]]\n,\nwhereas requesting \nrange=A1:B2,majorDimension=COLUMNS\n will return\n\n[[1,3],[2,4]]\n.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Get"
        }, 
        {
            "location": "/spreadsheets_values-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/drive.readonly  https://www.googleapis.com/auth/spreadsheets  https://www.googleapis.com/auth/spreadsheets.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive.readonly .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-get/#required-scalar-arguments", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to retrieve data from.    range   (string)  The A1 notation of the values to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/spreadsheets_values-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p date-time-render-option=string   How dates, times, and durations should be represented in the output.\n    This is ignored if value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].     -p value-render-option=string   How values should be represented in the output.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.     -p major-dimension=string    The major dimension that results should use.  For example, if the spreadsheet data is:  A1=1,B1=2,A2=3,B2=4 ,\nthen requesting  range=A1:B2,majorDimension=ROWS  will return [[1,2],[3,4]] ,\nwhereas requesting  range=A1:B2,majorDimension=COLUMNS  will return [[1,3],[2,4]] .", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/spreadsheets_values-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/spreadsheets_values-update/", 
            "text": "Sets values in a range of a spreadsheet.\nThe caller must specify the spreadsheet ID, range, and\na valueInputOption.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/drive\n\n\nhttps://www.googleapis.com/auth/drive.file\n\n\nhttps://www.googleapis.com/auth/spreadsheets\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/drive\n.\nYou can set the scope for this method like this: \nsheets4 --scope \nscope\n spreadsheets values-update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nspreadsheet-id\n \n(string)\n\n\nThe ID of the spreadsheet to update.\n\n\n\n\n\n\nrange\n \n(string)\n\n\nThe A1 notation of the values to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nValueRange:\n  major-dimension: string\n  range: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    major-dimension=sadipscing\n\n\n\n\nThe major dimension of the values.\n\n\nFor output, if the spreadsheet data is: \nA1=1,B1=2,A2=3,B2=4\n,\nthen requesting \nrange=A1:B2,majorDimension=ROWS\n will return\n\n[[1,2],[3,4]]\n,\nwhereas requesting \nrange=A1:B2,majorDimension=COLUMNS\n will return\n\n[[1,3],[2,4]]\n.\n\n\nFor input, with \nrange=A1:B2,majorDimension=ROWS\n then \n[[1,2],[3,4]]\n\nwill set \nA1=1,B1=2,A2=3,B2=4\n. With \nrange=A1:B2,majorDimension=COLUMNS\n\nthen \n[[1,2],[3,4]]\n will set \nA1=1,B1=3,A2=2,B2=4\n.\n\n\nWhen writing, if this field is not set, it defaults to ROWS.\n* \nrange=invidunt\n\n    - The range the values cover, in A1 notation.\nFor output, this range indicates the entire requested range,\neven though the values will exclude trailing rows and columns.\nWhen appending values, this field represents the range to search for a\ntable, after which values will be appended.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p response-value-render-option=string\n\n\n\n\nDetermines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.\n\n\n\n\n\n\n\n\n-p response-date-time-render-option=string\n\n\n\n\nDetermines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].\n\n\n\n\n\n\n\n\n-p value-input-option=string\n\n\n\n\nHow the input data should be interpreted.\n\n\n\n\n\n\n\n\n-p include-values-in-response=boolean\n\n\n\n\nDetermines if the update response should include the values\n    of the cells that were updated. By default, responses\n    do not include the updated values.\n    If the range to write was larger than than the range actually written,\n    the response will include all values in the requested range (excluding\n    trailing empty rows and columns).\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Values Update"
        }, 
        {
            "location": "/spreadsheets_values-update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.file  https://www.googleapis.com/auth/spreadsheets   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/drive .\nYou can set the scope for this method like this:  sheets4 --scope  scope  spreadsheets values-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/spreadsheets_values-update/#required-scalar-arguments", 
            "text": "spreadsheet-id   (string)  The ID of the spreadsheet to update.    range   (string)  The A1 notation of the values to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/spreadsheets_values-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ValueRange:\n  major-dimension: string\n  range: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    major-dimension=sadipscing   The major dimension of the values.  For output, if the spreadsheet data is:  A1=1,B1=2,A2=3,B2=4 ,\nthen requesting  range=A1:B2,majorDimension=ROWS  will return [[1,2],[3,4]] ,\nwhereas requesting  range=A1:B2,majorDimension=COLUMNS  will return [[1,3],[2,4]] .  For input, with  range=A1:B2,majorDimension=ROWS  then  [[1,2],[3,4]] \nwill set  A1=1,B1=2,A2=3,B2=4 . With  range=A1:B2,majorDimension=COLUMNS \nthen  [[1,2],[3,4]]  will set  A1=1,B1=3,A2=2,B2=4 .  When writing, if this field is not set, it defaults to ROWS.\n*  range=invidunt \n    - The range the values cover, in A1 notation.\nFor output, this range indicates the entire requested range,\neven though the values will exclude trailing rows and columns.\nWhen appending values, this field represents the range to search for a\ntable, after which values will be appended.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/spreadsheets_values-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/spreadsheets_values-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/spreadsheets_values-update/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p response-value-render-option=string   Determines how values in the response should be rendered.\n    The default render option is ValueRenderOption.FORMATTED_VALUE.     -p response-date-time-render-option=string   Determines how dates, times, and durations in the response should be\n    rendered. This is ignored if response_value_render_option is\n    FORMATTED_VALUE.\n    The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].     -p value-input-option=string   How the input data should be interpreted.     -p include-values-in-response=boolean   Determines if the update response should include the values\n    of the cells that were updated. By default, responses\n    do not include the updated values.\n    If the range to write was larger than than the range actually written,\n    the response will include all values in the requested range (excluding\n    trailing empty rows and columns).", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/spreadsheets_values-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}