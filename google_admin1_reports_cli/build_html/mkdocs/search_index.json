{
    "docs": [
        {
            "location": "/", 
            "text": "The \nadmin1-reports\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle reports\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nreports\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-admin1_reports-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nreports\n API at revision \n20160704\n. The CLI is at version \n1.0.0\n.\n\n\nadmin1-reports [options]\n        activities\n                list \nuser-key\n \napplication-name\n [-p \nv\n]... [-o \nout\n]\n                watch \nuser-key\n \napplication-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        channels\n                stop (-r \nkv\n)... [-p \nv\n]...\n        customer-usage-reports\n                get \ndate\n [-p \nv\n]... [-o \nout\n]\n        user-usage-report\n                get \nuser-key\n \ndate\n [-p \nv\n]... [-o \nout\n]\n  admin1-reports --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nadmin1-reports-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/admin1-reports-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/admin1-reports-secret.json\n, assuming that the required \nadmin\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nadmin1-reports --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-admin1_reports-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  reports  API at revision  20160704 . The CLI is at version  1.0.0 .  admin1-reports [options]\n        activities\n                list  user-key   application-name  [-p  v ]... [-o  out ]\n                watch  user-key   application-name  (-r  kv )... [-p  v ]... [-o  out ]\n        channels\n                stop (-r  kv )... [-p  v ]...\n        customer-usage-reports\n                get  date  [-p  v ]... [-o  out ]\n        user-usage-report\n                get  user-key   date  [-p  v ]... [-o  out ]\n  admin1-reports --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  admin1-reports- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/admin1-reports-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/admin1-reports-secret.json , assuming that the required  admin  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  admin1-reports --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/activities_list/", 
            "text": "Retrieves a list of activities for a specific customer and application.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/admin.reports.audit.readonly\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/admin.reports.audit.readonly\n.\nYou can set the scope for this method like this: \nadmin1-reports --scope \nscope\n activities list ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-key\n \n(string)\n\n\nRepresents the profile id or the user email for which the data should be filtered. When \nall\n is specified as the userKey, it returns usageReports for all users.\n\n\n\n\n\n\napplication-name\n \n(string)\n\n\nApplication name for which the events are to be retrieved.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p customer-id=string\n\n\n\n\nRepresents the customer for which the data is to be fetched.\n\n\n\n\n\n\n\n\n-p end-time=string\n\n\n\n\nReturn events which occured at or before this time.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken to specify next page.\n\n\n\n\n\n\n\n\n-p filters=string\n\n\n\n\nEvent parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],...\n\n\n\n\n\n\n\n\n-p actor-ip-address=string\n\n\n\n\nIP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nNumber of activity records to be shown in each page.\n\n\n\n\n\n\n\n\n-p start-time=string\n\n\n\n\nReturn events which occured at or after this time.\n\n\n\n\n\n\n\n\n-p event-name=string\n\n\n\n\nName of the event being queried.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/activities_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/admin.reports.audit.readonly  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/admin.reports.audit.readonly .\nYou can set the scope for this method like this:  admin1-reports --scope  scope  activities list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/activities_list/#required-scalar-arguments", 
            "text": "user-key   (string)  Represents the profile id or the user email for which the data should be filtered. When  all  is specified as the userKey, it returns usageReports for all users.    application-name   (string)  Application name for which the events are to be retrieved.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/activities_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/activities_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p customer-id=string   Represents the customer for which the data is to be fetched.     -p end-time=string   Return events which occured at or before this time.     -p page-token=string   Token to specify next page.     -p filters=string   Event parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],...     -p actor-ip-address=string   IP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses.     -p max-results=integer   Number of activity records to be shown in each page.     -p start-time=string   Return events which occured at or after this time.     -p event-name=string   Name of the event being queried.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/activities_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/activities_watch/", 
            "text": "Push changes to activities\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/admin.reports.audit.readonly\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/admin.reports.audit.readonly\n.\nYou can set the scope for this method like this: \nadmin1-reports --scope \nscope\n activities watch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-key\n \n(string)\n\n\nRepresents the profile id or the user email for which the data should be filtered. When \nall\n is specified as the userKey, it returns usageReports for all users.\n\n\n\n\n\n\napplication-name\n \n(string)\n\n\nApplication name for which the events are to be retrieved.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nChannel:\n  address: string\n  expiration: string\n  id: string\n  kind: string\n  params: { string: string }\n  payload: boolean\n  resource-id: string\n  resource-uri: string\n  token: string\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    address=eirmod\n\n\nThe address where notifications are delivered for this channel.\n\n\n\n\n\n\nexpiration=sit\n\n\nDate and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.\n\n\n\n\n\n\nid=stet\n\n\nA UUID or similar unique string that identifies this channel.\n\n\n\n\n\n\nkind=sed\n\n\nIdentifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \napi#channel\n.\n\n\n\n\n\n\nparams=key=et\n\n\nAdditional parameters controlling delivery channel behavior. Optional.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\npayload=true\n\n\nA Boolean value to indicate whether payload is wanted. Optional.\n\n\n\n\n\n\nresource-id=kasd\n\n\nAn opaque ID that identifies the resource being watched on this channel. Stable across different API versions.\n\n\n\n\n\n\nresource-uri=accusam\n\n\nA version-specific identifier for the watched resource.\n\n\n\n\n\n\ntoken=takimata\n\n\nAn arbitrary string delivered to the target address with each notification delivered over this channel. Optional.\n\n\n\n\n\n\ntype=justo\n\n\nThe type of delivery mechanism used for this channel.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p customer-id=string\n\n\n\n\nRepresents the customer for which the data is to be fetched.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken to specify next page.\n\n\n\n\n\n\n\n\n-p actor-ip-address=string\n\n\n\n\nIP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses.\n\n\n\n\n\n\n\n\n-p end-time=string\n\n\n\n\nReturn events which occured at or before this time.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nNumber of activity records to be shown in each page.\n\n\n\n\n\n\n\n\n-p filters=string\n\n\n\n\nEvent parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],...\n\n\n\n\n\n\n\n\n-p event-name=string\n\n\n\n\nName of the event being queried.\n\n\n\n\n\n\n\n\n-p start-time=string\n\n\n\n\nReturn events which occured at or after this time.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Watch"
        }, 
        {
            "location": "/activities_watch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/admin.reports.audit.readonly  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/admin.reports.audit.readonly .\nYou can set the scope for this method like this:  admin1-reports --scope  scope  activities watch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/activities_watch/#required-scalar-arguments", 
            "text": "user-key   (string)  Represents the profile id or the user email for which the data should be filtered. When  all  is specified as the userKey, it returns usageReports for all users.    application-name   (string)  Application name for which the events are to be retrieved.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/activities_watch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Channel:\n  address: string\n  expiration: string\n  id: string\n  kind: string\n  params: { string: string }\n  payload: boolean\n  resource-id: string\n  resource-uri: string\n  token: string\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    address=eirmod  The address where notifications are delivered for this channel.    expiration=sit  Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.    id=stet  A UUID or similar unique string that identifies this channel.    kind=sed  Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string  api#channel .    params=key=et  Additional parameters controlling delivery channel behavior. Optional.  the value will be associated with the given  key    payload=true  A Boolean value to indicate whether payload is wanted. Optional.    resource-id=kasd  An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.    resource-uri=accusam  A version-specific identifier for the watched resource.    token=takimata  An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.    type=justo  The type of delivery mechanism used for this channel.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/activities_watch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/activities_watch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/activities_watch/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p customer-id=string   Represents the customer for which the data is to be fetched.     -p page-token=string   Token to specify next page.     -p actor-ip-address=string   IP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses.     -p end-time=string   Return events which occured at or before this time.     -p max-results=integer   Number of activity records to be shown in each page.     -p filters=string   Event parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],...     -p event-name=string   Name of the event being queried.     -p start-time=string   Return events which occured at or after this time.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/activities_watch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/channels_stop/", 
            "text": "Stop watching resources through this channel\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/admin.reports.audit.readonly\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/admin.reports.audit.readonly\n.\nYou can set the scope for this method like this: \nadmin1-reports --scope \nscope\n channels stop ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nChannel:\n  address: string\n  expiration: string\n  id: string\n  kind: string\n  params: { string: string }\n  payload: boolean\n  resource-id: string\n  resource-uri: string\n  token: string\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    address=amet.\n\n\nThe address where notifications are delivered for this channel.\n\n\n\n\n\n\nexpiration=erat\n\n\nDate and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.\n\n\n\n\n\n\nid=labore\n\n\nA UUID or similar unique string that identifies this channel.\n\n\n\n\n\n\nkind=sea\n\n\nIdentifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \napi#channel\n.\n\n\n\n\n\n\nparams=key=nonumy\n\n\nAdditional parameters controlling delivery channel behavior. Optional.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\npayload=true\n\n\nA Boolean value to indicate whether payload is wanted. Optional.\n\n\n\n\n\n\nresource-id=gubergren\n\n\nAn opaque ID that identifies the resource being watched on this channel. Stable across different API versions.\n\n\n\n\n\n\nresource-uri=sadipscing\n\n\nA version-specific identifier for the watched resource.\n\n\n\n\n\n\ntoken=aliquyam\n\n\nAn arbitrary string delivered to the target address with each notification delivered over this channel. Optional.\n\n\n\n\n\n\ntype=ea\n\n\nThe type of delivery mechanism used for this channel.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Stop"
        }, 
        {
            "location": "/channels_stop/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/admin.reports.audit.readonly  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/admin.reports.audit.readonly .\nYou can set the scope for this method like this:  admin1-reports --scope  scope  channels stop ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/channels_stop/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Channel:\n  address: string\n  expiration: string\n  id: string\n  kind: string\n  params: { string: string }\n  payload: boolean\n  resource-id: string\n  resource-uri: string\n  token: string\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    address=amet.  The address where notifications are delivered for this channel.    expiration=erat  Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.    id=labore  A UUID or similar unique string that identifies this channel.    kind=sea  Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string  api#channel .    params=key=nonumy  Additional parameters controlling delivery channel behavior. Optional.  the value will be associated with the given  key    payload=true  A Boolean value to indicate whether payload is wanted. Optional.    resource-id=gubergren  An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.    resource-uri=sadipscing  A version-specific identifier for the watched resource.    token=aliquyam  An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.    type=ea  The type of delivery mechanism used for this channel.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/channels_stop/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/channels_stop/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/customer-usage-reports_get/", 
            "text": "Retrieves a report which is a collection of properties / statistics for a specific customer.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/admin.reports.usage.readonly\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/admin.reports.usage.readonly\n.\nYou can set the scope for this method like this: \nadmin1-reports --scope \nscope\n customer-usage-reports get ...\n\n\nRequired Scalar Argument\n\n\n\n\ndate\n \n(string)\n\n\nRepresents the date in yyyy-mm-dd format for which the data is to be fetched.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p customer-id=string\n\n\n\n\nRepresents the customer for which the data is to be fetched.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken to specify next page.\n\n\n\n\n\n\n\n\n-p parameters=string\n\n\n\n\nRepresents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/customer-usage-reports_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/admin.reports.usage.readonly  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/admin.reports.usage.readonly .\nYou can set the scope for this method like this:  admin1-reports --scope  scope  customer-usage-reports get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/customer-usage-reports_get/#required-scalar-argument", 
            "text": "date   (string)  Represents the date in yyyy-mm-dd format for which the data is to be fetched.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/customer-usage-reports_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/customer-usage-reports_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p customer-id=string   Represents the customer for which the data is to be fetched.     -p page-token=string   Token to specify next page.     -p parameters=string   Represents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/customer-usage-reports_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/user-usage-report_get/", 
            "text": "Retrieves a report which is a collection of properties / statistics for a set of users.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/admin.reports.usage.readonly\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/admin.reports.usage.readonly\n.\nYou can set the scope for this method like this: \nadmin1-reports --scope \nscope\n user-usage-report get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-key\n \n(string)\n\n\nRepresents the profile id or the user email for which the data should be filtered.\n\n\n\n\n\n\ndate\n \n(string)\n\n\nRepresents the date in yyyy-mm-dd format for which the data is to be fetched.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p customer-id=string\n\n\n\n\nRepresents the customer for which the data is to be fetched.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of results to return. Maximum allowed is 1000\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken to specify next page.\n\n\n\n\n\n\n\n\n-p parameters=string\n\n\n\n\nRepresents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2.\n\n\n\n\n\n\n\n\n-p filters=string\n\n\n\n\nRepresents the set of filters including parameter operator value.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/user-usage-report_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/admin.reports.usage.readonly  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/admin.reports.usage.readonly .\nYou can set the scope for this method like this:  admin1-reports --scope  scope  user-usage-report get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/user-usage-report_get/#required-scalar-arguments", 
            "text": "user-key   (string)  Represents the profile id or the user email for which the data should be filtered.    date   (string)  Represents the date in yyyy-mm-dd format for which the data is to be fetched.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/user-usage-report_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/user-usage-report_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p customer-id=string   Represents the customer for which the data is to be fetched.     -p max-results=integer   Maximum number of results to return. Maximum allowed is 1000     -p page-token=string   Token to specify next page.     -p parameters=string   Represents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2.     -p filters=string   Represents the set of filters including parameter operator value.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/user-usage-report_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}