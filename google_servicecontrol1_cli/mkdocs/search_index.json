{
    "docs": [
        {
            "location": "/", 
            "text": "The \nservicecontrol1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Service Control\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nService Control\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-servicecontrol1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nService Control\n API at revision \n20171202\n. The CLI is at version \n1.0.7\n.\n\n\nservicecontrol1 [options]\n        services\n                allocate-quota \nservice-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                check \nservice-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                end-reconciliation \nservice-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                release-quota \nservice-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                report \nservice-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                start-reconciliation \nservice-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  servicecontrol1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nservicecontrol1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/servicecontrol1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/servicecontrol1-secret.json\n, assuming that the required \nservicecontrol\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nservicecontrol1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-servicecontrol1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Service Control  API at revision  20171202 . The CLI is at version  1.0.7 .  servicecontrol1 [options]\n        services\n                allocate-quota  service-name  (-r  kv )... [-p  v ]... [-o  out ]\n                check  service-name  (-r  kv )... [-p  v ]... [-o  out ]\n                end-reconciliation  service-name  (-r  kv )... [-p  v ]... [-o  out ]\n                release-quota  service-name  (-r  kv )... [-p  v ]... [-o  out ]\n                report  service-name  (-r  kv )... [-p  v ]... [-o  out ]\n                start-reconciliation  service-name  (-r  kv )... [-p  v ]... [-o  out ]\n  servicecontrol1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  servicecontrol1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/servicecontrol1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/servicecontrol1-secret.json , assuming that the required  servicecontrol  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  servicecontrol1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/services_allocate-quota/", 
            "text": "Attempts to allocate quota for the specified consumer. It should be called\nbefore the operation is executed.\n\n\nThis method requires the \nservicemanagement.services.quota\n\npermission on the specified service. For more information, see\n\nCloud IAM\n.\n\n\nNOTE:\n The client \nmust\n fail-open on server errors \nINTERNAL\n,\n\nUNKNOWN\n, \nDEADLINE_EXCEEDED\n, and \nUNAVAILABLE\n. To ensure system\nreliability, the server may inject these errors to prohibit any hard\ndependency on the quota functionality.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/servicecontrol\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nservicecontrol1 --scope \nscope\n services allocate-quota ...\n\n\nRequired Scalar Argument\n\n\n\n\nservice-name\n \n(string)\n\n\n\n\nName of the service as specified in the service configuration. For example,\n    \n#34;pubsub.googleapis.com\n#34;\n.\n\n\nSee google.api.Service for the definition of a service name.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAllocateQuotaRequest:\n  allocate-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .allocate-operation    consumer-id=eirmod\n\n\n\n\n\n\nIdentity of the consumer for whom this quota operation is being performed.\n\n\nThis can be in one of the following formats:\n  project:\nproject_id\n,\n  project_number:\nproject_number\n,\n  api_key:\napi_key\n.\n\n \nlabels=key=sit\n\n    - Labels describing the operation.\n    - the value will be associated with the given \nkey\n\n\n \nmethod-name=stet\n\n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.\n\n\nThis field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.\n\n\nExample of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n* \noperation-id=sed\n\n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.\n\n\nUUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n* \nquota-mode=et\n\n    - Quota mode for this operation.\n\n\n\n\n\n\n\n\n\n\n..    service-config-id=dolores\n\n\n\n\nSpecifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Allocate Quota"
        }, 
        {
            "location": "/services_allocate-quota/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/servicecontrol   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  servicecontrol1 --scope  scope  services allocate-quota ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/services_allocate-quota/#required-scalar-argument", 
            "text": "service-name   (string)   Name of the service as specified in the service configuration. For example,\n     #34;pubsub.googleapis.com #34; .  See google.api.Service for the definition of a service name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/services_allocate-quota/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AllocateQuotaRequest:\n  allocate-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .allocate-operation    consumer-id=eirmod    Identity of the consumer for whom this quota operation is being performed.  This can be in one of the following formats:\n  project: project_id ,\n  project_number: project_number ,\n  api_key: api_key .   labels=key=sit \n    - Labels describing the operation.\n    - the value will be associated with the given  key    method-name=stet \n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.  This field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.  Example of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n*  operation-id=sed \n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.  UUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n*  quota-mode=et \n    - Quota mode for this operation.      ..    service-config-id=dolores   Specifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/services_allocate-quota/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/services_allocate-quota/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/services_allocate-quota/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/services_check/", 
            "text": "Checks an operation with Google Service Control to decide whether\nthe given operation should proceed. It should be called before the\noperation is executed.\n\n\nIf feasible, the client should cache the check results and reuse them for\n60 seconds. In case of server errors, the client can rely on the cached\nresults for longer time.\n\n\nNOTE: the CheckRequest has the size limit of 64KB.\n\n\nThis method requires the \nservicemanagement.services.check\n permission\non the specified service. For more information, see\n\nGoogle Cloud IAM\n.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/servicecontrol\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nservicecontrol1 --scope \nscope\n services check ...\n\n\nRequired Scalar Argument\n\n\n\n\nservice-name\n \n(string)\n\n\n\n\nThe service name as specified in its service configuration. For example,\n    \n#34;pubsub.googleapis.com\n#34;\n.\n\n\nSee\n\ngoogle.api.Service\n\nfor the definition of a service name.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCheckRequest:\n  operation:\n    consumer-id: string\n    end-time: string\n    importance: string\n    labels: { string: string }\n    operation-id: string\n    operation-name: string\n    quota-properties:\n      quota-mode: string\n    resource-container: string\n    start-time: string\n    user-labels: { string: string }\n  request-project-settings: boolean\n  service-config-id: string\n  skip-activation-check: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .operation    consumer-id=kasd\n\n\n\n\n\n\nIdentity of the consumer who is using the service.\n    This field should be filled in for the operations initiated by a\n    consumer, but not for service-initiated operations that are\n    not related to a specific consumer.\n\n\nThis can be in one of the following formats:\n  project:\nproject_id\n,\n  project_number:\nproject_number\n,\n  api_key:\napi_key\n.\n\n \nend-time=accusam\n\n    - End time of the operation.\nRequired when the operation is used in ServiceController.Report,\nbut optional when the operation is used in ServiceController.Check.\n\n \nimportance=takimata\n\n    - DO NOT USE. This is an experimental field.\n* \nlabels=key=justo\n\n    - Labels describing the operation. Only the following labels are allowed:\n\n\n\n\nLabels describing monitored resources as defined in\n  the service configuration.\n\n\nDefault labels of metric values. When specified, labels defined in the\n  metric value override these default.\n\n\nThe following labels defined by Google Cloud Platform:\n\n\ncloud.googleapis.com/location\n describing the location where the\n   operation happened,\n\n\nservicecontrol.googleapis.com/user_agent\n describing the user agent\n   of the API request,\n\n\nservicecontrol.googleapis.com/service_agent\n describing the service\n   used to handle the API request (e.g. ESP),\n\n\nservicecontrol.googleapis.com/platform\n describing the platform\n   where the API is served (e.g. GAE, GCE, GKE).\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\noperation-id=amet.\n\n\nIdentity of the operation. This must be unique within the scope of the\nservice that generated the operation. If the service calls\nCheck() and Report() on the same operation, the two calls should carry\nthe same id.\n\n\n\n\n\n\n\n\nUUID version 4 is recommended, though not required.\nIn scenarios where an operation is computed from existing information\nand an idempotent id is desirable for deduplication purpose, UUID version 5\nis recommended. See RFC 4122 for details.\n\n \noperation-name=erat\n\n    - Fully qualified name of the operation. Reserved for future use.\n\n \nquota-properties    quota-mode=labore\n\n    - Quota mode for this operation.\n\n\n\n\n\n\n\n\n\n\n..    resource-container=sea\n\n\n\n\n\n\nDO NOT USE. This field is deprecated, use \nresources\n field instead.\n    The resource name of the parent of a resource in the resource hierarchy.\n\n\nThis can be in one of the following formats:\n    - \u201cprojects/\nproject-id or project-number\n\u201d\n    - \u201cfolders/\nfolder-id\n\u201d\n    - \u201corganizations/\norganization-id\n\u201d\n\n \nstart-time=nonumy\n\n    - Required. Start time of the operation.\n\n \nuser-labels=key=dolores\n\n    - User defined labels for the resource that this operation is associated\nwith. Only a combination of 1000 user labels per consumer project are\nallowed.\n    - the value will be associated with the given \nkey\n\n\n\n\n\n\n\n\n\n\n..    request-project-settings=false\n\n\n\n\nRequests the project settings to be returned as part of the check response.\n\n\n\n\n\n\nservice-config-id=sadipscing\n\n\n\n\nSpecifies which version of service configuration should be used to process\n    the request.\n\n\nIf unspecified or no matching version can be found, the\nlatest one will be used.\n* \nskip-activation-check=true\n\n    - Indicates if service activation check should be skipped for this request.\nDefault behavior is to perform the check and apply relevant quota.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Check"
        }, 
        {
            "location": "/services_check/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/servicecontrol   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  servicecontrol1 --scope  scope  services check ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/services_check/#required-scalar-argument", 
            "text": "service-name   (string)   The service name as specified in its service configuration. For example,\n     #34;pubsub.googleapis.com #34; .  See google.api.Service \nfor the definition of a service name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/services_check/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CheckRequest:\n  operation:\n    consumer-id: string\n    end-time: string\n    importance: string\n    labels: { string: string }\n    operation-id: string\n    operation-name: string\n    quota-properties:\n      quota-mode: string\n    resource-container: string\n    start-time: string\n    user-labels: { string: string }\n  request-project-settings: boolean\n  service-config-id: string\n  skip-activation-check: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .operation    consumer-id=kasd    Identity of the consumer who is using the service.\n    This field should be filled in for the operations initiated by a\n    consumer, but not for service-initiated operations that are\n    not related to a specific consumer.  This can be in one of the following formats:\n  project: project_id ,\n  project_number: project_number ,\n  api_key: api_key .   end-time=accusam \n    - End time of the operation.\nRequired when the operation is used in ServiceController.Report,\nbut optional when the operation is used in ServiceController.Check.   importance=takimata \n    - DO NOT USE. This is an experimental field.\n*  labels=key=justo \n    - Labels describing the operation. Only the following labels are allowed:   Labels describing monitored resources as defined in\n  the service configuration.  Default labels of metric values. When specified, labels defined in the\n  metric value override these default.  The following labels defined by Google Cloud Platform:  cloud.googleapis.com/location  describing the location where the\n   operation happened,  servicecontrol.googleapis.com/user_agent  describing the user agent\n   of the API request,  servicecontrol.googleapis.com/service_agent  describing the service\n   used to handle the API request (e.g. ESP),  servicecontrol.googleapis.com/platform  describing the platform\n   where the API is served (e.g. GAE, GCE, GKE).  the value will be associated with the given  key    operation-id=amet.  Identity of the operation. This must be unique within the scope of the\nservice that generated the operation. If the service calls\nCheck() and Report() on the same operation, the two calls should carry\nthe same id.     UUID version 4 is recommended, though not required.\nIn scenarios where an operation is computed from existing information\nand an idempotent id is desirable for deduplication purpose, UUID version 5\nis recommended. See RFC 4122 for details.   operation-name=erat \n    - Fully qualified name of the operation. Reserved for future use.   quota-properties    quota-mode=labore \n    - Quota mode for this operation.      ..    resource-container=sea    DO NOT USE. This field is deprecated, use  resources  field instead.\n    The resource name of the parent of a resource in the resource hierarchy.  This can be in one of the following formats:\n    - \u201cprojects/ project-id or project-number \u201d\n    - \u201cfolders/ folder-id \u201d\n    - \u201corganizations/ organization-id \u201d   start-time=nonumy \n    - Required. Start time of the operation.   user-labels=key=dolores \n    - User defined labels for the resource that this operation is associated\nwith. Only a combination of 1000 user labels per consumer project are\nallowed.\n    - the value will be associated with the given  key      ..    request-project-settings=false   Requests the project settings to be returned as part of the check response.    service-config-id=sadipscing   Specifies which version of service configuration should be used to process\n    the request.  If unspecified or no matching version can be found, the\nlatest one will be used.\n*  skip-activation-check=true \n    - Indicates if service activation check should be skipped for this request.\nDefault behavior is to perform the check and apply relevant quota.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/services_check/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/services_check/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/services_check/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/services_end-reconciliation/", 
            "text": "Signals the quota controller that service ends the ongoing usage\nreconciliation.\n\n\nThis method requires the \nservicemanagement.services.quota\n\npermission on the specified service. For more information, see\n\nGoogle Cloud IAM\n.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/servicecontrol\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nservicecontrol1 --scope \nscope\n services end-reconciliation ...\n\n\nRequired Scalar Argument\n\n\n\n\nservice-name\n \n(string)\n\n\n\n\nName of the service as specified in the service configuration. For example,\n    \n#34;pubsub.googleapis.com\n#34;\n.\n\n\nSee google.api.Service for the definition of a service name.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nEndReconciliationRequest:\n  reconciliation-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .reconciliation-operation    consumer-id=ea\n\n\n\n\n\n\nIdentity of the consumer for whom this quota operation is being performed.\n\n\nThis can be in one of the following formats:\n  project:\nproject_id\n,\n  project_number:\nproject_number\n,\n  api_key:\napi_key\n.\n\n \nlabels=key=no\n\n    - Labels describing the operation.\n    - the value will be associated with the given \nkey\n\n\n \nmethod-name=justo\n\n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.\n\n\nThis field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.\n\n\nExample of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n* \noperation-id=justo\n\n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.\n\n\nUUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n* \nquota-mode=et\n\n    - Quota mode for this operation.\n\n\n\n\n\n\n\n\n\n\n..    service-config-id=et\n\n\n\n\nSpecifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "End Reconciliation"
        }, 
        {
            "location": "/services_end-reconciliation/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/servicecontrol   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  servicecontrol1 --scope  scope  services end-reconciliation ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/services_end-reconciliation/#required-scalar-argument", 
            "text": "service-name   (string)   Name of the service as specified in the service configuration. For example,\n     #34;pubsub.googleapis.com #34; .  See google.api.Service for the definition of a service name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/services_end-reconciliation/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  EndReconciliationRequest:\n  reconciliation-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .reconciliation-operation    consumer-id=ea    Identity of the consumer for whom this quota operation is being performed.  This can be in one of the following formats:\n  project: project_id ,\n  project_number: project_number ,\n  api_key: api_key .   labels=key=no \n    - Labels describing the operation.\n    - the value will be associated with the given  key    method-name=justo \n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.  This field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.  Example of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n*  operation-id=justo \n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.  UUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n*  quota-mode=et \n    - Quota mode for this operation.      ..    service-config-id=et   Specifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/services_end-reconciliation/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/services_end-reconciliation/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/services_end-reconciliation/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/services_release-quota/", 
            "text": "Releases previously allocated quota done through AllocateQuota method.\n\n\nThis method requires the \nservicemanagement.services.quota\n\npermission on the specified service. For more information, see\n\nCloud IAM\n.\n\n\nNOTE:\n The client \nmust\n fail-open on server errors \nINTERNAL\n,\n\nUNKNOWN\n, \nDEADLINE_EXCEEDED\n, and \nUNAVAILABLE\n. To ensure system\nreliability, the server may inject these errors to prohibit any hard\ndependency on the quota functionality.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/servicecontrol\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nservicecontrol1 --scope \nscope\n services release-quota ...\n\n\nRequired Scalar Argument\n\n\n\n\nservice-name\n \n(string)\n\n\n\n\nName of the service as specified in the service configuration. For example,\n    \n#34;pubsub.googleapis.com\n#34;\n.\n\n\nSee google.api.Service for the definition of a service name.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nReleaseQuotaRequest:\n  release-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .release-operation    consumer-id=diam\n\n\n\n\n\n\nIdentity of the consumer for whom this quota operation is being performed.\n\n\nThis can be in one of the following formats:\n  project:\nproject_id\n,\n  project_number:\nproject_number\n,\n  api_key:\napi_key\n.\n\n \nlabels=key=ipsum\n\n    - Labels describing the operation.\n    - the value will be associated with the given \nkey\n\n\n \nmethod-name=lorem\n\n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.\n\n\nThis field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.\n\n\nExample of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n* \noperation-id=et\n\n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.\n\n\nUUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n* \nquota-mode=duo\n\n    - Quota mode for this operation.\n\n\n\n\n\n\n\n\n\n\n..    service-config-id=aliquyam\n\n\n\n\nSpecifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Release Quota"
        }, 
        {
            "location": "/services_release-quota/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/servicecontrol   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  servicecontrol1 --scope  scope  services release-quota ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/services_release-quota/#required-scalar-argument", 
            "text": "service-name   (string)   Name of the service as specified in the service configuration. For example,\n     #34;pubsub.googleapis.com #34; .  See google.api.Service for the definition of a service name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/services_release-quota/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ReleaseQuotaRequest:\n  release-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .release-operation    consumer-id=diam    Identity of the consumer for whom this quota operation is being performed.  This can be in one of the following formats:\n  project: project_id ,\n  project_number: project_number ,\n  api_key: api_key .   labels=key=ipsum \n    - Labels describing the operation.\n    - the value will be associated with the given  key    method-name=lorem \n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.  This field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.  Example of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n*  operation-id=et \n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.  UUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n*  quota-mode=duo \n    - Quota mode for this operation.      ..    service-config-id=aliquyam   Specifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/services_release-quota/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/services_release-quota/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/services_release-quota/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/services_report/", 
            "text": "Reports operation results to Google Service Control, such as logs and\nmetrics. It should be called after an operation is completed.\n\n\nIf feasible, the client should aggregate reporting data for up to 5\nseconds to reduce API traffic. Limiting aggregation to 5 seconds is to\nreduce data loss during client crashes. Clients should carefully choose\nthe aggregation time window to avoid data loss risk more than 0.01%\nfor business and compliance reasons.\n\n\nNOTE: the ReportRequest has the size limit of 1MB.\n\n\nThis method requires the \nservicemanagement.services.report\n permission\non the specified service. For more information, see\n\nGoogle Cloud IAM\n.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/servicecontrol\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nservicecontrol1 --scope \nscope\n services report ...\n\n\nRequired Scalar Argument\n\n\n\n\nservice-name\n \n(string)\n\n\n\n\nThe service name as specified in its service configuration. For example,\n    \n#34;pubsub.googleapis.com\n#34;\n.\n\n\nSee\n\ngoogle.api.Service\n\nfor the definition of a service name.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nReportRequest:\n  service-config-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    service-config-id=sea\n\n\n\n\nSpecifies which version of service config should be used to process the\n    request.\n\n\nIf unspecified or no matching version can be found, the\nlatest one will be used.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Report"
        }, 
        {
            "location": "/services_report/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/servicecontrol   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  servicecontrol1 --scope  scope  services report ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/services_report/#required-scalar-argument", 
            "text": "service-name   (string)   The service name as specified in its service configuration. For example,\n     #34;pubsub.googleapis.com #34; .  See google.api.Service \nfor the definition of a service name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/services_report/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ReportRequest:\n  service-config-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    service-config-id=sea   Specifies which version of service config should be used to process the\n    request.  If unspecified or no matching version can be found, the\nlatest one will be used.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/services_report/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/services_report/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/services_report/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/services_start-reconciliation/", 
            "text": "Unlike rate quota, allocation quota does not get refilled periodically.\nSo, it is possible that the quota usage as seen by the service differs from\nwhat the One Platform considers the usage is. This is expected to happen\nonly rarely, but over time this can accumulate. Services can invoke\nStartReconciliation and EndReconciliation to correct this usage drift, as\ndescribed below:\n1. Service sends StartReconciliation with a timestamp in future for each\n   metric that needs to be reconciled. The timestamp being in future allows\n   to account for in-flight AllocateQuota and ReleaseQuota requests for the\n   same metric.\n2. One Platform records this timestamp and starts tracking subsequent\n   AllocateQuota and ReleaseQuota requests until EndReconciliation is\n   called.\n3. At or after the time specified in the StartReconciliation, service\n   sends EndReconciliation with the usage that needs to be reconciled to.\n4. One Platform adjusts its own record of usage for that metric to the\n   value specified in EndReconciliation by taking in to account any\n   allocation or release between StartReconciliation and EndReconciliation.\n\n\nSignals the quota controller that the service wants to perform a usage\nreconciliation as specified in the request.\n\n\nThis method requires the \nservicemanagement.services.quota\n\npermission on the specified service. For more information, see\n\nGoogle Cloud IAM\n.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/servicecontrol\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nservicecontrol1 --scope \nscope\n services start-reconciliation ...\n\n\nRequired Scalar Argument\n\n\n\n\nservice-name\n \n(string)\n\n\n\n\nName of the service as specified in the service configuration. For example,\n    \n#34;pubsub.googleapis.com\n#34;\n.\n\n\nSee google.api.Service for the definition of a service name.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nStartReconciliationRequest:\n  reconciliation-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .reconciliation-operation    consumer-id=lorem\n\n\n\n\n\n\nIdentity of the consumer for whom this quota operation is being performed.\n\n\nThis can be in one of the following formats:\n  project:\nproject_id\n,\n  project_number:\nproject_number\n,\n  api_key:\napi_key\n.\n\n \nlabels=key=eos\n\n    - Labels describing the operation.\n    - the value will be associated with the given \nkey\n\n\n \nmethod-name=erat\n\n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.\n\n\nThis field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.\n\n\nExample of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n* \noperation-id=sadipscing\n\n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.\n\n\nUUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n* \nquota-mode=dolor\n\n    - Quota mode for this operation.\n\n\n\n\n\n\n\n\n\n\n..    service-config-id=eirmod\n\n\n\n\nSpecifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Start Reconciliation"
        }, 
        {
            "location": "/services_start-reconciliation/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/servicecontrol   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  servicecontrol1 --scope  scope  services start-reconciliation ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/services_start-reconciliation/#required-scalar-argument", 
            "text": "service-name   (string)   Name of the service as specified in the service configuration. For example,\n     #34;pubsub.googleapis.com #34; .  See google.api.Service for the definition of a service name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/services_start-reconciliation/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  StartReconciliationRequest:\n  reconciliation-operation:\n    consumer-id: string\n    labels: { string: string }\n    method-name: string\n    operation-id: string\n    quota-mode: string\n  service-config-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .reconciliation-operation    consumer-id=lorem    Identity of the consumer for whom this quota operation is being performed.  This can be in one of the following formats:\n  project: project_id ,\n  project_number: project_number ,\n  api_key: api_key .   labels=key=eos \n    - Labels describing the operation.\n    - the value will be associated with the given  key    method-name=erat \n    - Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.  This field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.  Example of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf\n*  operation-id=sadipscing \n    - Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.  UUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.\n*  quota-mode=dolor \n    - Quota mode for this operation.      ..    service-config-id=eirmod   Specifies which version of service configuration should be used to process\n    the request. If unspecified or no matching version can be found, the latest\n    one will be used.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/services_start-reconciliation/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/services_start-reconciliation/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/services_start-reconciliation/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}