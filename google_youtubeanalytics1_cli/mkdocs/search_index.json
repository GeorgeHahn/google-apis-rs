{
    "docs": [
        {
            "location": "/", 
            "text": "The \nyoutubeanalytics1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle YouTube Analytics\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nYouTube Analytics\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-youtubeanalytics1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nYouTube Analytics\n API at revision \n20171206\n. The CLI is at version \n1.0.7\n.\n\n\nyoutubeanalytics1 [options]\n        group-items\n                delete \nid\n [-p \nv\n]...\n                insert (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list \ngroup-id\n [-p \nv\n]... [-o \nout\n]\n        groups\n                delete \nid\n [-p \nv\n]...\n                insert (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n                update (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        reports\n                query \nids\n \nstart-date\n \nend-date\n \nmetrics\n [-p \nv\n]... [-o \nout\n]\n  youtubeanalytics1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nyoutubeanalytics1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/youtubeanalytics1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/youtubeanalytics1-secret.json\n, assuming that the required \nyoutubeAnalytics\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nyoutubeanalytics1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-youtubeanalytics1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  YouTube Analytics  API at revision  20171206 . The CLI is at version  1.0.7 .  youtubeanalytics1 [options]\n        group-items\n                delete  id  [-p  v ]...\n                insert (-r  kv )... [-p  v ]... [-o  out ]\n                list  group-id  [-p  v ]... [-o  out ]\n        groups\n                delete  id  [-p  v ]...\n                insert (-r  kv )... [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n                update (-r  kv )... [-p  v ]... [-o  out ]\n        reports\n                query  ids   start-date   end-date   metrics  [-p  v ]... [-o  out ]\n  youtubeanalytics1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  youtubeanalytics1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/youtubeanalytics1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/youtubeanalytics1-secret.json , assuming that the required  youtubeAnalytics  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  youtubeanalytics1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/group-items_delete/", 
            "text": "Removes an item from a group.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtubepartner\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n group-items delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nThe id parameter specifies the YouTube group item ID for the group that is being deleted.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p on-behalf-of-content-owner=string\n\n\n\n\nNote: This parameter is intended exclusively for YouTube content partners.\n\n\nThe onBehalfOfContentOwner parameter indicates that the request\ns authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Delete"
        }, 
        {
            "location": "/group-items_delete/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtubepartner   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  group-items delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/group-items_delete/#required-scalar-argument", 
            "text": "id   (string)  The id parameter specifies the YouTube group item ID for the group that is being deleted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/group-items_delete/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p on-behalf-of-content-owner=string   Note: This parameter is intended exclusively for YouTube content partners.  The onBehalfOfContentOwner parameter indicates that the request s authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/group-items_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/group-items_insert/", 
            "text": "Creates a group item.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtubepartner\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n group-items insert ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nGroupItem:\n  etag: string\n  group-id: string\n  id: string\n  kind: string\n  resource:\n    id: string\n    kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    etag=eirmod\n\n\nNo description provided.\n\n\n\n\n\n\ngroup-id=sit\n\n\nNo description provided.\n\n\n\n\n\n\nid=stet\n\n\nNo description provided.\n\n\n\n\n\n\nkind=sed\n\n\nNo description provided.\n\n\n\n\n\n\nresource    id=et\n\n\nNo description provided.\n\n\n\n\n\n\nkind=dolores\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p on-behalf-of-content-owner=string\n\n\n\n\nNote: This parameter is intended exclusively for YouTube content partners.\n\n\nThe onBehalfOfContentOwner parameter indicates that the request\ns authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/group-items_insert/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtubepartner   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  group-items insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/group-items_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  GroupItem:\n  etag: string\n  group-id: string\n  id: string\n  kind: string\n  resource:\n    id: string\n    kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    etag=eirmod  No description provided.    group-id=sit  No description provided.    id=stet  No description provided.    kind=sed  No description provided.    resource    id=et  No description provided.    kind=dolores  No description provided.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/group-items_insert/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/group-items_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/group-items_insert/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p on-behalf-of-content-owner=string   Note: This parameter is intended exclusively for YouTube content partners.  The onBehalfOfContentOwner parameter indicates that the request s authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/group-items_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/group-items_list/", 
            "text": "Returns a collection of group items that match the API request parameters.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtube.readonly\n\n\nhttps://www.googleapis.com/auth/youtubepartner\n\n\nhttps://www.googleapis.com/auth/yt-analytics.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube.readonly\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n group-items list ...\n\n\nRequired Scalar Argument\n\n\n\n\ngroup-id\n \n(string)\n\n\nThe id parameter specifies the unique ID of the group for which you want to retrieve group items.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p on-behalf-of-content-owner=string\n\n\n\n\nNote: This parameter is intended exclusively for YouTube content partners.\n\n\nThe onBehalfOfContentOwner parameter indicates that the request\ns authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/group-items_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtube.readonly  https://www.googleapis.com/auth/youtubepartner  https://www.googleapis.com/auth/yt-analytics.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube.readonly .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  group-items list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/group-items_list/#required-scalar-argument", 
            "text": "group-id   (string)  The id parameter specifies the unique ID of the group for which you want to retrieve group items.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/group-items_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/group-items_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p on-behalf-of-content-owner=string   Note: This parameter is intended exclusively for YouTube content partners.  The onBehalfOfContentOwner parameter indicates that the request s authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/group-items_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/groups_delete/", 
            "text": "Deletes a group.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtubepartner\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n groups delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nThe id parameter specifies the YouTube group ID for the group that is being deleted.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p on-behalf-of-content-owner=string\n\n\n\n\nNote: This parameter is intended exclusively for YouTube content partners.\n\n\nThe onBehalfOfContentOwner parameter indicates that the request\ns authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Delete"
        }, 
        {
            "location": "/groups_delete/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtubepartner   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  groups delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/groups_delete/#required-scalar-argument", 
            "text": "id   (string)  The id parameter specifies the YouTube group ID for the group that is being deleted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/groups_delete/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p on-behalf-of-content-owner=string   Note: This parameter is intended exclusively for YouTube content partners.  The onBehalfOfContentOwner parameter indicates that the request s authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/groups_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/groups_insert/", 
            "text": "Creates a group.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtubepartner\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n groups insert ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nGroup:\n  content-details:\n    item-count: int64\n    item-type: string\n  etag: string\n  id: string\n  kind: string\n  snippet:\n    published-at: string\n    title: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .content-details    item-count=-63\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nitem-type=accusam\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    etag=takimata\n\n\n\n\nNo description provided.\n\n\n\n\n\n\nid=justo\n\n\nNo description provided.\n\n\n\n\n\n\nkind=amet.\n\n\nNo description provided.\n\n\n\n\n\n\nsnippet    published-at=erat\n\n\nNo description provided.\n\n\n\n\n\n\ntitle=labore\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p on-behalf-of-content-owner=string\n\n\n\n\nNote: This parameter is intended exclusively for YouTube content partners.\n\n\nThe onBehalfOfContentOwner parameter indicates that the request\ns authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/groups_insert/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtubepartner   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  groups insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/groups_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Group:\n  content-details:\n    item-count: int64\n    item-type: string\n  etag: string\n  id: string\n  kind: string\n  snippet:\n    published-at: string\n    title: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .content-details    item-count=-63  No description provided.     item-type=accusam   No description provided.     ..    etag=takimata   No description provided.    id=justo  No description provided.    kind=amet.  No description provided.    snippet    published-at=erat  No description provided.    title=labore  No description provided.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/groups_insert/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/groups_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/groups_insert/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p on-behalf-of-content-owner=string   Note: This parameter is intended exclusively for YouTube content partners.  The onBehalfOfContentOwner parameter indicates that the request s authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/groups_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/groups_list/", 
            "text": "Returns a collection of groups that match the API request parameters. For example, you can retrieve all groups that the authenticated user owns, or you can retrieve one or more groups by their unique IDs.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtube.readonly\n\n\nhttps://www.googleapis.com/auth/youtubepartner\n\n\nhttps://www.googleapis.com/auth/yt-analytics.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube.readonly\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n groups list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p on-behalf-of-content-owner=string\n\n\n\n\n\n\nNote: This parameter is intended exclusively for YouTube content partners.\n\n\nThe onBehalfOfContentOwner parameter indicates that the request\ns authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\n\n\n\n\n\n\n\n\n\n\n-p mine=boolean\n\n\n\n\nSet this parameter\ns value to true to instruct the API to only return groups owned by the authenticated user.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page that can be retrieved.\n\n\n\n\n\n\n\n\n-p id=string\n\n\n\n\nThe id parameter specifies a comma-separated list of the YouTube group ID(s) for the resource(s) that are being retrieved. In a group resource, the id property specifies the group\ns YouTube group ID.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/groups_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtube.readonly  https://www.googleapis.com/auth/youtubepartner  https://www.googleapis.com/auth/yt-analytics.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube.readonly .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  groups list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/groups_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/groups_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p on-behalf-of-content-owner=string    Note: This parameter is intended exclusively for YouTube content partners.  The onBehalfOfContentOwner parameter indicates that the request s authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.      -p mine=boolean   Set this parameter s value to true to instruct the API to only return groups owned by the authenticated user.     -p page-token=string   The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page that can be retrieved.     -p id=string   The id parameter specifies a comma-separated list of the YouTube group ID(s) for the resource(s) that are being retrieved. In a group resource, the id property specifies the group s YouTube group ID.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/groups_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/groups_update/", 
            "text": "Modifies a group. For example, you could change a group\ns title.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtubepartner\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n groups update ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nGroup:\n  content-details:\n    item-count: int64\n    item-type: string\n  etag: string\n  id: string\n  kind: string\n  snippet:\n    published-at: string\n    title: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .content-details    item-count=-9\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nitem-type=nonumy\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    etag=dolores\n\n\n\n\nNo description provided.\n\n\n\n\n\n\nid=gubergren\n\n\nNo description provided.\n\n\n\n\n\n\nkind=sadipscing\n\n\nNo description provided.\n\n\n\n\n\n\nsnippet    published-at=aliquyam\n\n\nNo description provided.\n\n\n\n\n\n\ntitle=ea\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p on-behalf-of-content-owner=string\n\n\n\n\nNote: This parameter is intended exclusively for YouTube content partners.\n\n\nThe onBehalfOfContentOwner parameter indicates that the request\ns authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update"
        }, 
        {
            "location": "/groups_update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtubepartner   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  groups update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/groups_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Group:\n  content-details:\n    item-count: int64\n    item-type: string\n  etag: string\n  id: string\n  kind: string\n  snippet:\n    published-at: string\n    title: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .content-details    item-count=-9  No description provided.     item-type=nonumy   No description provided.     ..    etag=dolores   No description provided.    id=gubergren  No description provided.    kind=sadipscing  No description provided.    snippet    published-at=aliquyam  No description provided.    title=ea  No description provided.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/groups_update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/groups_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/groups_update/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p on-behalf-of-content-owner=string   Note: This parameter is intended exclusively for YouTube content partners.  The onBehalfOfContentOwner parameter indicates that the request s authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/groups_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/reports_query/", 
            "text": "Retrieve your YouTube Analytics reports.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/youtube\n\n\nhttps://www.googleapis.com/auth/youtube.readonly\n\n\nhttps://www.googleapis.com/auth/yt-analytics-monetary.readonly\n\n\nhttps://www.googleapis.com/auth/yt-analytics.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/youtube.readonly\n.\nYou can set the scope for this method like this: \nyoutubeanalytics1 --scope \nscope\n reports query ...\n\n\nRequired Scalar Arguments\n\n\n\n\nids\n \n(string)\n\n\nIdentifies the YouTube channel or content owner for which you are retrieving YouTube Analytics data.\n\n\nTo request data for a YouTube user, set the ids parameter value to channel==CHANNEL_ID, where CHANNEL_ID specifies the unique YouTube channel ID.\n\n\nTo request data for a YouTube CMS content owner, set the ids parameter value to contentOwner==OWNER_NAME, where OWNER_NAME is the CMS name of the content owner.\n\n\n\n\n\n\n\n\n\n\nstart-date\n \n(string)\n\n\nThe start date for fetching YouTube Analytics data. The value should be in YYYY-MM-DD format.\n\n\n\n\n\n\nend-date\n \n(string)\n\n\nThe end date for fetching YouTube Analytics data. The value should be in YYYY-MM-DD format.\n\n\n\n\n\n\nmetrics\n \n(string)\n\n\nA comma-separated list of YouTube Analytics metrics, such as views or likes,dislikes. See the Available Reports document for a list of the reports that you can retrieve and the metrics available in each report, and see the Metrics document for definitions of those metrics.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p filters=string\n\n\n\n\nA list of filters that should be applied when retrieving YouTube Analytics data. The Available Reports document identifies the dimensions that can be used to filter each report, and the Dimensions document defines those dimensions. If a request uses multiple filters, join them together with a semicolon (;), and the returned result table will satisfy both filters. For example, a filters parameter value of video==dMH0bHeiRNg;country==IT restricts the result set to include data for the given video in Italy.\n\n\n\n\n\n\n\n\n-p currency=string\n\n\n\n\nThe currency to which financial metrics should be converted. The default is US Dollar (USD). If the result contains no financial metrics, this flag will be ignored. Responds with an error if the specified currency is not recognized.\n\n\n\n\n\n\n\n\n-p start-index=integer\n\n\n\n\nAn index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter (one-based, inclusive).\n\n\n\n\n\n\n\n\n-p dimensions=string\n\n\n\n\nA comma-separated list of YouTube Analytics dimensions, such as views or ageGroup,gender. See the Available Reports document for a list of the reports that you can retrieve and the dimensions used for those reports. Also see the Dimensions document for definitions of those dimensions.\n\n\n\n\n\n\n\n\n-p include-historical-channel-data=boolean\n\n\n\n\nIf set to true historical data (i.e. channel data from before the linking of the channel to the content owner) will be retrieved.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nThe maximum number of rows to include in the response.\n\n\n\n\n\n\n\n\n-p sort=string\n\n\n\n\nA comma-separated list of dimensions or metrics that determine the sort order for YouTube Analytics data. By default the sort order is ascending. The \n-\n prefix causes descending sort order.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Query"
        }, 
        {
            "location": "/reports_query/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/youtube  https://www.googleapis.com/auth/youtube.readonly  https://www.googleapis.com/auth/yt-analytics-monetary.readonly  https://www.googleapis.com/auth/yt-analytics.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/youtube.readonly .\nYou can set the scope for this method like this:  youtubeanalytics1 --scope  scope  reports query ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/reports_query/#required-scalar-arguments", 
            "text": "ids   (string)  Identifies the YouTube channel or content owner for which you are retrieving YouTube Analytics data.  To request data for a YouTube user, set the ids parameter value to channel==CHANNEL_ID, where CHANNEL_ID specifies the unique YouTube channel ID.  To request data for a YouTube CMS content owner, set the ids parameter value to contentOwner==OWNER_NAME, where OWNER_NAME is the CMS name of the content owner.      start-date   (string)  The start date for fetching YouTube Analytics data. The value should be in YYYY-MM-DD format.    end-date   (string)  The end date for fetching YouTube Analytics data. The value should be in YYYY-MM-DD format.    metrics   (string)  A comma-separated list of YouTube Analytics metrics, such as views or likes,dislikes. See the Available Reports document for a list of the reports that you can retrieve and the metrics available in each report, and see the Metrics document for definitions of those metrics.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/reports_query/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/reports_query/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p filters=string   A list of filters that should be applied when retrieving YouTube Analytics data. The Available Reports document identifies the dimensions that can be used to filter each report, and the Dimensions document defines those dimensions. If a request uses multiple filters, join them together with a semicolon (;), and the returned result table will satisfy both filters. For example, a filters parameter value of video==dMH0bHeiRNg;country==IT restricts the result set to include data for the given video in Italy.     -p currency=string   The currency to which financial metrics should be converted. The default is US Dollar (USD). If the result contains no financial metrics, this flag will be ignored. Responds with an error if the specified currency is not recognized.     -p start-index=integer   An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter (one-based, inclusive).     -p dimensions=string   A comma-separated list of YouTube Analytics dimensions, such as views or ageGroup,gender. See the Available Reports document for a list of the reports that you can retrieve and the dimensions used for those reports. Also see the Dimensions document for definitions of those dimensions.     -p include-historical-channel-data=boolean   If set to true historical data (i.e. channel data from before the linking of the channel to the content owner) will be retrieved.     -p max-results=integer   The maximum number of rows to include in the response.     -p sort=string   A comma-separated list of dimensions or metrics that determine the sort order for YouTube Analytics data. By default the sort order is ascending. The  -  prefix causes descending sort order.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/reports_query/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}