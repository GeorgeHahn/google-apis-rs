{
    "docs": [
        {
            "location": "/", 
            "text": "The \ngmail1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle gmail\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \ngmail\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-gmail1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \ngmail\n API at revision \n20161206\n. The CLI is at version \n1.0.1\n.\n\n\ngmail1 [options]\n        users\n                drafts-create \nuser-id\n (-r \nkv\n)... (-u (simple|resumable) -f \nfile\n [-m \nmime\n]) [-p \nv\n]... [-o \nout\n]\n                drafts-delete \nuser-id\n \nid\n [-p \nv\n]...\n                drafts-get \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                drafts-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                drafts-send \nuser-id\n (-r \nkv\n)... (-u (simple|resumable) -f \nfile\n [-m \nmime\n]) [-p \nv\n]... [-o \nout\n]\n                drafts-update \nuser-id\n \nid\n (-r \nkv\n)... (-u (simple|resumable) -f \nfile\n [-m \nmime\n]) [-p \nv\n]... [-o \nout\n]\n                get-profile \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                history-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                labels-create \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                labels-delete \nuser-id\n \nid\n [-p \nv\n]...\n                labels-get \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                labels-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                labels-patch \nuser-id\n \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                labels-update \nuser-id\n \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                messages-attachments-get \nuser-id\n \nmessage-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                messages-batch-delete \nuser-id\n (-r \nkv\n)... [-p \nv\n]...\n                messages-batch-modify \nuser-id\n (-r \nkv\n)... [-p \nv\n]...\n                messages-delete \nuser-id\n \nid\n [-p \nv\n]...\n                messages-get \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                messages-import \nuser-id\n (-r \nkv\n)... (-u (simple|resumable) -f \nfile\n [-m \nmime\n]) [-p \nv\n]... [-o \nout\n]\n                messages-insert \nuser-id\n (-r \nkv\n)... (-u (simple|resumable) -f \nfile\n [-m \nmime\n]) [-p \nv\n]... [-o \nout\n]\n                messages-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                messages-modify \nuser-id\n \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                messages-send \nuser-id\n (-r \nkv\n)... (-u (simple|resumable) -f \nfile\n [-m \nmime\n]) [-p \nv\n]... [-o \nout\n]\n                messages-trash \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                messages-untrash \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                settings-filters-create \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-filters-delete \nuser-id\n \nid\n [-p \nv\n]...\n                settings-filters-get \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                settings-filters-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                settings-forwarding-addresses-create \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-forwarding-addresses-delete \nuser-id\n \nforwarding-email\n [-p \nv\n]...\n                settings-forwarding-addresses-get \nuser-id\n \nforwarding-email\n [-p \nv\n]... [-o \nout\n]\n                settings-forwarding-addresses-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                settings-get-auto-forwarding \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                settings-get-imap \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                settings-get-pop \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                settings-get-vacation \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                settings-send-as-create \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-send-as-delete \nuser-id\n \nsend-as-email\n [-p \nv\n]...\n                settings-send-as-get \nuser-id\n \nsend-as-email\n [-p \nv\n]... [-o \nout\n]\n                settings-send-as-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                settings-send-as-patch \nuser-id\n \nsend-as-email\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-send-as-update \nuser-id\n \nsend-as-email\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-send-as-verify \nuser-id\n \nsend-as-email\n [-p \nv\n]...\n                settings-update-auto-forwarding \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-update-imap \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-update-pop \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                settings-update-vacation \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                stop \nuser-id\n [-p \nv\n]...\n                threads-delete \nuser-id\n \nid\n [-p \nv\n]...\n                threads-get \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                threads-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                threads-modify \nuser-id\n \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                threads-trash \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                threads-untrash \nuser-id\n \nid\n [-p \nv\n]... [-o \nout\n]\n                watch \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  gmail1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ngmail1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/gmail1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/gmail1-secret.json\n, assuming that the required \ngmail\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ngmail1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-gmail1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  gmail  API at revision  20161206 . The CLI is at version  1.0.1 .  gmail1 [options]\n        users\n                drafts-create  user-id  (-r  kv )... (-u (simple|resumable) -f  file  [-m  mime ]) [-p  v ]... [-o  out ]\n                drafts-delete  user-id   id  [-p  v ]...\n                drafts-get  user-id   id  [-p  v ]... [-o  out ]\n                drafts-list  user-id  [-p  v ]... [-o  out ]\n                drafts-send  user-id  (-r  kv )... (-u (simple|resumable) -f  file  [-m  mime ]) [-p  v ]... [-o  out ]\n                drafts-update  user-id   id  (-r  kv )... (-u (simple|resumable) -f  file  [-m  mime ]) [-p  v ]... [-o  out ]\n                get-profile  user-id  [-p  v ]... [-o  out ]\n                history-list  user-id  [-p  v ]... [-o  out ]\n                labels-create  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                labels-delete  user-id   id  [-p  v ]...\n                labels-get  user-id   id  [-p  v ]... [-o  out ]\n                labels-list  user-id  [-p  v ]... [-o  out ]\n                labels-patch  user-id   id  (-r  kv )... [-p  v ]... [-o  out ]\n                labels-update  user-id   id  (-r  kv )... [-p  v ]... [-o  out ]\n                messages-attachments-get  user-id   message-id   id  [-p  v ]... [-o  out ]\n                messages-batch-delete  user-id  (-r  kv )... [-p  v ]...\n                messages-batch-modify  user-id  (-r  kv )... [-p  v ]...\n                messages-delete  user-id   id  [-p  v ]...\n                messages-get  user-id   id  [-p  v ]... [-o  out ]\n                messages-import  user-id  (-r  kv )... (-u (simple|resumable) -f  file  [-m  mime ]) [-p  v ]... [-o  out ]\n                messages-insert  user-id  (-r  kv )... (-u (simple|resumable) -f  file  [-m  mime ]) [-p  v ]... [-o  out ]\n                messages-list  user-id  [-p  v ]... [-o  out ]\n                messages-modify  user-id   id  (-r  kv )... [-p  v ]... [-o  out ]\n                messages-send  user-id  (-r  kv )... (-u (simple|resumable) -f  file  [-m  mime ]) [-p  v ]... [-o  out ]\n                messages-trash  user-id   id  [-p  v ]... [-o  out ]\n                messages-untrash  user-id   id  [-p  v ]... [-o  out ]\n                settings-filters-create  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-filters-delete  user-id   id  [-p  v ]...\n                settings-filters-get  user-id   id  [-p  v ]... [-o  out ]\n                settings-filters-list  user-id  [-p  v ]... [-o  out ]\n                settings-forwarding-addresses-create  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-forwarding-addresses-delete  user-id   forwarding-email  [-p  v ]...\n                settings-forwarding-addresses-get  user-id   forwarding-email  [-p  v ]... [-o  out ]\n                settings-forwarding-addresses-list  user-id  [-p  v ]... [-o  out ]\n                settings-get-auto-forwarding  user-id  [-p  v ]... [-o  out ]\n                settings-get-imap  user-id  [-p  v ]... [-o  out ]\n                settings-get-pop  user-id  [-p  v ]... [-o  out ]\n                settings-get-vacation  user-id  [-p  v ]... [-o  out ]\n                settings-send-as-create  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-send-as-delete  user-id   send-as-email  [-p  v ]...\n                settings-send-as-get  user-id   send-as-email  [-p  v ]... [-o  out ]\n                settings-send-as-list  user-id  [-p  v ]... [-o  out ]\n                settings-send-as-patch  user-id   send-as-email  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-send-as-update  user-id   send-as-email  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-send-as-verify  user-id   send-as-email  [-p  v ]...\n                settings-update-auto-forwarding  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-update-imap  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-update-pop  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                settings-update-vacation  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                stop  user-id  [-p  v ]...\n                threads-delete  user-id   id  [-p  v ]...\n                threads-get  user-id   id  [-p  v ]... [-o  out ]\n                threads-list  user-id  [-p  v ]... [-o  out ]\n                threads-modify  user-id   id  (-r  kv )... [-p  v ]... [-o  out ]\n                threads-trash  user-id   id  [-p  v ]... [-o  out ]\n                threads-untrash  user-id   id  [-p  v ]... [-o  out ]\n                watch  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n  gmail1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  gmail1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/gmail1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/gmail1-secret.json , assuming that the required  gmail  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  gmail1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/users_drafts-create/", 
            "text": "Creates a new draft with the DRAFT label.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users drafts-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDraft:\n  id: string\n  message:\n    history-id: string\n    id: string\n    internal-date: string\n    label-ids: [string]\n    payload:\n      body:\n        attachment-id: string\n        data: string\n        size: integer\n      filename: string\n      mime-type: string\n      part-id: string\n    raw: string\n    size-estimate: integer\n    snippet: string\n    thread-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    id=eirmod\n\n\nThe immutable ID of the draft.\n\n\n\n\n\n\nmessage    history-id=sit\n\n\nThe ID of the last history record that modified this message.\n\n\n\n\n\n\nid=stet\n\n\nThe immutable ID of the message.\n\n\n\n\n\n\ninternal-date=sed\n\n\nThe internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.\n\n\n\n\n\n\nlabel-ids=et\n\n\nList of IDs of labels applied to this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\npayload.body    attachment-id=dolores\n\n\nWhen present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.\n\n\n\n\n\n\ndata=kasd\n\n\nThe body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.\n\n\n\n\n\n\n\n\nsize=79\n\n\n\n\nNumber of bytes for the message part data (encoding notwithstanding).\n\n\n\n\n\n\n\n\n..    filename=takimata\n\n\n\n\nThe filename of the attachment. Only present if this message part represents an attachment.\n\n\n\n\n\n\nmime-type=justo\n\n\nThe MIME type of the message part.\n\n\n\n\n\n\n\n\npart-id=amet.\n\n\n\n\nThe immutable ID of the message part.\n\n\n\n\n\n\n\n\n..    raw=erat\n\n\n\n\nThe entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n\n\n\n\n\n\nsize-estimate=66\n\n\nEstimated size in bytes of the message.\n\n\n\n\n\n\nsnippet=sea\n\n\nA short part of the message text.\n\n\n\n\n\n\nthread-id=nonumy\n\n\nThe ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n\n\nThe requested threadId must be specified on the Message or Draft.Message you supply with your request. \n\n\nThe References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n\n\nThe Subject headers must match.\n\n\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nRequired Upload Flags\n\n\nThis method supports the upload of data, which \nrequires\n all of the following flags to be set:\n\n\n\n\n-u (simple|resumable)\n\n\nsimple\n - Upload media all at once.\n\n\nresumable\n - Upload media in a resumable fashion.\n\n\n\n\n\n\n-f file\n\n\nPath to file to upload. It must be seekable.\n\n\n\n\n\n\n\n\nThe following flag \nmay\n be set: \n\n\n\n\n-m mime\n\n\nthe mime type, like 'application/octet-stream', which is the default\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Drafts Create"
        }, 
        {
            "location": "/users_drafts-create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users drafts-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_drafts-create/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_drafts-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Draft:\n  id: string\n  message:\n    history-id: string\n    id: string\n    internal-date: string\n    label-ids: [string]\n    payload:\n      body:\n        attachment-id: string\n        data: string\n        size: integer\n      filename: string\n      mime-type: string\n      part-id: string\n    raw: string\n    size-estimate: integer\n    snippet: string\n    thread-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    id=eirmod  The immutable ID of the draft.    message    history-id=sit  The ID of the last history record that modified this message.    id=stet  The immutable ID of the message.    internal-date=sed  The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.    label-ids=et  List of IDs of labels applied to this message.  Each invocation of this argument appends the given value to the array.    payload.body    attachment-id=dolores  When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.    data=kasd  The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.     size=79   Number of bytes for the message part data (encoding notwithstanding).     ..    filename=takimata   The filename of the attachment. Only present if this message part represents an attachment.    mime-type=justo  The MIME type of the message part.     part-id=amet.   The immutable ID of the message part.     ..    raw=erat   The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.    size-estimate=66  Estimated size in bytes of the message.    snippet=sea  A short part of the message text.    thread-id=nonumy  The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met:   The requested threadId must be specified on the Message or Draft.Message you supply with your request.   The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.   The Subject headers must match.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_drafts-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_drafts-create/#required-upload-flags", 
            "text": "This method supports the upload of data, which  requires  all of the following flags to be set:   -u (simple|resumable)  simple  - Upload media all at once.  resumable  - Upload media in a resumable fashion.    -f file  Path to file to upload. It must be seekable.     The following flag  may  be set:    -m mime  the mime type, like 'application/octet-stream', which is the default", 
            "title": "Required Upload Flags"
        }, 
        {
            "location": "/users_drafts-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_drafts-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_drafts-delete/", 
            "text": "Immediately and permanently deletes the specified draft. Does not simply trash it.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users drafts-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the draft to delete.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Drafts Delete"
        }, 
        {
            "location": "/users_drafts-delete/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users drafts-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_drafts-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the draft to delete.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_drafts-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_drafts-get/", 
            "text": "Gets the specified draft.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users drafts-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the draft to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p format=string\n\n\nThe format to return the draft in.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Drafts Get"
        }, 
        {
            "location": "/users_drafts-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users drafts-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_drafts-get/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the draft to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_drafts-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_drafts-get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p format=string  The format to return the draft in.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_drafts-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_drafts-list/", 
            "text": "Lists the drafts in the user\ns mailbox.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users drafts-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nPage token to retrieve a specific page of results in the list.\n\n\n\n\n\n\n\n\n-p include-spam-trash=boolean\n\n\n\n\nInclude drafts from SPAM and TRASH in the results.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of drafts to return.\n\n\n\n\n\n\n\n\n-p q=string\n\n\n\n\nOnly return draft messages matching the specified query. Supports the same query format as the Gmail search box. For example, \nfrom:someuser@example.com rfc822msgid: is:unread\n.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Drafts List"
        }, 
        {
            "location": "/users_drafts-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users drafts-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_drafts-list/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_drafts-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_drafts-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   Page token to retrieve a specific page of results in the list.     -p include-spam-trash=boolean   Include drafts from SPAM and TRASH in the results.     -p max-results=integer   Maximum number of drafts to return.     -p q=string   Only return draft messages matching the specified query. Supports the same query format as the Gmail search box. For example,  from:someuser@example.com rfc822msgid: is:unread .", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_drafts-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_drafts-send/", 
            "text": "Sends the specified, existing draft to the recipients in the To, Cc, and Bcc headers.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users drafts-send ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDraft:\n  id: string\n  message:\n    history-id: string\n    id: string\n    internal-date: string\n    label-ids: [string]\n    payload:\n      body:\n        attachment-id: string\n        data: string\n        size: integer\n      filename: string\n      mime-type: string\n      part-id: string\n    raw: string\n    size-estimate: integer\n    snippet: string\n    thread-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    id=dolores\n\n\nThe immutable ID of the draft.\n\n\n\n\n\n\nmessage    history-id=gubergren\n\n\nThe ID of the last history record that modified this message.\n\n\n\n\n\n\nid=sadipscing\n\n\nThe immutable ID of the message.\n\n\n\n\n\n\ninternal-date=aliquyam\n\n\nThe internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.\n\n\n\n\n\n\nlabel-ids=ea\n\n\nList of IDs of labels applied to this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\npayload.body    attachment-id=no\n\n\nWhen present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.\n\n\n\n\n\n\ndata=justo\n\n\nThe body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.\n\n\n\n\n\n\n\n\nsize=80\n\n\n\n\nNumber of bytes for the message part data (encoding notwithstanding).\n\n\n\n\n\n\n\n\n..    filename=et\n\n\n\n\nThe filename of the attachment. Only present if this message part represents an attachment.\n\n\n\n\n\n\nmime-type=et\n\n\nThe MIME type of the message part.\n\n\n\n\n\n\n\n\npart-id=diam\n\n\n\n\nThe immutable ID of the message part.\n\n\n\n\n\n\n\n\n..    raw=ipsum\n\n\n\n\nThe entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n\n\n\n\n\n\nsize-estimate=96\n\n\nEstimated size in bytes of the message.\n\n\n\n\n\n\nsnippet=et\n\n\nA short part of the message text.\n\n\n\n\n\n\nthread-id=duo\n\n\nThe ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n\n\nThe requested threadId must be specified on the Message or Draft.Message you supply with your request. \n\n\nThe References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n\n\nThe Subject headers must match.\n\n\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nRequired Upload Flags\n\n\nThis method supports the upload of data, which \nrequires\n all of the following flags to be set:\n\n\n\n\n-u (simple|resumable)\n\n\nsimple\n - Upload media all at once.\n\n\nresumable\n - Upload media in a resumable fashion.\n\n\n\n\n\n\n-f file\n\n\nPath to file to upload. It must be seekable.\n\n\n\n\n\n\n\n\nThe following flag \nmay\n be set: \n\n\n\n\n-m mime\n\n\nthe mime type, like 'application/octet-stream', which is the default\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Drafts Send"
        }, 
        {
            "location": "/users_drafts-send/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users drafts-send ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_drafts-send/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_drafts-send/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Draft:\n  id: string\n  message:\n    history-id: string\n    id: string\n    internal-date: string\n    label-ids: [string]\n    payload:\n      body:\n        attachment-id: string\n        data: string\n        size: integer\n      filename: string\n      mime-type: string\n      part-id: string\n    raw: string\n    size-estimate: integer\n    snippet: string\n    thread-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    id=dolores  The immutable ID of the draft.    message    history-id=gubergren  The ID of the last history record that modified this message.    id=sadipscing  The immutable ID of the message.    internal-date=aliquyam  The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.    label-ids=ea  List of IDs of labels applied to this message.  Each invocation of this argument appends the given value to the array.    payload.body    attachment-id=no  When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.    data=justo  The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.     size=80   Number of bytes for the message part data (encoding notwithstanding).     ..    filename=et   The filename of the attachment. Only present if this message part represents an attachment.    mime-type=et  The MIME type of the message part.     part-id=diam   The immutable ID of the message part.     ..    raw=ipsum   The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.    size-estimate=96  Estimated size in bytes of the message.    snippet=et  A short part of the message text.    thread-id=duo  The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met:   The requested threadId must be specified on the Message or Draft.Message you supply with your request.   The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.   The Subject headers must match.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_drafts-send/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_drafts-send/#required-upload-flags", 
            "text": "This method supports the upload of data, which  requires  all of the following flags to be set:   -u (simple|resumable)  simple  - Upload media all at once.  resumable  - Upload media in a resumable fashion.    -f file  Path to file to upload. It must be seekable.     The following flag  may  be set:    -m mime  the mime type, like 'application/octet-stream', which is the default", 
            "title": "Required Upload Flags"
        }, 
        {
            "location": "/users_drafts-send/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_drafts-send/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_drafts-update/", 
            "text": "Replaces a draft\ns content.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users drafts-update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the draft to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDraft:\n  id: string\n  message:\n    history-id: string\n    id: string\n    internal-date: string\n    label-ids: [string]\n    payload:\n      body:\n        attachment-id: string\n        data: string\n        size: integer\n      filename: string\n      mime-type: string\n      part-id: string\n    raw: string\n    size-estimate: integer\n    snippet: string\n    thread-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    id=aliquyam\n\n\nThe immutable ID of the draft.\n\n\n\n\n\n\nmessage    history-id=sea\n\n\nThe ID of the last history record that modified this message.\n\n\n\n\n\n\nid=lorem\n\n\nThe immutable ID of the message.\n\n\n\n\n\n\ninternal-date=eos\n\n\nThe internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.\n\n\n\n\n\n\nlabel-ids=erat\n\n\nList of IDs of labels applied to this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\npayload.body    attachment-id=sadipscing\n\n\nWhen present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.\n\n\n\n\n\n\ndata=dolor\n\n\nThe body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.\n\n\n\n\n\n\n\n\nsize=62\n\n\n\n\nNumber of bytes for the message part data (encoding notwithstanding).\n\n\n\n\n\n\n\n\n..    filename=elitr\n\n\n\n\nThe filename of the attachment. Only present if this message part represents an attachment.\n\n\n\n\n\n\nmime-type=amet\n\n\nThe MIME type of the message part.\n\n\n\n\n\n\n\n\npart-id=no\n\n\n\n\nThe immutable ID of the message part.\n\n\n\n\n\n\n\n\n..    raw=labore\n\n\n\n\nThe entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n\n\n\n\n\n\nsize-estimate=62\n\n\nEstimated size in bytes of the message.\n\n\n\n\n\n\nsnippet=dolore\n\n\nA short part of the message text.\n\n\n\n\n\n\nthread-id=invidunt\n\n\nThe ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n\n\nThe requested threadId must be specified on the Message or Draft.Message you supply with your request. \n\n\nThe References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n\n\nThe Subject headers must match.\n\n\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nRequired Upload Flags\n\n\nThis method supports the upload of data, which \nrequires\n all of the following flags to be set:\n\n\n\n\n-u (simple|resumable)\n\n\nsimple\n - Upload media all at once.\n\n\nresumable\n - Upload media in a resumable fashion.\n\n\n\n\n\n\n-f file\n\n\nPath to file to upload. It must be seekable.\n\n\n\n\n\n\n\n\nThe following flag \nmay\n be set: \n\n\n\n\n-m mime\n\n\nthe mime type, like 'application/octet-stream', which is the default\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Drafts Update"
        }, 
        {
            "location": "/users_drafts-update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users drafts-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_drafts-update/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the draft to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_drafts-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Draft:\n  id: string\n  message:\n    history-id: string\n    id: string\n    internal-date: string\n    label-ids: [string]\n    payload:\n      body:\n        attachment-id: string\n        data: string\n        size: integer\n      filename: string\n      mime-type: string\n      part-id: string\n    raw: string\n    size-estimate: integer\n    snippet: string\n    thread-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    id=aliquyam  The immutable ID of the draft.    message    history-id=sea  The ID of the last history record that modified this message.    id=lorem  The immutable ID of the message.    internal-date=eos  The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.    label-ids=erat  List of IDs of labels applied to this message.  Each invocation of this argument appends the given value to the array.    payload.body    attachment-id=sadipscing  When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.    data=dolor  The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.     size=62   Number of bytes for the message part data (encoding notwithstanding).     ..    filename=elitr   The filename of the attachment. Only present if this message part represents an attachment.    mime-type=amet  The MIME type of the message part.     part-id=no   The immutable ID of the message part.     ..    raw=labore   The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.    size-estimate=62  Estimated size in bytes of the message.    snippet=dolore  A short part of the message text.    thread-id=invidunt  The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met:   The requested threadId must be specified on the Message or Draft.Message you supply with your request.   The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.   The Subject headers must match.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_drafts-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_drafts-update/#required-upload-flags", 
            "text": "This method supports the upload of data, which  requires  all of the following flags to be set:   -u (simple|resumable)  simple  - Upload media all at once.  resumable  - Upload media in a resumable fashion.    -f file  Path to file to upload. It must be seekable.     The following flag  may  be set:    -m mime  the mime type, like 'application/octet-stream', which is the default", 
            "title": "Required Upload Flags"
        }, 
        {
            "location": "/users_drafts-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_drafts-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_get-profile/", 
            "text": "Gets the current user\ns Gmail profile.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users get-profile ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get Profile"
        }, 
        {
            "location": "/users_get-profile/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users get-profile ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_get-profile/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_get-profile/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_get-profile/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_history-list/", 
            "text": "Lists the history of all changes to the given mailbox. History results are returned in chronological order (increasing historyId).\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users history-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p start-history-id=string\n\n\n\n\nRequired. Returns history records after the specified startHistoryId. The supplied startHistoryId should be obtained from the historyId of a message, thread, or previous list response. History IDs increase chronologically but are not contiguous with random gaps in between valid IDs. Supplying an invalid or out of date startHistoryId typically returns an HTTP 404 error code. A historyId is typically valid for at least a week, but in some rare circumstances may be valid for only a few hours. If you receive an HTTP 404 error response, your application should perform a full sync. If you receive no nextPageToken in the response, there are no updates to retrieve and you can store the returned historyId for a future request.\n\n\n\n\n\n\n\n\n-p label-id=string\n\n\n\n\nOnly return messages with a label matching the ID.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nPage token to retrieve a specific page of results in the list.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nThe maximum number of history records to return.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "History List"
        }, 
        {
            "location": "/users_history-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users history-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_history-list/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_history-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_history-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p start-history-id=string   Required. Returns history records after the specified startHistoryId. The supplied startHistoryId should be obtained from the historyId of a message, thread, or previous list response. History IDs increase chronologically but are not contiguous with random gaps in between valid IDs. Supplying an invalid or out of date startHistoryId typically returns an HTTP 404 error code. A historyId is typically valid for at least a week, but in some rare circumstances may be valid for only a few hours. If you receive an HTTP 404 error response, your application should perform a full sync. If you receive no nextPageToken in the response, there are no updates to retrieve and you can store the returned historyId for a future request.     -p label-id=string   Only return messages with a label matching the ID.     -p page-token=string   Page token to retrieve a specific page of results in the list.     -p max-results=integer   The maximum number of history records to return.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_history-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_labels-create/", 
            "text": "Creates a new label.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.labels\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users labels-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLabel:\n  id: string\n  label-list-visibility: string\n  message-list-visibility: string\n  messages-total: integer\n  messages-unread: integer\n  name: string\n  threads-total: integer\n  threads-unread: integer\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    id=aliquyam\n\n\nThe immutable ID of the label.\n\n\n\n\n\n\nlabel-list-visibility=accusam\n\n\nThe visibility of the label in the label list in the Gmail web interface.\n\n\n\n\n\n\nmessage-list-visibility=lorem\n\n\nThe visibility of the label in the message list in the Gmail web interface.\n\n\n\n\n\n\nmessages-total=92\n\n\nThe total number of messages with the label.\n\n\n\n\n\n\nmessages-unread=80\n\n\nThe number of unread messages with the label.\n\n\n\n\n\n\nname=duo\n\n\nThe display name of the label.\n\n\n\n\n\n\nthreads-total=80\n\n\nThe total number of threads with the label.\n\n\n\n\n\n\nthreads-unread=61\n\n\nThe number of unread threads with the label.\n\n\n\n\n\n\ntype=sanctus\n\n\nThe owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Labels Create"
        }, 
        {
            "location": "/users_labels-create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.labels  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users labels-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_labels-create/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_labels-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Label:\n  id: string\n  label-list-visibility: string\n  message-list-visibility: string\n  messages-total: integer\n  messages-unread: integer\n  name: string\n  threads-total: integer\n  threads-unread: integer\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    id=aliquyam  The immutable ID of the label.    label-list-visibility=accusam  The visibility of the label in the label list in the Gmail web interface.    message-list-visibility=lorem  The visibility of the label in the message list in the Gmail web interface.    messages-total=92  The total number of messages with the label.    messages-unread=80  The number of unread messages with the label.    name=duo  The display name of the label.    threads-total=80  The total number of threads with the label.    threads-unread=61  The number of unread threads with the label.    type=sanctus  The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_labels-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_labels-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_labels-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_labels-delete/", 
            "text": "Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.labels\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users labels-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the label to delete.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Labels Delete"
        }, 
        {
            "location": "/users_labels-delete/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.labels  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users labels-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_labels-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the label to delete.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_labels-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_labels-get/", 
            "text": "Gets the specified label.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.labels\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users labels-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the label to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Labels Get"
        }, 
        {
            "location": "/users_labels-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.labels  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users labels-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_labels-get/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the label to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_labels-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_labels-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_labels-list/", 
            "text": "Lists all labels in the user\ns mailbox.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.labels\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users labels-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Labels List"
        }, 
        {
            "location": "/users_labels-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.labels  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users labels-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_labels-list/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_labels-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_labels-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_labels-patch/", 
            "text": "Updates the specified label. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.labels\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users labels-patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the label to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLabel:\n  id: string\n  label-list-visibility: string\n  message-list-visibility: string\n  messages-total: integer\n  messages-unread: integer\n  name: string\n  threads-total: integer\n  threads-unread: integer\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    id=et\n\n\nThe immutable ID of the label.\n\n\n\n\n\n\nlabel-list-visibility=amet\n\n\nThe visibility of the label in the label list in the Gmail web interface.\n\n\n\n\n\n\nmessage-list-visibility=et\n\n\nThe visibility of the label in the message list in the Gmail web interface.\n\n\n\n\n\n\nmessages-total=56\n\n\nThe total number of messages with the label.\n\n\n\n\n\n\nmessages-unread=65\n\n\nThe number of unread messages with the label.\n\n\n\n\n\n\nname=ea\n\n\nThe display name of the label.\n\n\n\n\n\n\nthreads-total=21\n\n\nThe total number of threads with the label.\n\n\n\n\n\n\nthreads-unread=98\n\n\nThe number of unread threads with the label.\n\n\n\n\n\n\ntype=dolor\n\n\nThe owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Labels Patch"
        }, 
        {
            "location": "/users_labels-patch/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.labels  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users labels-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_labels-patch/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the label to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_labels-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Label:\n  id: string\n  label-list-visibility: string\n  message-list-visibility: string\n  messages-total: integer\n  messages-unread: integer\n  name: string\n  threads-total: integer\n  threads-unread: integer\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    id=et  The immutable ID of the label.    label-list-visibility=amet  The visibility of the label in the label list in the Gmail web interface.    message-list-visibility=et  The visibility of the label in the message list in the Gmail web interface.    messages-total=56  The total number of messages with the label.    messages-unread=65  The number of unread messages with the label.    name=ea  The display name of the label.    threads-total=21  The total number of threads with the label.    threads-unread=98  The number of unread threads with the label.    type=dolor  The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_labels-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_labels-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_labels-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_labels-update/", 
            "text": "Updates the specified label.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.labels\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users labels-update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the label to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLabel:\n  id: string\n  label-list-visibility: string\n  message-list-visibility: string\n  messages-total: integer\n  messages-unread: integer\n  name: string\n  threads-total: integer\n  threads-unread: integer\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    id=dolor\n\n\nThe immutable ID of the label.\n\n\n\n\n\n\nlabel-list-visibility=et\n\n\nThe visibility of the label in the label list in the Gmail web interface.\n\n\n\n\n\n\nmessage-list-visibility=consetetur\n\n\nThe visibility of the label in the message list in the Gmail web interface.\n\n\n\n\n\n\nmessages-total=49\n\n\nThe total number of messages with the label.\n\n\n\n\n\n\nmessages-unread=74\n\n\nThe number of unread messages with the label.\n\n\n\n\n\n\nname=lorem\n\n\nThe display name of the label.\n\n\n\n\n\n\nthreads-total=90\n\n\nThe total number of threads with the label.\n\n\n\n\n\n\nthreads-unread=81\n\n\nThe number of unread threads with the label.\n\n\n\n\n\n\ntype=sit\n\n\nThe owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Labels Update"
        }, 
        {
            "location": "/users_labels-update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.labels  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users labels-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_labels-update/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the label to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_labels-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Label:\n  id: string\n  label-list-visibility: string\n  message-list-visibility: string\n  messages-total: integer\n  messages-unread: integer\n  name: string\n  threads-total: integer\n  threads-unread: integer\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    id=dolor  The immutable ID of the label.    label-list-visibility=et  The visibility of the label in the label list in the Gmail web interface.    message-list-visibility=consetetur  The visibility of the label in the message list in the Gmail web interface.    messages-total=49  The total number of messages with the label.    messages-unread=74  The number of unread messages with the label.    name=lorem  The display name of the label.    threads-total=90  The total number of threads with the label.    threads-unread=81  The number of unread threads with the label.    type=sit  The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_labels-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_labels-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_labels-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-attachments-get/", 
            "text": "Gets the specified message attachment.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-attachments-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nmessage-id\n \n(string)\n\n\nThe ID of the message containing the attachment.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the attachment.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Attachments Get"
        }, 
        {
            "location": "/users_messages-attachments-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-attachments-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-attachments-get/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    message-id   (string)  The ID of the message containing the attachment.    id   (string)  The ID of the attachment.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_messages-attachments-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-attachments-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-batch-delete/", 
            "text": "Deletes many messages by message ID. Provides no guarantees that messages were not already deleted or even existed at all.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://mail.google.com/\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-batch-delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchDeleteMessagesRequest:\n  ids: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    ids=vero\n\n\nThe IDs of the messages to delete.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Batch Delete"
        }, 
        {
            "location": "/users_messages-batch-delete/#scopes", 
            "text": "You will need authorization for the  https://mail.google.com/  scope to make a valid call.  If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-batch-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-batch-delete/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_messages-batch-delete/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchDeleteMessagesRequest:\n  ids: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    ids=vero  The IDs of the messages to delete.  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_messages-batch-delete/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_messages-batch-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-batch-modify/", 
            "text": "Modifies the labels on the specified messages.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-batch-modify ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchModifyMessagesRequest:\n  add-label-ids: [string]\n  ids: [string]\n  remove-label-ids: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    add-label-ids=diam\n\n\nA list of label IDs to add to messages.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nids=rebum.\n\n\nThe IDs of the messages to modify. There is a limit of 1000 ids per request.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nremove-label-ids=consetetur\n\n\nA list of label IDs to remove from messages.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Batch Modify"
        }, 
        {
            "location": "/users_messages-batch-modify/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-batch-modify ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-batch-modify/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_messages-batch-modify/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchModifyMessagesRequest:\n  add-label-ids: [string]\n  ids: [string]\n  remove-label-ids: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    add-label-ids=diam  A list of label IDs to add to messages.  Each invocation of this argument appends the given value to the array.    ids=rebum.  The IDs of the messages to modify. There is a limit of 1000 ids per request.  Each invocation of this argument appends the given value to the array.    remove-label-ids=consetetur  A list of label IDs to remove from messages.  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_messages-batch-modify/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_messages-batch-modify/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-delete/", 
            "text": "Immediately and permanently deletes the specified message. This operation cannot be undone. Prefer messages.trash instead.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://mail.google.com/\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the message to delete.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Delete"
        }, 
        {
            "location": "/users_messages-delete/#scopes", 
            "text": "You will need authorization for the  https://mail.google.com/  scope to make a valid call.  If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the message to delete.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_messages-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-get/", 
            "text": "Gets the specified message.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the message to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p format=string\n\n\n\n\nThe format to return the message in.\n\n\n\n\n\n\n\n\n-p metadata-headers=string\n\n\n\n\nWhen given and format is METADATA, only include headers specified.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Get"
        }, 
        {
            "location": "/users_messages-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-get/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the message to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_messages-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p format=string   The format to return the message in.     -p metadata-headers=string   When given and format is METADATA, only include headers specified.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_messages-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-import/", 
            "text": "Imports a message into only this user\ns mailbox, with standard email delivery scanning and classification similar to receiving via SMTP. Does not send a message.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.insert\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-import ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nMessage:\n  history-id: string\n  id: string\n  internal-date: string\n  label-ids: [string]\n  payload:\n    body:\n      attachment-id: string\n      data: string\n      size: integer\n    filename: string\n    mime-type: string\n    part-id: string\n  raw: string\n  size-estimate: integer\n  snippet: string\n  thread-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    history-id=sadipscing\n\n\nThe ID of the last history record that modified this message.\n\n\n\n\n\n\nid=vero\n\n\nThe immutable ID of the message.\n\n\n\n\n\n\ninternal-date=sadipscing\n\n\nThe internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.\n\n\n\n\n\n\nlabel-ids=invidunt\n\n\nList of IDs of labels applied to this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\npayload.body    attachment-id=consetetur\n\n\nWhen present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.\n\n\n\n\n\n\ndata=dolore\n\n\nThe body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.\n\n\n\n\n\n\n\n\nsize=82\n\n\n\n\nNumber of bytes for the message part data (encoding notwithstanding).\n\n\n\n\n\n\n\n\n..    filename=aliquyam\n\n\n\n\nThe filename of the attachment. Only present if this message part represents an attachment.\n\n\n\n\n\n\nmime-type=lorem\n\n\nThe MIME type of the message part.\n\n\n\n\n\n\n\n\npart-id=et\n\n\n\n\nThe immutable ID of the message part.\n\n\n\n\n\n\n\n\n..    raw=clita\n\n\n\n\nThe entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n\n\n\n\n\n\nsize-estimate=56\n\n\nEstimated size in bytes of the message.\n\n\n\n\n\n\nsnippet=takimata\n\n\nA short part of the message text.\n\n\n\n\n\n\nthread-id=nonumy\n\n\nThe ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n\n\nThe requested threadId must be specified on the Message or Draft.Message you supply with your request. \n\n\nThe References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n\n\nThe Subject headers must match.\n\n\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nRequired Upload Flags\n\n\nThis method supports the upload of data, which \nrequires\n all of the following flags to be set:\n\n\n\n\n-u (simple|resumable)\n\n\nsimple\n - Upload media all at once.\n\n\nresumable\n - Upload media in a resumable fashion.\n\n\n\n\n\n\n-f file\n\n\nPath to file to upload. It must be seekable.\n\n\n\n\n\n\n\n\nThe following flag \nmay\n be set: \n\n\n\n\n-m mime\n\n\nthe mime type, like 'application/octet-stream', which is the default\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p deleted=boolean\n\n\n\n\nMark the email as permanently deleted (not TRASH) and only visible in Google Apps Vault to a Vault administrator. Only used for Google Apps for Work accounts.\n\n\n\n\n\n\n\n\n-p internal-date-source=string\n\n\n\n\nSource for Gmail\ns internal date of the message.\n\n\n\n\n\n\n\n\n-p never-mark-spam=boolean\n\n\n\n\nIgnore the Gmail spam classifier decision and never mark this email as SPAM in the mailbox.\n\n\n\n\n\n\n\n\n-p process-for-calendar=boolean\n\n\n\n\nProcess calendar invites in the email and add any extracted meetings to the Google Calendar for this user.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Import"
        }, 
        {
            "location": "/users_messages-import/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.insert  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-import ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-import/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_messages-import/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Message:\n  history-id: string\n  id: string\n  internal-date: string\n  label-ids: [string]\n  payload:\n    body:\n      attachment-id: string\n      data: string\n      size: integer\n    filename: string\n    mime-type: string\n    part-id: string\n  raw: string\n  size-estimate: integer\n  snippet: string\n  thread-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    history-id=sadipscing  The ID of the last history record that modified this message.    id=vero  The immutable ID of the message.    internal-date=sadipscing  The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.    label-ids=invidunt  List of IDs of labels applied to this message.  Each invocation of this argument appends the given value to the array.    payload.body    attachment-id=consetetur  When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.    data=dolore  The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.     size=82   Number of bytes for the message part data (encoding notwithstanding).     ..    filename=aliquyam   The filename of the attachment. Only present if this message part represents an attachment.    mime-type=lorem  The MIME type of the message part.     part-id=et   The immutable ID of the message part.     ..    raw=clita   The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.    size-estimate=56  Estimated size in bytes of the message.    snippet=takimata  A short part of the message text.    thread-id=nonumy  The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met:   The requested threadId must be specified on the Message or Draft.Message you supply with your request.   The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.   The Subject headers must match.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_messages-import/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_messages-import/#required-upload-flags", 
            "text": "This method supports the upload of data, which  requires  all of the following flags to be set:   -u (simple|resumable)  simple  - Upload media all at once.  resumable  - Upload media in a resumable fashion.    -f file  Path to file to upload. It must be seekable.     The following flag  may  be set:    -m mime  the mime type, like 'application/octet-stream', which is the default", 
            "title": "Required Upload Flags"
        }, 
        {
            "location": "/users_messages-import/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-import/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p deleted=boolean   Mark the email as permanently deleted (not TRASH) and only visible in Google Apps Vault to a Vault administrator. Only used for Google Apps for Work accounts.     -p internal-date-source=string   Source for Gmail s internal date of the message.     -p never-mark-spam=boolean   Ignore the Gmail spam classifier decision and never mark this email as SPAM in the mailbox.     -p process-for-calendar=boolean   Process calendar invites in the email and add any extracted meetings to the Google Calendar for this user.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_messages-import/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-insert/", 
            "text": "Directly inserts a message into only this user\ns mailbox similar to IMAP APPEND, bypassing most scanning and classification. Does not send a message.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.insert\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-insert ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nMessage:\n  history-id: string\n  id: string\n  internal-date: string\n  label-ids: [string]\n  payload:\n    body:\n      attachment-id: string\n      data: string\n      size: integer\n    filename: string\n    mime-type: string\n    part-id: string\n  raw: string\n  size-estimate: integer\n  snippet: string\n  thread-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    history-id=kasd\n\n\nThe ID of the last history record that modified this message.\n\n\n\n\n\n\nid=sanctus\n\n\nThe immutable ID of the message.\n\n\n\n\n\n\ninternal-date=takimata\n\n\nThe internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.\n\n\n\n\n\n\nlabel-ids=at\n\n\nList of IDs of labels applied to this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\npayload.body    attachment-id=labore\n\n\nWhen present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.\n\n\n\n\n\n\ndata=invidunt\n\n\nThe body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.\n\n\n\n\n\n\n\n\nsize=35\n\n\n\n\nNumber of bytes for the message part data (encoding notwithstanding).\n\n\n\n\n\n\n\n\n..    filename=sadipscing\n\n\n\n\nThe filename of the attachment. Only present if this message part represents an attachment.\n\n\n\n\n\n\nmime-type=rebum.\n\n\nThe MIME type of the message part.\n\n\n\n\n\n\n\n\npart-id=dolore\n\n\n\n\nThe immutable ID of the message part.\n\n\n\n\n\n\n\n\n..    raw=nonumy\n\n\n\n\nThe entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n\n\n\n\n\n\nsize-estimate=72\n\n\nEstimated size in bytes of the message.\n\n\n\n\n\n\nsnippet=aliquyam\n\n\nA short part of the message text.\n\n\n\n\n\n\nthread-id=sit\n\n\nThe ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n\n\nThe requested threadId must be specified on the Message or Draft.Message you supply with your request. \n\n\nThe References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n\n\nThe Subject headers must match.\n\n\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nRequired Upload Flags\n\n\nThis method supports the upload of data, which \nrequires\n all of the following flags to be set:\n\n\n\n\n-u (simple|resumable)\n\n\nsimple\n - Upload media all at once.\n\n\nresumable\n - Upload media in a resumable fashion.\n\n\n\n\n\n\n-f file\n\n\nPath to file to upload. It must be seekable.\n\n\n\n\n\n\n\n\nThe following flag \nmay\n be set: \n\n\n\n\n-m mime\n\n\nthe mime type, like 'application/octet-stream', which is the default\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p internal-date-source=string\n\n\n\n\nSource for Gmail\ns internal date of the message.\n\n\n\n\n\n\n\n\n-p deleted=boolean\n\n\n\n\nMark the email as permanently deleted (not TRASH) and only visible in Google Apps Vault to a Vault administrator. Only used for Google Apps for Work accounts.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Insert"
        }, 
        {
            "location": "/users_messages-insert/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.insert  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-insert/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_messages-insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Message:\n  history-id: string\n  id: string\n  internal-date: string\n  label-ids: [string]\n  payload:\n    body:\n      attachment-id: string\n      data: string\n      size: integer\n    filename: string\n    mime-type: string\n    part-id: string\n  raw: string\n  size-estimate: integer\n  snippet: string\n  thread-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    history-id=kasd  The ID of the last history record that modified this message.    id=sanctus  The immutable ID of the message.    internal-date=takimata  The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.    label-ids=at  List of IDs of labels applied to this message.  Each invocation of this argument appends the given value to the array.    payload.body    attachment-id=labore  When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.    data=invidunt  The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.     size=35   Number of bytes for the message part data (encoding notwithstanding).     ..    filename=sadipscing   The filename of the attachment. Only present if this message part represents an attachment.    mime-type=rebum.  The MIME type of the message part.     part-id=dolore   The immutable ID of the message part.     ..    raw=nonumy   The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.    size-estimate=72  Estimated size in bytes of the message.    snippet=aliquyam  A short part of the message text.    thread-id=sit  The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met:   The requested threadId must be specified on the Message or Draft.Message you supply with your request.   The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.   The Subject headers must match.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_messages-insert/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_messages-insert/#required-upload-flags", 
            "text": "This method supports the upload of data, which  requires  all of the following flags to be set:   -u (simple|resumable)  simple  - Upload media all at once.  resumable  - Upload media in a resumable fashion.    -f file  Path to file to upload. It must be seekable.     The following flag  may  be set:    -m mime  the mime type, like 'application/octet-stream', which is the default", 
            "title": "Required Upload Flags"
        }, 
        {
            "location": "/users_messages-insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-insert/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p internal-date-source=string   Source for Gmail s internal date of the message.     -p deleted=boolean   Mark the email as permanently deleted (not TRASH) and only visible in Google Apps Vault to a Vault administrator. Only used for Google Apps for Work accounts.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_messages-insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-list/", 
            "text": "Lists the messages in the user\ns mailbox.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of messages to return.\n\n\n\n\n\n\n\n\n-p q=string\n\n\n\n\nOnly return messages matching the specified query. Supports the same query format as the Gmail search box. For example, \nfrom:someuser@example.com rfc822msgid: is:unread\n. Parameter cannot be used when accessing the api using the gmail.metadata scope.\n\n\n\n\n\n\n\n\n-p label-ids=string\n\n\n\n\nOnly return messages with labels that match all of the specified label IDs.\n\n\n\n\n\n\n\n\n-p include-spam-trash=boolean\n\n\n\n\nInclude messages from SPAM and TRASH in the results.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nPage token to retrieve a specific page of results in the list.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages List"
        }, 
        {
            "location": "/users_messages-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-list/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_messages-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p max-results=integer   Maximum number of messages to return.     -p q=string   Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example,  from:someuser@example.com rfc822msgid: is:unread . Parameter cannot be used when accessing the api using the gmail.metadata scope.     -p label-ids=string   Only return messages with labels that match all of the specified label IDs.     -p include-spam-trash=boolean   Include messages from SPAM and TRASH in the results.     -p page-token=string   Page token to retrieve a specific page of results in the list.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_messages-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-modify/", 
            "text": "Modifies the labels on the specified message.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-modify ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the message to modify.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nModifyMessageRequest:\n  add-label-ids: [string]\n  remove-label-ids: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    add-label-ids=eirmod\n\n\nA list of IDs of labels to add to this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nremove-label-ids=consetetur\n\n\nA list IDs of labels to remove from this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Modify"
        }, 
        {
            "location": "/users_messages-modify/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-modify ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-modify/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the message to modify.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_messages-modify/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ModifyMessageRequest:\n  add-label-ids: [string]\n  remove-label-ids: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    add-label-ids=eirmod  A list of IDs of labels to add to this message.  Each invocation of this argument appends the given value to the array.    remove-label-ids=consetetur  A list IDs of labels to remove from this message.  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_messages-modify/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_messages-modify/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-modify/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-send/", 
            "text": "Sends the specified message to the recipients in the To, Cc, and Bcc headers.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.compose\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.send\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-send ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nMessage:\n  history-id: string\n  id: string\n  internal-date: string\n  label-ids: [string]\n  payload:\n    body:\n      attachment-id: string\n      data: string\n      size: integer\n    filename: string\n    mime-type: string\n    part-id: string\n  raw: string\n  size-estimate: integer\n  snippet: string\n  thread-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    history-id=labore\n\n\nThe ID of the last history record that modified this message.\n\n\n\n\n\n\nid=sed\n\n\nThe immutable ID of the message.\n\n\n\n\n\n\ninternal-date=ea\n\n\nThe internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.\n\n\n\n\n\n\nlabel-ids=gubergren\n\n\nList of IDs of labels applied to this message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\npayload.body    attachment-id=aliquyam\n\n\nWhen present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.\n\n\n\n\n\n\ndata=eos\n\n\nThe body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.\n\n\n\n\n\n\n\n\nsize=63\n\n\n\n\nNumber of bytes for the message part data (encoding notwithstanding).\n\n\n\n\n\n\n\n\n..    filename=sea\n\n\n\n\nThe filename of the attachment. Only present if this message part represents an attachment.\n\n\n\n\n\n\nmime-type=labore\n\n\nThe MIME type of the message part.\n\n\n\n\n\n\n\n\npart-id=ipsum\n\n\n\n\nThe immutable ID of the message part.\n\n\n\n\n\n\n\n\n..    raw=aliquyam\n\n\n\n\nThe entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n\n\n\n\n\n\nsize-estimate=32\n\n\nEstimated size in bytes of the message.\n\n\n\n\n\n\nsnippet=sit\n\n\nA short part of the message text.\n\n\n\n\n\n\nthread-id=diam\n\n\nThe ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: \n\n\nThe requested threadId must be specified on the Message or Draft.Message you supply with your request. \n\n\nThe References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. \n\n\nThe Subject headers must match.\n\n\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nRequired Upload Flags\n\n\nThis method supports the upload of data, which \nrequires\n all of the following flags to be set:\n\n\n\n\n-u (simple|resumable)\n\n\nsimple\n - Upload media all at once.\n\n\nresumable\n - Upload media in a resumable fashion.\n\n\n\n\n\n\n-f file\n\n\nPath to file to upload. It must be seekable.\n\n\n\n\n\n\n\n\nThe following flag \nmay\n be set: \n\n\n\n\n-m mime\n\n\nthe mime type, like 'application/octet-stream', which is the default\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Send"
        }, 
        {
            "location": "/users_messages-send/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.compose  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.send   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-send ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-send/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_messages-send/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Message:\n  history-id: string\n  id: string\n  internal-date: string\n  label-ids: [string]\n  payload:\n    body:\n      attachment-id: string\n      data: string\n      size: integer\n    filename: string\n    mime-type: string\n    part-id: string\n  raw: string\n  size-estimate: integer\n  snippet: string\n  thread-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    history-id=labore  The ID of the last history record that modified this message.    id=sed  The immutable ID of the message.    internal-date=ea  The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.    label-ids=gubergren  List of IDs of labels applied to this message.  Each invocation of this argument appends the given value to the array.    payload.body    attachment-id=aliquyam  When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.    data=eos  The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.     size=63   Number of bytes for the message part data (encoding notwithstanding).     ..    filename=sea   The filename of the attachment. Only present if this message part represents an attachment.    mime-type=labore  The MIME type of the message part.     part-id=ipsum   The immutable ID of the message part.     ..    raw=aliquyam   The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.    size-estimate=32  Estimated size in bytes of the message.    snippet=sit  A short part of the message text.    thread-id=diam  The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met:   The requested threadId must be specified on the Message or Draft.Message you supply with your request.   The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.   The Subject headers must match.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_messages-send/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_messages-send/#required-upload-flags", 
            "text": "This method supports the upload of data, which  requires  all of the following flags to be set:   -u (simple|resumable)  simple  - Upload media all at once.  resumable  - Upload media in a resumable fashion.    -f file  Path to file to upload. It must be seekable.     The following flag  may  be set:    -m mime  the mime type, like 'application/octet-stream', which is the default", 
            "title": "Required Upload Flags"
        }, 
        {
            "location": "/users_messages-send/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-send/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-trash/", 
            "text": "Moves the specified message to the trash.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-trash ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the message to Trash.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Trash"
        }, 
        {
            "location": "/users_messages-trash/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-trash ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-trash/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the message to Trash.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_messages-trash/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-trash/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_messages-untrash/", 
            "text": "Removes the specified message from the trash.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users messages-untrash ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the message to remove from Trash.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Messages Untrash"
        }, 
        {
            "location": "/users_messages-untrash/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users messages-untrash ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_messages-untrash/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the message to remove from Trash.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_messages-untrash/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_messages-untrash/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-filters-create/", 
            "text": "Creates a filter.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.basic\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.basic\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-filters-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nFilter:\n  action:\n    add-label-ids: [string]\n    forward: string\n    remove-label-ids: [string]\n  criteria:\n    exclude-chats: boolean\n    from: string\n    has-attachment: boolean\n    negated-query: string\n    query: string\n    size: integer\n    size-comparison: string\n    subject: string\n    to: string\n  id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .action    add-label-ids=ut\n\n\nList of labels to add to the message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nforward=justo\n\n\nEmail address that the message should be forwarded to.\n\n\n\n\n\n\n\n\nremove-label-ids=est\n\n\n\n\nList of labels to remove from the message.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\n..criteria    exclude-chats=true\n\n\n\n\nWhether the response should exclude chats.\n\n\n\n\n\n\nfrom=accusam\n\n\nThe sender\ns display name or email address.\n\n\n\n\n\n\nhas-attachment=true\n\n\nWhether the message has any attachment.\n\n\n\n\n\n\nnegated-query=diam\n\n\nOnly return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, \nfrom:someuser@example.com rfc822msgid: is:unread\n.\n\n\n\n\n\n\nquery=justo\n\n\nOnly return messages matching the specified query. Supports the same query format as the Gmail search box. For example, \nfrom:someuser@example.com rfc822msgid: is:unread\n.\n\n\n\n\n\n\nsize=44\n\n\nThe size of the entire RFC822 message in bytes, including all headers and attachments.\n\n\n\n\n\n\nsize-comparison=clita\n\n\nHow the message size in bytes should be in relation to the size field.\n\n\n\n\n\n\nsubject=invidunt\n\n\nCase-insensitive phrase found in the message\ns subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.\n\n\n\n\n\n\n\n\nto=ut\n\n\n\n\nThe recipient\ns display name or email address. Includes recipients in the \nto\n, \ncc\n, and \nbcc\n header fields. You can use simply the local part of the email address. For example, \nexample\n and \nexample@\n both match \nexample@gmail.com\n. This field is case-insensitive.\n\n\n\n\n\n\n\n\n..    id=dolores\n\n\n\n\nThe server assigned ID of the filter.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Filters Create"
        }, 
        {
            "location": "/users_settings-filters-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.basic  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.basic .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-filters-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-filters-create/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-filters-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Filter:\n  action:\n    add-label-ids: [string]\n    forward: string\n    remove-label-ids: [string]\n  criteria:\n    exclude-chats: boolean\n    from: string\n    has-attachment: boolean\n    negated-query: string\n    query: string\n    size: integer\n    size-comparison: string\n    subject: string\n    to: string\n  id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .action    add-label-ids=ut  List of labels to add to the message.  Each invocation of this argument appends the given value to the array.    forward=justo  Email address that the message should be forwarded to.     remove-label-ids=est   List of labels to remove from the message.  Each invocation of this argument appends the given value to the array.     ..criteria    exclude-chats=true   Whether the response should exclude chats.    from=accusam  The sender s display name or email address.    has-attachment=true  Whether the message has any attachment.    negated-query=diam  Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example,  from:someuser@example.com rfc822msgid: is:unread .    query=justo  Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example,  from:someuser@example.com rfc822msgid: is:unread .    size=44  The size of the entire RFC822 message in bytes, including all headers and attachments.    size-comparison=clita  How the message size in bytes should be in relation to the size field.    subject=invidunt  Case-insensitive phrase found in the message s subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.     to=ut   The recipient s display name or email address. Includes recipients in the  to ,  cc , and  bcc  header fields. You can use simply the local part of the email address. For example,  example  and  example@  both match  example@gmail.com . This field is case-insensitive.     ..    id=dolores   The server assigned ID of the filter.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-filters-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-filters-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-filters-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-filters-delete/", 
            "text": "Deletes a filter.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.basic\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.basic\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-filters-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the filter to be deleted.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Filters Delete"
        }, 
        {
            "location": "/users_settings-filters-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.basic  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.basic .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-filters-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-filters-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    id   (string)  The ID of the filter to be deleted.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-filters-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-filters-get/", 
            "text": "Gets a filter.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-filters-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the filter to be fetched.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Filters Get"
        }, 
        {
            "location": "/users_settings-filters-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-filters-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-filters-get/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    id   (string)  The ID of the filter to be fetched.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-filters-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-filters-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-filters-list/", 
            "text": "Lists the message filters of a Gmail user.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-filters-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Filters List"
        }, 
        {
            "location": "/users_settings-filters-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-filters-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-filters-list/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-filters-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-filters-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-create/", 
            "text": "Creates a forwarding address. If ownership verification is required, a message will be sent to the recipient and the resource\ns verification status will be set to pending; otherwise, the resource will be created with verification status set to accepted.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-forwarding-addresses-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nForwardingAddress:\n  forwarding-email: string\n  verification-status: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    forwarding-email=eos\n\n\nAn email address to which messages can be forwarded.\n\n\n\n\n\n\nverification-status=voluptua.\n\n\nIndicates whether this address has been verified and is usable for forwarding. Read-only.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Forwarding Addresses Create"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.sharing .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-forwarding-addresses-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-create/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ForwardingAddress:\n  forwarding-email: string\n  verification-status: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    forwarding-email=eos  An email address to which messages can be forwarded.    verification-status=voluptua.  Indicates whether this address has been verified and is usable for forwarding. Read-only.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-delete/", 
            "text": "Deletes the specified forwarding address and revokes any verification that may have been required.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-forwarding-addresses-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nforwarding-email\n \n(string)\n\n\nThe forwarding address to be deleted.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Forwarding Addresses Delete"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.sharing .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-forwarding-addresses-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    forwarding-email   (string)  The forwarding address to be deleted.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-get/", 
            "text": "Gets the specified forwarding address.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-forwarding-addresses-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nforwarding-email\n \n(string)\n\n\nThe forwarding address to be retrieved.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Forwarding Addresses Get"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-forwarding-addresses-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-get/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    forwarding-email   (string)  The forwarding address to be retrieved.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-list/", 
            "text": "Lists the forwarding addresses for the specified account.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-forwarding-addresses-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Forwarding Addresses List"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-forwarding-addresses-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-list/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-forwarding-addresses-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-get-auto-forwarding/", 
            "text": "Gets the auto-forwarding setting for the specified account.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-get-auto-forwarding ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Get Auto Forwarding"
        }, 
        {
            "location": "/users_settings-get-auto-forwarding/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-get-auto-forwarding ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-get-auto-forwarding/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-get-auto-forwarding/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-get-auto-forwarding/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-get-imap/", 
            "text": "Gets IMAP settings.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-get-imap ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Get Imap"
        }, 
        {
            "location": "/users_settings-get-imap/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-get-imap ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-get-imap/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-get-imap/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-get-imap/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-get-pop/", 
            "text": "Gets POP settings.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-get-pop ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Get Pop"
        }, 
        {
            "location": "/users_settings-get-pop/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-get-pop ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-get-pop/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-get-pop/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-get-pop/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-get-vacation/", 
            "text": "Gets vacation responder settings.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-get-vacation ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Get Vacation"
        }, 
        {
            "location": "/users_settings-get-vacation/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-get-vacation ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-get-vacation/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-get-vacation/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-get-vacation/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-send-as-create/", 
            "text": "Creates a custom \nfrom\n send-as alias. If an SMTP MSA is specified, Gmail will attempt to connect to the SMTP service to validate the configuration before creating the alias. If ownership verification is required for the alias, a message will be sent to the email address and the resource\ns verification status will be set to pending; otherwise, the resource will be created with verification status set to accepted. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-send-as-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSendAs:\n  display-name: string\n  is-default: boolean\n  is-primary: boolean\n  reply-to-address: string\n  send-as-email: string\n  signature: string\n  smtp-msa:\n    host: string\n    password: string\n    port: integer\n    security-mode: string\n    username: string\n  treat-as-alias: boolean\n  verification-status: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    display-name=duo\n\n\nA name that appears in the \nFrom:\n header for mail sent using this alias. For custom \nfrom\n addresses, when this is empty, Gmail will populate the \nFrom:\n header with the name that is used for the primary address associated with the account.\n\n\n\n\n\n\nis-default=false\n\n\nWhether this address is selected as the default \nFrom:\n address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.\n\n\n\n\n\n\nis-primary=true\n\n\nWhether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.\n\n\n\n\n\n\nreply-to-address=ea\n\n\nAn optional email address that is included in a \nReply-To:\n header for mail sent using this alias. If this is empty, Gmail will not generate a \nReply-To:\n header.\n\n\n\n\n\n\nsend-as-email=ea\n\n\nThe email address that appears in the \nFrom:\n header for mail sent using this alias. This is read-only for all operations except create.\n\n\n\n\n\n\nsignature=et\n\n\nAn optional HTML signature that is included in messages composed with this alias in the Gmail web UI.\n\n\n\n\n\n\nsmtp-msa    host=dolor\n\n\nThe hostname of the SMTP service. Required.\n\n\n\n\n\n\npassword=diam\n\n\nThe password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.\n\n\n\n\n\n\nport=39\n\n\nThe port of the SMTP service. Required.\n\n\n\n\n\n\nsecurity-mode=invidunt\n\n\nThe protocol that will be used to secure communication with the SMTP service. Required.\n\n\n\n\n\n\n\n\nusername=rebum.\n\n\n\n\nThe username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.\n\n\n\n\n\n\n\n\n..    treat-as-alias=true\n\n\n\n\nWhether Gmail should  treat this address as an alias for the user\ns primary email address. This setting only applies to custom \nfrom\n aliases.\n\n\n\n\n\n\nverification-status=clita\n\n\nIndicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom \nfrom\n aliases.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Send As Create"
        }, 
        {
            "location": "/users_settings-send-as-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.sharing .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-send-as-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-send-as-create/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-send-as-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SendAs:\n  display-name: string\n  is-default: boolean\n  is-primary: boolean\n  reply-to-address: string\n  send-as-email: string\n  signature: string\n  smtp-msa:\n    host: string\n    password: string\n    port: integer\n    security-mode: string\n    username: string\n  treat-as-alias: boolean\n  verification-status: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    display-name=duo  A name that appears in the  From:  header for mail sent using this alias. For custom  from  addresses, when this is empty, Gmail will populate the  From:  header with the name that is used for the primary address associated with the account.    is-default=false  Whether this address is selected as the default  From:  address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.    is-primary=true  Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.    reply-to-address=ea  An optional email address that is included in a  Reply-To:  header for mail sent using this alias. If this is empty, Gmail will not generate a  Reply-To:  header.    send-as-email=ea  The email address that appears in the  From:  header for mail sent using this alias. This is read-only for all operations except create.    signature=et  An optional HTML signature that is included in messages composed with this alias in the Gmail web UI.    smtp-msa    host=dolor  The hostname of the SMTP service. Required.    password=diam  The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.    port=39  The port of the SMTP service. Required.    security-mode=invidunt  The protocol that will be used to secure communication with the SMTP service. Required.     username=rebum.   The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.     ..    treat-as-alias=true   Whether Gmail should  treat this address as an alias for the user s primary email address. This setting only applies to custom  from  aliases.    verification-status=clita  Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom  from  aliases.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-send-as-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-send-as-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-send-as-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-send-as-delete/", 
            "text": "Deletes the specified send-as alias. Revokes any verification that may have been required for using it.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-send-as-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nsend-as-email\n \n(string)\n\n\nThe send-as alias to be deleted.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Send As Delete"
        }, 
        {
            "location": "/users_settings-send-as-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.sharing .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-send-as-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-send-as-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    send-as-email   (string)  The send-as alias to be deleted.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-send-as-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-send-as-get/", 
            "text": "Gets the specified send-as alias. Fails with an HTTP 404 error if the specified address is not a member of the collection.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-send-as-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nsend-as-email\n \n(string)\n\n\nThe send-as alias to be retrieved.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Send As Get"
        }, 
        {
            "location": "/users_settings-send-as-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-send-as-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-send-as-get/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    send-as-email   (string)  The send-as alias to be retrieved.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-send-as-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-send-as-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-send-as-list/", 
            "text": "Lists the send-as aliases for the specified account. The result includes the primary send-as address associated with the account as well as any custom \nfrom\n aliases.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-send-as-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Send As List"
        }, 
        {
            "location": "/users_settings-send-as-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly  https://www.googleapis.com/auth/gmail.settings.basic   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-send-as-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-send-as-list/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-send-as-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-send-as-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-send-as-patch/", 
            "text": "Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\nhttps://www.googleapis.com/auth/gmail.settings.sharing\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.basic\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-send-as-patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nsend-as-email\n \n(string)\n\n\nThe send-as alias to be updated.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSendAs:\n  display-name: string\n  is-default: boolean\n  is-primary: boolean\n  reply-to-address: string\n  send-as-email: string\n  signature: string\n  smtp-msa:\n    host: string\n    password: string\n    port: integer\n    security-mode: string\n    username: string\n  treat-as-alias: boolean\n  verification-status: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    display-name=invidunt\n\n\nA name that appears in the \nFrom:\n header for mail sent using this alias. For custom \nfrom\n addresses, when this is empty, Gmail will populate the \nFrom:\n header with the name that is used for the primary address associated with the account.\n\n\n\n\n\n\nis-default=false\n\n\nWhether this address is selected as the default \nFrom:\n address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.\n\n\n\n\n\n\nis-primary=false\n\n\nWhether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.\n\n\n\n\n\n\nreply-to-address=consetetur\n\n\nAn optional email address that is included in a \nReply-To:\n header for mail sent using this alias. If this is empty, Gmail will not generate a \nReply-To:\n header.\n\n\n\n\n\n\nsend-as-email=et\n\n\nThe email address that appears in the \nFrom:\n header for mail sent using this alias. This is read-only for all operations except create.\n\n\n\n\n\n\nsignature=sed\n\n\nAn optional HTML signature that is included in messages composed with this alias in the Gmail web UI.\n\n\n\n\n\n\nsmtp-msa    host=sit\n\n\nThe hostname of the SMTP service. Required.\n\n\n\n\n\n\npassword=takimata\n\n\nThe password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.\n\n\n\n\n\n\nport=58\n\n\nThe port of the SMTP service. Required.\n\n\n\n\n\n\nsecurity-mode=nonumy\n\n\nThe protocol that will be used to secure communication with the SMTP service. Required.\n\n\n\n\n\n\n\n\nusername=rebum.\n\n\n\n\nThe username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.\n\n\n\n\n\n\n\n\n..    treat-as-alias=true\n\n\n\n\nWhether Gmail should  treat this address as an alias for the user\ns primary email address. This setting only applies to custom \nfrom\n aliases.\n\n\n\n\n\n\nverification-status=lorem\n\n\nIndicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom \nfrom\n aliases.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Send As Patch"
        }, 
        {
            "location": "/users_settings-send-as-patch/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/gmail.settings.basic  https://www.googleapis.com/auth/gmail.settings.sharing   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.basic .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-send-as-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-send-as-patch/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    send-as-email   (string)  The send-as alias to be updated.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-send-as-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SendAs:\n  display-name: string\n  is-default: boolean\n  is-primary: boolean\n  reply-to-address: string\n  send-as-email: string\n  signature: string\n  smtp-msa:\n    host: string\n    password: string\n    port: integer\n    security-mode: string\n    username: string\n  treat-as-alias: boolean\n  verification-status: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    display-name=invidunt  A name that appears in the  From:  header for mail sent using this alias. For custom  from  addresses, when this is empty, Gmail will populate the  From:  header with the name that is used for the primary address associated with the account.    is-default=false  Whether this address is selected as the default  From:  address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.    is-primary=false  Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.    reply-to-address=consetetur  An optional email address that is included in a  Reply-To:  header for mail sent using this alias. If this is empty, Gmail will not generate a  Reply-To:  header.    send-as-email=et  The email address that appears in the  From:  header for mail sent using this alias. This is read-only for all operations except create.    signature=sed  An optional HTML signature that is included in messages composed with this alias in the Gmail web UI.    smtp-msa    host=sit  The hostname of the SMTP service. Required.    password=takimata  The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.    port=58  The port of the SMTP service. Required.    security-mode=nonumy  The protocol that will be used to secure communication with the SMTP service. Required.     username=rebum.   The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.     ..    treat-as-alias=true   Whether Gmail should  treat this address as an alias for the user s primary email address. This setting only applies to custom  from  aliases.    verification-status=lorem  Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom  from  aliases.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-send-as-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-send-as-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-send-as-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-send-as-update/", 
            "text": "Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/gmail.settings.basic\n\n\nhttps://www.googleapis.com/auth/gmail.settings.sharing\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.basic\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-send-as-update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nsend-as-email\n \n(string)\n\n\nThe send-as alias to be updated.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSendAs:\n  display-name: string\n  is-default: boolean\n  is-primary: boolean\n  reply-to-address: string\n  send-as-email: string\n  signature: string\n  smtp-msa:\n    host: string\n    password: string\n    port: integer\n    security-mode: string\n    username: string\n  treat-as-alias: boolean\n  verification-status: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    display-name=diam\n\n\nA name that appears in the \nFrom:\n header for mail sent using this alias. For custom \nfrom\n addresses, when this is empty, Gmail will populate the \nFrom:\n header with the name that is used for the primary address associated with the account.\n\n\n\n\n\n\nis-default=true\n\n\nWhether this address is selected as the default \nFrom:\n address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.\n\n\n\n\n\n\nis-primary=true\n\n\nWhether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.\n\n\n\n\n\n\nreply-to-address=amet.\n\n\nAn optional email address that is included in a \nReply-To:\n header for mail sent using this alias. If this is empty, Gmail will not generate a \nReply-To:\n header.\n\n\n\n\n\n\nsend-as-email=ipsum\n\n\nThe email address that appears in the \nFrom:\n header for mail sent using this alias. This is read-only for all operations except create.\n\n\n\n\n\n\nsignature=ut\n\n\nAn optional HTML signature that is included in messages composed with this alias in the Gmail web UI.\n\n\n\n\n\n\nsmtp-msa    host=dolor\n\n\nThe hostname of the SMTP service. Required.\n\n\n\n\n\n\npassword=sea\n\n\nThe password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.\n\n\n\n\n\n\nport=65\n\n\nThe port of the SMTP service. Required.\n\n\n\n\n\n\nsecurity-mode=eirmod\n\n\nThe protocol that will be used to secure communication with the SMTP service. Required.\n\n\n\n\n\n\n\n\nusername=sanctus\n\n\n\n\nThe username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.\n\n\n\n\n\n\n\n\n..    treat-as-alias=true\n\n\n\n\nWhether Gmail should  treat this address as an alias for the user\ns primary email address. This setting only applies to custom \nfrom\n aliases.\n\n\n\n\n\n\nverification-status=dolor\n\n\nIndicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom \nfrom\n aliases.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Send As Update"
        }, 
        {
            "location": "/users_settings-send-as-update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/gmail.settings.basic  https://www.googleapis.com/auth/gmail.settings.sharing   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.basic .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-send-as-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-send-as-update/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    send-as-email   (string)  The send-as alias to be updated.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-send-as-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SendAs:\n  display-name: string\n  is-default: boolean\n  is-primary: boolean\n  reply-to-address: string\n  send-as-email: string\n  signature: string\n  smtp-msa:\n    host: string\n    password: string\n    port: integer\n    security-mode: string\n    username: string\n  treat-as-alias: boolean\n  verification-status: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    display-name=diam  A name that appears in the  From:  header for mail sent using this alias. For custom  from  addresses, when this is empty, Gmail will populate the  From:  header with the name that is used for the primary address associated with the account.    is-default=true  Whether this address is selected as the default  From:  address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.    is-primary=true  Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.    reply-to-address=amet.  An optional email address that is included in a  Reply-To:  header for mail sent using this alias. If this is empty, Gmail will not generate a  Reply-To:  header.    send-as-email=ipsum  The email address that appears in the  From:  header for mail sent using this alias. This is read-only for all operations except create.    signature=ut  An optional HTML signature that is included in messages composed with this alias in the Gmail web UI.    smtp-msa    host=dolor  The hostname of the SMTP service. Required.    password=sea  The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.    port=65  The port of the SMTP service. Required.    security-mode=eirmod  The protocol that will be used to secure communication with the SMTP service. Required.     username=sanctus   The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.     ..    treat-as-alias=true   Whether Gmail should  treat this address as an alias for the user s primary email address. This setting only applies to custom  from  aliases.    verification-status=dolor  Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom  from  aliases.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-send-as-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-send-as-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-send-as-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-send-as-verify/", 
            "text": "Sends a verification email to the specified send-as alias address. The verification status must be pending.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-send-as-verify ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\nsend-as-email\n \n(string)\n\n\nThe send-as alias to be verified.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Send As Verify"
        }, 
        {
            "location": "/users_settings-send-as-verify/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.sharing .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-send-as-verify ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-send-as-verify/#required-scalar-arguments", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.    send-as-email   (string)  The send-as alias to be verified.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_settings-send-as-verify/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-update-auto-forwarding/", 
            "text": "Updates the auto-forwarding setting for the specified account. A verified forwarding address must be specified when auto-forwarding is enabled.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.sharing\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-update-auto-forwarding ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAutoForwarding:\n  disposition: string\n  email-address: string\n  enabled: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    disposition=et\n\n\nThe state that a message should be left in after it has been forwarded.\n\n\n\n\n\n\nemail-address=et\n\n\nEmail address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.\n\n\n\n\n\n\nenabled=true\n\n\nWhether all incoming mail is automatically forwarded to another address.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Update Auto Forwarding"
        }, 
        {
            "location": "/users_settings-update-auto-forwarding/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.sharing .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-update-auto-forwarding ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-update-auto-forwarding/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-update-auto-forwarding/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AutoForwarding:\n  disposition: string\n  email-address: string\n  enabled: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    disposition=et  The state that a message should be left in after it has been forwarded.    email-address=et  Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.    enabled=true  Whether all incoming mail is automatically forwarded to another address.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-update-auto-forwarding/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-update-auto-forwarding/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-update-auto-forwarding/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-update-imap/", 
            "text": "Updates IMAP settings.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.basic\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.basic\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-update-imap ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nImapSettings:\n  auto-expunge: boolean\n  enabled: boolean\n  expunge-behavior: string\n  max-folder-size: integer\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    auto-expunge=true\n\n\nIf this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.\n\n\n\n\n\n\nenabled=true\n\n\nWhether IMAP is enabled for the account.\n\n\n\n\n\n\nexpunge-behavior=et\n\n\nThe action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.\n\n\n\n\n\n\nmax-folder-size=46\n\n\nAn optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Update Imap"
        }, 
        {
            "location": "/users_settings-update-imap/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.basic  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.basic .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-update-imap ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-update-imap/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-update-imap/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ImapSettings:\n  auto-expunge: boolean\n  enabled: boolean\n  expunge-behavior: string\n  max-folder-size: integer  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    auto-expunge=true  If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.    enabled=true  Whether IMAP is enabled for the account.    expunge-behavior=et  The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.    max-folder-size=46  An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-update-imap/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-update-imap/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-update-imap/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-update-pop/", 
            "text": "Updates POP settings.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.basic\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.basic\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-update-pop ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPopSettings:\n  access-window: string\n  disposition: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    access-window=justo\n\n\nThe range of messages which are accessible via POP.\n\n\n\n\n\n\ndisposition=dolore\n\n\nThe action that will be executed on a message after it has been fetched via POP.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Update Pop"
        }, 
        {
            "location": "/users_settings-update-pop/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.basic  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.basic .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-update-pop ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-update-pop/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-update-pop/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PopSettings:\n  access-window: string\n  disposition: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    access-window=justo  The range of messages which are accessible via POP.    disposition=dolore  The action that will be executed on a message after it has been fetched via POP.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-update-pop/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-update-pop/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-update-pop/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_settings-update-vacation/", 
            "text": "Updates vacation responder settings.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/gmail.settings.basic\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.settings.basic\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users settings-update-vacation ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nUser\ns email address. The special value \nme\n can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nVacationSettings:\n  enable-auto-reply: boolean\n  end-time: string\n  response-body-html: string\n  response-body-plain-text: string\n  response-subject: string\n  restrict-to-contacts: boolean\n  restrict-to-domain: boolean\n  start-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    enable-auto-reply=true\n\n\nFlag that controls whether Gmail automatically replies to messages.\n\n\n\n\n\n\nend-time=dolor\n\n\nAn optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.\n\n\n\n\n\n\nresponse-body-html=takimata\n\n\nResponse body in HTML format. Gmail will sanitize the HTML before storing it.\n\n\n\n\n\n\nresponse-body-plain-text=et\n\n\nResponse body in plain text format.\n\n\n\n\n\n\nresponse-subject=nonumy\n\n\nOptional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.\n\n\n\n\n\n\nrestrict-to-contacts=false\n\n\nFlag that determines whether responses are sent to recipients who are not in the user\ns list of contacts.\n\n\n\n\n\n\nrestrict-to-domain=true\n\n\nFlag that determines whether responses are sent to recipients who are outside of the user\ns domain. This feature is only available for Google Apps users.\n\n\n\n\n\n\nstart-time=no\n\n\nAn optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Settings Update Vacation"
        }, 
        {
            "location": "/users_settings-update-vacation/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/gmail.settings.basic  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.settings.basic .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users settings-update-vacation ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_settings-update-vacation/#required-scalar-argument", 
            "text": "user-id   (string)  User s email address. The special value  me  can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_settings-update-vacation/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  VacationSettings:\n  enable-auto-reply: boolean\n  end-time: string\n  response-body-html: string\n  response-body-plain-text: string\n  response-subject: string\n  restrict-to-contacts: boolean\n  restrict-to-domain: boolean\n  start-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    enable-auto-reply=true  Flag that controls whether Gmail automatically replies to messages.    end-time=dolor  An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.    response-body-html=takimata  Response body in HTML format. Gmail will sanitize the HTML before storing it.    response-body-plain-text=et  Response body in plain text format.    response-subject=nonumy  Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.    restrict-to-contacts=false  Flag that determines whether responses are sent to recipients who are not in the user s list of contacts.    restrict-to-domain=true  Flag that determines whether responses are sent to recipients who are outside of the user s domain. This feature is only available for Google Apps users.    start-time=no  An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_settings-update-vacation/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_settings-update-vacation/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_settings-update-vacation/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_stop/", 
            "text": "Stop receiving push notifications for the given user mailbox.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users stop ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Stop"
        }, 
        {
            "location": "/users_stop/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users stop ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_stop/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_stop/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_threads-delete/", 
            "text": "Immediately and permanently deletes the specified thread. This operation cannot be undone. Prefer threads.trash instead.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://mail.google.com/\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users threads-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nID of the Thread to delete.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Threads Delete"
        }, 
        {
            "location": "/users_threads-delete/#scopes", 
            "text": "You will need authorization for the  https://mail.google.com/  scope to make a valid call.  If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users threads-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_threads-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  ID of the Thread to delete.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_threads-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_threads-get/", 
            "text": "Gets the specified thread.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users threads-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the thread to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p format=string\n\n\n\n\nThe format to return the messages in.\n\n\n\n\n\n\n\n\n-p metadata-headers=string\n\n\n\n\nWhen given and format is METADATA, only include headers specified.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Threads Get"
        }, 
        {
            "location": "/users_threads-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users threads-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_threads-get/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the thread to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_threads-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_threads-get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p format=string   The format to return the messages in.     -p metadata-headers=string   When given and format is METADATA, only include headers specified.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_threads-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_threads-list/", 
            "text": "Lists the threads in the user\ns mailbox.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/gmail.readonly\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users threads-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p q=string\n\n\n\n\nOnly return threads matching the specified query. Supports the same query format as the Gmail search box. For example, \nfrom:someuser@example.com rfc822msgid: is:unread\n. Parameter cannot be used when accessing the api using the gmail.metadata scope.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of threads to return.\n\n\n\n\n\n\n\n\n-p include-spam-trash=boolean\n\n\n\n\nInclude threads from SPAM and TRASH in the results.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nPage token to retrieve a specific page of results in the list.\n\n\n\n\n\n\n\n\n-p label-ids=string\n\n\n\n\nOnly return threads with labels that match all of the specified label IDs.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Threads List"
        }, 
        {
            "location": "/users_threads-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/gmail.readonly .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users threads-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_threads-list/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_threads-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_threads-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p q=string   Only return threads matching the specified query. Supports the same query format as the Gmail search box. For example,  from:someuser@example.com rfc822msgid: is:unread . Parameter cannot be used when accessing the api using the gmail.metadata scope.     -p max-results=integer   Maximum number of threads to return.     -p include-spam-trash=boolean   Include threads from SPAM and TRASH in the results.     -p page-token=string   Page token to retrieve a specific page of results in the list.     -p label-ids=string   Only return threads with labels that match all of the specified label IDs.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_threads-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_threads-modify/", 
            "text": "Modifies the labels applied to the thread. This applies to all messages in the thread.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users threads-modify ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the thread to modify.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nModifyThreadRequest:\n  add-label-ids: [string]\n  remove-label-ids: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    add-label-ids=invidunt\n\n\nA list of IDs of labels to add to this thread.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nremove-label-ids=rebum.\n\n\nA list of IDs of labels to remove from this thread.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Threads Modify"
        }, 
        {
            "location": "/users_threads-modify/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users threads-modify ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_threads-modify/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the thread to modify.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_threads-modify/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ModifyThreadRequest:\n  add-label-ids: [string]\n  remove-label-ids: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    add-label-ids=invidunt  A list of IDs of labels to add to this thread.  Each invocation of this argument appends the given value to the array.    remove-label-ids=rebum.  A list of IDs of labels to remove from this thread.  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_threads-modify/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_threads-modify/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_threads-modify/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_threads-trash/", 
            "text": "Moves the specified thread to the trash.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users threads-trash ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the thread to Trash.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Threads Trash"
        }, 
        {
            "location": "/users_threads-trash/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users threads-trash ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_threads-trash/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the thread to Trash.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_threads-trash/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_threads-trash/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_threads-untrash/", 
            "text": "Removes the specified thread from the trash.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users threads-untrash ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\nid\n \n(string)\n\n\nThe ID of the thread to remove from Trash.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Threads Untrash"
        }, 
        {
            "location": "/users_threads-untrash/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.modify   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users threads-untrash ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_threads-untrash/#required-scalar-arguments", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.    id   (string)  The ID of the thread to remove from Trash.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_threads-untrash/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_threads-untrash/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_watch/", 
            "text": "Set up or update a push notification watch on the given user mailbox.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://mail.google.com/\n\n\nhttps://www.googleapis.com/auth/gmail.metadata\n\n\nhttps://www.googleapis.com/auth/gmail.modify\n\n\nhttps://www.googleapis.com/auth/gmail.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://mail.google.com/\n.\nYou can set the scope for this method like this: \ngmail1 --scope \nscope\n users watch ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nThe user\ns email address. The special value me can be used to indicate the authenticated user.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nWatchRequest:\n  label-filter-action: string\n  label-ids: [string]\n  topic-name: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    label-filter-action=labore\n\n\nFiltering behavior of labelIds list specified.\n\n\n\n\n\n\nlabel-ids=aliquyam\n\n\nList of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\ntopic-name=elitr\n\n\n\n\nA fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name \nmust\n already exist in Cloud Pub/Sub and you \nmust\n have already granted gmail \npublish\n permission on it. For example, \nprojects/my-project-identifier/topics/my-topic-name\n (using the Cloud Pub/Sub \nv1\n topic naming format).\n\n\nNote that the \nmy-project-identifier\n portion must exactly match your Google developer project id (the one executing this watch request).\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Watch"
        }, 
        {
            "location": "/users_watch/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://mail.google.com/  https://www.googleapis.com/auth/gmail.metadata  https://www.googleapis.com/auth/gmail.modify  https://www.googleapis.com/auth/gmail.readonly   If unset, the scope for this method defaults to  https://mail.google.com/ .\nYou can set the scope for this method like this:  gmail1 --scope  scope  users watch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_watch/#required-scalar-argument", 
            "text": "user-id   (string)  The user s email address. The special value me can be used to indicate the authenticated user.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_watch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  WatchRequest:\n  label-filter-action: string\n  label-ids: [string]\n  topic-name: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    label-filter-action=labore  Filtering behavior of labelIds list specified.    label-ids=aliquyam  List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.  Each invocation of this argument appends the given value to the array.    topic-name=elitr   A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name  must  already exist in Cloud Pub/Sub and you  must  have already granted gmail  publish  permission on it. For example,  projects/my-project-identifier/topics/my-topic-name  (using the Cloud Pub/Sub  v1  topic naming format).  Note that the  my-project-identifier  portion must exactly match your Google developer project id (the one executing this watch request).", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_watch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_watch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_watch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}