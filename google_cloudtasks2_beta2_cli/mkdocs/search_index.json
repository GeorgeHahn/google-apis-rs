{
    "docs": [
        {
            "location": "/", 
            "text": "The \ncloudtasks2-beta2\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Cloud Tasks\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nCloud Tasks\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-cloudtasks2_beta2-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nCloud Tasks\n API at revision \n20190618\n. The CLI is at version \n1.0.10\n.\n\n\ncloudtasks2-beta2 [options]\n        projects\n                locations-get \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-list \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-queues-create \nparent\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-delete \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-queues-get \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-queues-get-iam-policy \nresource\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-list \nparent\n [-p \nv\n]... [-o \nout\n]\n                locations-queues-patch \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-pause \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-purge \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-resume \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-set-iam-policy \nresource\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-acknowledge \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-cancel-lease \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-create \nparent\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-delete \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-get \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-lease \nparent\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-list \nparent\n [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-renew-lease \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-tasks-run \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-queues-test-iam-permissions \nresource\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  cloudtasks2-beta2 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ncloudtasks2-beta2-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/cloudtasks2-beta2-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/cloudtasks2-beta2-secret.json\n, assuming that the required \ncloudtasks\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ncloudtasks2-beta2 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-cloudtasks2_beta2-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Cloud Tasks  API at revision  20190618 . The CLI is at version  1.0.10 .  cloudtasks2-beta2 [options]\n        projects\n                locations-get  name  [-p  v ]... [-o  out ]\n                locations-list  name  [-p  v ]... [-o  out ]\n                locations-queues-create  parent  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-delete  name  [-p  v ]... [-o  out ]\n                locations-queues-get  name  [-p  v ]... [-o  out ]\n                locations-queues-get-iam-policy  resource  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-list  parent  [-p  v ]... [-o  out ]\n                locations-queues-patch  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-pause  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-purge  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-resume  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-set-iam-policy  resource  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-tasks-acknowledge  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-tasks-cancel-lease  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-tasks-create  parent  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-tasks-delete  name  [-p  v ]... [-o  out ]\n                locations-queues-tasks-get  name  [-p  v ]... [-o  out ]\n                locations-queues-tasks-lease  parent  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-tasks-list  parent  [-p  v ]... [-o  out ]\n                locations-queues-tasks-renew-lease  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-tasks-run  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-queues-test-iam-permissions  resource  (-r  kv )... [-p  v ]... [-o  out ]\n  cloudtasks2-beta2 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  cloudtasks2-beta2- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/cloudtasks2-beta2-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/cloudtasks2-beta2-secret.json , assuming that the required  cloudtasks  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  cloudtasks2-beta2 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/projects_locations-get/", 
            "text": "Gets information about a location.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-get ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nResource name for the location.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Get"
        }, 
        {
            "location": "/projects_locations-get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-get/#required-scalar-argument", 
            "text": "name   (string)  Resource name for the location.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-list/", 
            "text": "Lists information about the supported locations for this service.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe resource that owns the locations collection, if applicable.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nThe standard list page size.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe standard list page token.\n\n\n\n\n\n\n\n\n-p filter=string\n\n\n\n\nThe standard list filter.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations List"
        }, 
        {
            "location": "/projects_locations-list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-list/#required-scalar-argument", 
            "text": "name   (string)  The resource that owns the locations collection, if applicable.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-size=integer   The standard list page size.     -p page-token=string   The standard list page token.     -p filter=string   The standard list filter.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-create/", 
            "text": "Creates a queue.\n\n\nQueues created with this method allow tasks to live for a maximum of 31\ndays. After a task is 31 days old, the task will be deleted regardless of whether\nit was dispatched or not.\n\n\nWARNING: Using this method may have unintended side effects if you are\nusing an App Engine \nqueue.yaml\n or \nqueue.xml\n file to manage your queues.\nRead\n\nOverview of Queue Management and\nqueue.yaml\n before using\nthis method.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\n\n\nRequired.\n\n\nThe location name in which the queue will be created.\nFor example: \nprojects/PROJECT_ID/locations/LOCATION_ID\n\n\nThe list of allowed locations can be obtained by calling Cloud\nTasks\n implementation of\nListLocations.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nQueue:\n  app-engine-http-target:\n    app-engine-routing-override:\n      host: string\n      instance: string\n      service: string\n      version: string\n  name: string\n  purge-time: string\n  rate-limits:\n    max-burst-size: integer\n    max-concurrent-tasks: integer\n    max-tasks-dispatched-per-second: number\n  retry-config:\n    max-attempts: integer\n    max-backoff: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff: string\n    unlimited-attempts: boolean\n  state: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .app-engine-http-target.app-engine-routing-override    host=eirmod\n\n\n\n\n\n\nOutput only. The host that the task is sent to.\n\n\nFor more information, see\n\nHow Requests are\nRouted\n.\n\n\nThe host is constructed as:\n\n\n\n\n\n\nhost = [application_domain_name]\n/br\n\n  \n| [service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version_dot_service]+ \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version_dot_service] + \n#39;.\n#39; + [application_domain_name]\n\n\n\n\n\n\napplication_domain_name\n = The domain name of the app, for\n  example \napp-id\n.appspot.com, which is associated with the\n  queue\ns project ID. Some tasks which were created using the App Engine\n  SDK use a custom domain name.\n\n\n\n\n\n\nservice =\n service\n\n\n\n\n\n\nversion =\n version\n\n\n\n\n\n\nversion_dot_service =\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance =\n instance\n\n\n\n\n\n\ninstance_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance_dot_version =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version\n\n\n\n\n\n\ninstance_dot_version_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\nIf service is empty, then the task will be sent\nto the service which is the default service when the task is attempted.\n\n\nIf version is empty, then the task will be sent\nto the version which is the default version when the task is attempted.\n\n\nIf instance is empty, then the task\nwill be sent to an instance which is available when the task is\nattempted.\n\n\nIf service,\nversion, or\ninstance is invalid, then the task\nwill be sent to the default version of the default service when\nthe task is attempted.\n* \ninstance=sit\n\n    - App instance.\n\n\nBy default, the task is sent to an instance which is available when\nthe task is attempted.\n\n\nRequests can only be sent to a specific instance if\n\nmanual scaling is used in App Engine\nStandard\n.\nApp Engine Flex does not support instances. For more information, see\n\nApp Engine Standard request\nrouting\n\nand \nApp Engine Flex request\nrouting\n.\n* \nservice=stet\n\n    - App service.\n\n\nBy default, the task is sent to the service which is the default\nservice when the task is attempted.\n\n\nFor some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n* \nversion=sed\n\n    - App version.\n\n\nBy default, the task is sent to the version which is the default\nversion when the task is attempted.\n\n\nFor some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n\n\n\n\n\n\n\n\n\n\n...    name=et\n\n\n\n\n\n\nCaller-specified and required in CreateQueue,\n    after which it becomes output only.\n\n\nThe queue name.\n\n\nThe queue name must have the following format:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\n\n\nPROJECT_ID\n can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n   \nIdentifying\n   projects\n\n\nLOCATION_ID\n is the canonical ID for the queue\ns location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.\n\n\nQUEUE_ID\n can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.\n\n\npurge-time=dolores\n\n\nOutput only. The last time this queue was purged.\n\n\n\n\n\n\n\n\nAll tasks that were created before this time\nwere purged.\n\n\nA queue can be purged using PurgeQueue, the\n\nApp Engine Task Queue SDK, or the Cloud\nConsole\n.\n\n\nPurge time will be truncated to the nearest microsecond. Purge\ntime will be unset if the queue has never been purged.\n* \nrate-limits    max-burst-size=38\n\n    - Output only. The max burst size.\n\n\nMax burst size limits how fast tasks in queue are processed when\nmany tasks are in the queue and the rate is high. This field\nallows the queue to have a high rate so processing starts shortly\nafter a task is enqueued, but still limits resource usage when\nmany tasks are enqueued in a short period of time.\n\n\nThe \ntoken bucket\n\nalgorithm is used to control the rate of task dispatches. Each\nqueue has a token bucket that holds tokens, up to the maximum\nspecified by \nmax_burst_size\n. Each time a task is dispatched, a\ntoken is removed from the bucket. Tasks will be dispatched until\nthe queue\ns bucket runs out of tokens. The bucket will be\ncontinuously refilled with new tokens based on\nmax_tasks_dispatched_per_second.\n\n\nCloud Tasks will pick the value of \nmax_burst_size\n based on the\nvalue of\nmax_tasks_dispatched_per_second.\n\n\nFor App Engine queues that were created or updated using\n\nqueue.yaml/xml\n, \nmax_burst_size\n is equal to\n\nbucket_size\n.\nSince \nmax_burst_size\n is output only, if\nUpdateQueue is called on a queue\ncreated by \nqueue.yaml/xml\n, \nmax_burst_size\n will be reset based\non the value of\nmax_tasks_dispatched_per_second,\nregardless of whether\nmax_tasks_dispatched_per_second\nis updated.\n\n\n\n\n\n\n\n\n\n\nmax-concurrent-tasks=79\n\n\n\n\n\n\nThe maximum number of concurrent tasks that Cloud Tasks allows\n    to be dispatched for this queue. After this threshold has been\n    reached, Cloud Tasks stops dispatching tasks until the number of\n    concurrent requests decreases.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThe maximum allowed value is 5,000.\n\n\nThis field is output only for\npull queues and always -1, which indicates no limit. No other\nqueue types can have \nmax_concurrent_tasks\n set to -1.\n\n\nThis field has the same meaning as\n\nmax_concurrent_requests in\nqueue.yaml/xml\n.\n* \nmax-tasks-dispatched-per-second=0.921726509896\n\n    - The maximum rate at which tasks are dispatched from this queue.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\n\n\nFor App Engine queues, the maximum allowed value\n  is 500.\n\n\nThis field is output only   for pull queues. In addition to the\n  \nmax_tasks_dispatched_per_second\n limit, a maximum of 10 QPS of\n  LeaseTasks requests are allowed per pull queue.\n\n\n\n\nThis field has the same meaning as\n\nrate in\nqueue.yaml/xml\n.\n\n\n\n\n\n\n\n\n\n\n..retry-config    max-attempts=31\n\n\n\n\n\n\nThe maximum number of attempts for a task.\n\n\nCloud Tasks will attempt the task \nmax_attempts\n times (that\nis, if the first attempt fails, then there will be\n\nmax_attempts - 1\n retries).  Must be \n 0.\n* \nmax-backoff=amet.\n\n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue\ns RetryConfig specifies that the task should be\nretried.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nmax_backoff\n will be truncated to the nearest second.\n\n\nThis field has the same meaning as\n\nmax_backoff_seconds in\nqueue.yaml/xml\n.\n* \nmax-doublings=20\n\n    - The time between retries will double \nmax_doublings\n times.\n\n\nA task\ns retry interval starts at\nmin_backoff, then doubles\n\nmax_doublings\n times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff up to\nmax_attempts times.\n\n\nFor example, if min_backoff is 10s,\nmax_backoff is 300s, and\n\nmax_doublings\n is 3, then the a task will first be retried in\n10s. The retry interval will double three times, and then\nincrease linearly by 2^3 * 10s.  Finally, the task will retry at\nintervals of max_backoff until the\ntask has been attempted max_attempts\ntimes. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,\n240s, 300s, 300s, ....\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nThis field has the same meaning as\n\nmax_doublings in\nqueue.yaml/xml\n.\n* \nmax-retry-duration=labore\n\n    - If positive, \nmax_retry_duration\n specifies the time limit for\nretrying a failed task, measured from when the task was first\nattempted. Once \nmax_retry_duration\n time has passed \nand\n the\ntask has been attempted max_attempts\ntimes, no further attempts will be made and the task will be\ndeleted.\n\n\nIf zero, then the task age is unlimited.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nmax_retry_duration\n will be truncated to the nearest second.\n\n\nThis field has the same meaning as\n\ntask_age_limit in\nqueue.yaml/xml\n.\n* \nmin-backoff=sea\n\n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue\ns RetryConfig specifies that the task should be\nretried.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nmin_backoff\n will be truncated to the nearest second.\n\n\nThis field has the same meaning as\n\nmin_backoff_seconds in\nqueue.yaml/xml\n.\n* \nunlimited-attempts=false\n\n    - If true, then the number of attempts is unlimited.\n\n\n\n\n\n\n\n\n\n\n..    state=dolores\n\n\n\n\n\n\nOutput only. The state of the queue.\n\n\nstate\n can only be changed by called\nPauseQueue,\nResumeQueue, or uploading\n\nqueue.yaml/xml\n.\nUpdateQueue cannot be used to change \nstate\n.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Create"
        }, 
        {
            "location": "/projects_locations-queues-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-create/#required-scalar-argument", 
            "text": "parent   (string)   Required.  The location name in which the queue will be created.\nFor example:  projects/PROJECT_ID/locations/LOCATION_ID  The list of allowed locations can be obtained by calling Cloud\nTasks  implementation of\nListLocations.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Queue:\n  app-engine-http-target:\n    app-engine-routing-override:\n      host: string\n      instance: string\n      service: string\n      version: string\n  name: string\n  purge-time: string\n  rate-limits:\n    max-burst-size: integer\n    max-concurrent-tasks: integer\n    max-tasks-dispatched-per-second: number\n  retry-config:\n    max-attempts: integer\n    max-backoff: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff: string\n    unlimited-attempts: boolean\n  state: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .app-engine-http-target.app-engine-routing-override    host=eirmod    Output only. The host that the task is sent to.  For more information, see How Requests are\nRouted .  The host is constructed as:    host = [application_domain_name] /br \n   | [service] +  #39;. #39; + [application_domain_name] /br \n   | [version] +  #39;. #39; + [application_domain_name] /br \n   | [version_dot_service]+  #39;. #39; + [application_domain_name] /br \n   | [instance] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_service] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version_dot_service] +  #39;. #39; + [application_domain_name]    application_domain_name  = The domain name of the app, for\n  example  app-id .appspot.com, which is associated with the\n  queue s project ID. Some tasks which were created using the App Engine\n  SDK use a custom domain name.    service =  service    version =  version    version_dot_service = \n  version  +  #39;. #39; + \n  service    instance =  instance    instance_dot_service = \n  instance  +  #39;. #39; + \n  service    instance_dot_version = \n  instance  +  #39;. #39; + \n  version    instance_dot_version_dot_service = \n  instance  +  #39;. #39; + \n  version  +  #39;. #39; + \n  service    If service is empty, then the task will be sent\nto the service which is the default service when the task is attempted.  If version is empty, then the task will be sent\nto the version which is the default version when the task is attempted.  If instance is empty, then the task\nwill be sent to an instance which is available when the task is\nattempted.  If service,\nversion, or\ninstance is invalid, then the task\nwill be sent to the default version of the default service when\nthe task is attempted.\n*  instance=sit \n    - App instance.  By default, the task is sent to an instance which is available when\nthe task is attempted.  Requests can only be sent to a specific instance if manual scaling is used in App Engine\nStandard .\nApp Engine Flex does not support instances. For more information, see App Engine Standard request\nrouting \nand  App Engine Flex request\nrouting .\n*  service=stet \n    - App service.  By default, the task is sent to the service which is the default\nservice when the task is attempted.  For some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n*  version=sed \n    - App version.  By default, the task is sent to the version which is the default\nversion when the task is attempted.  For some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.      ...    name=et    Caller-specified and required in CreateQueue,\n    after which it becomes output only.  The queue name.  The queue name must have the following format: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID   PROJECT_ID  can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n    Identifying\n   projects  LOCATION_ID  is the canonical ID for the queue s location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.  QUEUE_ID  can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.  purge-time=dolores  Output only. The last time this queue was purged.     All tasks that were created before this time\nwere purged.  A queue can be purged using PurgeQueue, the App Engine Task Queue SDK, or the Cloud\nConsole .  Purge time will be truncated to the nearest microsecond. Purge\ntime will be unset if the queue has never been purged.\n*  rate-limits    max-burst-size=38 \n    - Output only. The max burst size.  Max burst size limits how fast tasks in queue are processed when\nmany tasks are in the queue and the rate is high. This field\nallows the queue to have a high rate so processing starts shortly\nafter a task is enqueued, but still limits resource usage when\nmany tasks are enqueued in a short period of time.  The  token bucket \nalgorithm is used to control the rate of task dispatches. Each\nqueue has a token bucket that holds tokens, up to the maximum\nspecified by  max_burst_size . Each time a task is dispatched, a\ntoken is removed from the bucket. Tasks will be dispatched until\nthe queue s bucket runs out of tokens. The bucket will be\ncontinuously refilled with new tokens based on\nmax_tasks_dispatched_per_second.  Cloud Tasks will pick the value of  max_burst_size  based on the\nvalue of\nmax_tasks_dispatched_per_second.  For App Engine queues that were created or updated using queue.yaml/xml ,  max_burst_size  is equal to bucket_size .\nSince  max_burst_size  is output only, if\nUpdateQueue is called on a queue\ncreated by  queue.yaml/xml ,  max_burst_size  will be reset based\non the value of\nmax_tasks_dispatched_per_second,\nregardless of whether\nmax_tasks_dispatched_per_second\nis updated.      max-concurrent-tasks=79    The maximum number of concurrent tasks that Cloud Tasks allows\n    to be dispatched for this queue. After this threshold has been\n    reached, Cloud Tasks stops dispatching tasks until the number of\n    concurrent requests decreases.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  The maximum allowed value is 5,000.  This field is output only for\npull queues and always -1, which indicates no limit. No other\nqueue types can have  max_concurrent_tasks  set to -1.  This field has the same meaning as max_concurrent_requests in\nqueue.yaml/xml .\n*  max-tasks-dispatched-per-second=0.921726509896 \n    - The maximum rate at which tasks are dispatched from this queue.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.   For App Engine queues, the maximum allowed value\n  is 500.  This field is output only   for pull queues. In addition to the\n   max_tasks_dispatched_per_second  limit, a maximum of 10 QPS of\n  LeaseTasks requests are allowed per pull queue.   This field has the same meaning as rate in\nqueue.yaml/xml .      ..retry-config    max-attempts=31    The maximum number of attempts for a task.  Cloud Tasks will attempt the task  max_attempts  times (that\nis, if the first attempt fails, then there will be max_attempts - 1  retries).  Must be   0.\n*  max-backoff=amet. \n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue s RetryConfig specifies that the task should be\nretried.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  max_backoff  will be truncated to the nearest second.  This field has the same meaning as max_backoff_seconds in\nqueue.yaml/xml .\n*  max-doublings=20 \n    - The time between retries will double  max_doublings  times.  A task s retry interval starts at\nmin_backoff, then doubles max_doublings  times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff up to\nmax_attempts times.  For example, if min_backoff is 10s,\nmax_backoff is 300s, and max_doublings  is 3, then the a task will first be retried in\n10s. The retry interval will double three times, and then\nincrease linearly by 2^3 * 10s.  Finally, the task will retry at\nintervals of max_backoff until the\ntask has been attempted max_attempts\ntimes. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,\n240s, 300s, 300s, ....  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  This field has the same meaning as max_doublings in\nqueue.yaml/xml .\n*  max-retry-duration=labore \n    - If positive,  max_retry_duration  specifies the time limit for\nretrying a failed task, measured from when the task was first\nattempted. Once  max_retry_duration  time has passed  and  the\ntask has been attempted max_attempts\ntimes, no further attempts will be made and the task will be\ndeleted.  If zero, then the task age is unlimited.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  max_retry_duration  will be truncated to the nearest second.  This field has the same meaning as task_age_limit in\nqueue.yaml/xml .\n*  min-backoff=sea \n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue s RetryConfig specifies that the task should be\nretried.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  min_backoff  will be truncated to the nearest second.  This field has the same meaning as min_backoff_seconds in\nqueue.yaml/xml .\n*  unlimited-attempts=false \n    - If true, then the number of attempts is unlimited.      ..    state=dolores    Output only. The state of the queue.  state  can only be changed by called\nPauseQueue,\nResumeQueue, or uploading queue.yaml/xml .\nUpdateQueue cannot be used to change  state .", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-delete/", 
            "text": "Deletes a queue.\n\n\nThis command will delete the queue even if it has tasks in it.\n\n\nNote: If you delete a queue, a queue with the same name can\nt be created\nfor 7 days.\n\n\nWARNING: Using this method may have unintended side effects if you are\nusing an App Engine \nqueue.yaml\n or \nqueue.xml\n file to manage your queues.\nRead\n\nOverview of Queue Management and\nqueue.yaml\n before using\nthis method.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe queue name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Delete"
        }, 
        {
            "location": "/projects_locations-queues-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-delete/#required-scalar-argument", 
            "text": "name   (string)   Required.  The queue name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-get/", 
            "text": "Gets a queue.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-get ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe resource name of the queue. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Get"
        }, 
        {
            "location": "/projects_locations-queues-get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-get/#required-scalar-argument", 
            "text": "name   (string)   Required.  The resource name of the queue. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-get-iam-policy/", 
            "text": "Gets the access control policy for a Queue.\nReturns an empty policy if the resource exists and does not have a policy\nset.\n\n\nAuthorization requires the following\n\nGoogle IAM\n permission on the specified\nresource parent:\n\n\n\n\ncloudtasks.queues.getIamPolicy\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-get-iam-policy ...\n\n\nRequired Scalar Argument\n\n\n\n\nresource\n \n(string)\n\n\nREQUIRED: The resource for which the policy is being requested.\n    See the operation documentation for the appropriate value for this field.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nGetIamPolicyRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Get Iam Policy"
        }, 
        {
            "location": "/projects_locations-queues-get-iam-policy/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-get-iam-policy ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-get-iam-policy/#required-scalar-argument", 
            "text": "resource   (string)  REQUIRED: The resource for which the policy is being requested.\n    See the operation documentation for the appropriate value for this field.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-get-iam-policy/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  GetIamPolicyRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-get-iam-policy/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-get-iam-policy/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-get-iam-policy/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-list/", 
            "text": "Lists queues.\n\n\nQueues are returned in lexicographical order.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\n\n\nRequired.\n\n\nThe location name.\nFor example: \nprojects/PROJECT_ID/locations/LOCATION_ID\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p filter=string\n\n\n\n\n\n\nfilter\n can be used to specify a subset of queues. Any Queue\n    field can be used as a filter and several operators as supported.\n    For example: \nlt;=, \nlt;, \ngt;=, \ngt;, !=, =, :\n. The filter syntax is the same as\n    described in\n    \nStackdriver\ns Advanced Logs\n    Filters\n.\n\n\nSample filter \napp_engine_http_target: *\n.\n\n\nNote that using filters might cause fewer queues than the\nrequested_page size to be returned.\n\n\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\n\n\nA token identifying the page of results to return.\n\n\nTo request the first page results, page_token must be empty. To\nrequest the next page of results, page_token must be the value of\nnext_page_token returned\nfrom the previous call to ListQueues\nmethod. It is an error to switch the value of the\nfilter while iterating through pages.\n\n\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\n\n\nRequested page size.\n\n\nThe maximum page size is 9800. If unspecified, the page size will\nbe the maximum. Fewer queues than requested might be returned,\neven if more queues exist; use the\nnext_page_token in the\nresponse to determine if more queues exist.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues List"
        }, 
        {
            "location": "/projects_locations-queues-list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-list/#required-scalar-argument", 
            "text": "parent   (string)   Required.  The location name.\nFor example:  projects/PROJECT_ID/locations/LOCATION_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p filter=string    filter  can be used to specify a subset of queues. Any Queue\n    field can be used as a filter and several operators as supported.\n    For example:  lt;=,  lt;,  gt;=,  gt;, !=, =, : . The filter syntax is the same as\n    described in\n     Stackdriver s Advanced Logs\n    Filters .  Sample filter  app_engine_http_target: * .  Note that using filters might cause fewer queues than the\nrequested_page size to be returned.      -p page-token=string    A token identifying the page of results to return.  To request the first page results, page_token must be empty. To\nrequest the next page of results, page_token must be the value of\nnext_page_token returned\nfrom the previous call to ListQueues\nmethod. It is an error to switch the value of the\nfilter while iterating through pages.      -p page-size=integer    Requested page size.  The maximum page size is 9800. If unspecified, the page size will\nbe the maximum. Fewer queues than requested might be returned,\neven if more queues exist; use the\nnext_page_token in the\nresponse to determine if more queues exist.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-queues-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-patch/", 
            "text": "Updates a queue.\n\n\nThis method creates the queue if it does not exist and updates\nthe queue if it does exist.\n\n\nQueues created with this method allow tasks to live for a maximum of 31\ndays. After a task is 31 days old, the task will be deleted regardless of whether\nit was dispatched or not.\n\n\nWARNING: Using this method may have unintended side effects if you are\nusing an App Engine \nqueue.yaml\n or \nqueue.xml\n file to manage your queues.\nRead\n\nOverview of Queue Management and\nqueue.yaml\n before using\nthis method.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-patch ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nCaller-specified and required in CreateQueue,\n    after which it becomes output only.\n\n\nThe queue name.\n\n\nThe queue name must have the following format:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\n\n\nPROJECT_ID\n can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n   \nIdentifying\n   projects\n\n\nLOCATION_ID\n is the canonical ID for the queue\ns location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.\n\n\nQUEUE_ID\n can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.\n\n\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nQueue:\n  app-engine-http-target:\n    app-engine-routing-override:\n      host: string\n      instance: string\n      service: string\n      version: string\n  name: string\n  purge-time: string\n  rate-limits:\n    max-burst-size: integer\n    max-concurrent-tasks: integer\n    max-tasks-dispatched-per-second: number\n  retry-config:\n    max-attempts: integer\n    max-backoff: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff: string\n    unlimited-attempts: boolean\n  state: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .app-engine-http-target.app-engine-routing-override    host=gubergren\n\n\n\n\n\n\nOutput only. The host that the task is sent to.\n\n\nFor more information, see\n\nHow Requests are\nRouted\n.\n\n\nThe host is constructed as:\n\n\n\n\n\n\nhost = [application_domain_name]\n/br\n\n  \n| [service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version_dot_service]+ \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version_dot_service] + \n#39;.\n#39; + [application_domain_name]\n\n\n\n\n\n\napplication_domain_name\n = The domain name of the app, for\n  example \napp-id\n.appspot.com, which is associated with the\n  queue\ns project ID. Some tasks which were created using the App Engine\n  SDK use a custom domain name.\n\n\n\n\n\n\nservice =\n service\n\n\n\n\n\n\nversion =\n version\n\n\n\n\n\n\nversion_dot_service =\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance =\n instance\n\n\n\n\n\n\ninstance_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance_dot_version =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version\n\n\n\n\n\n\ninstance_dot_version_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\nIf service is empty, then the task will be sent\nto the service which is the default service when the task is attempted.\n\n\nIf version is empty, then the task will be sent\nto the version which is the default version when the task is attempted.\n\n\nIf instance is empty, then the task\nwill be sent to an instance which is available when the task is\nattempted.\n\n\nIf service,\nversion, or\ninstance is invalid, then the task\nwill be sent to the default version of the default service when\nthe task is attempted.\n* \ninstance=sadipscing\n\n    - App instance.\n\n\nBy default, the task is sent to an instance which is available when\nthe task is attempted.\n\n\nRequests can only be sent to a specific instance if\n\nmanual scaling is used in App Engine\nStandard\n.\nApp Engine Flex does not support instances. For more information, see\n\nApp Engine Standard request\nrouting\n\nand \nApp Engine Flex request\nrouting\n.\n* \nservice=aliquyam\n\n    - App service.\n\n\nBy default, the task is sent to the service which is the default\nservice when the task is attempted.\n\n\nFor some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n* \nversion=ea\n\n    - App version.\n\n\nBy default, the task is sent to the version which is the default\nversion when the task is attempted.\n\n\nFor some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n\n\n\n\n\n\n\n\n\n\n...    name=no\n\n\n\n\n\n\nCaller-specified and required in CreateQueue,\n    after which it becomes output only.\n\n\nThe queue name.\n\n\nThe queue name must have the following format:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\n\n\nPROJECT_ID\n can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n   \nIdentifying\n   projects\n\n\nLOCATION_ID\n is the canonical ID for the queue\ns location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.\n\n\nQUEUE_ID\n can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.\n\n\npurge-time=justo\n\n\nOutput only. The last time this queue was purged.\n\n\n\n\n\n\n\n\nAll tasks that were created before this time\nwere purged.\n\n\nA queue can be purged using PurgeQueue, the\n\nApp Engine Task Queue SDK, or the Cloud\nConsole\n.\n\n\nPurge time will be truncated to the nearest microsecond. Purge\ntime will be unset if the queue has never been purged.\n* \nrate-limits    max-burst-size=80\n\n    - Output only. The max burst size.\n\n\nMax burst size limits how fast tasks in queue are processed when\nmany tasks are in the queue and the rate is high. This field\nallows the queue to have a high rate so processing starts shortly\nafter a task is enqueued, but still limits resource usage when\nmany tasks are enqueued in a short period of time.\n\n\nThe \ntoken bucket\n\nalgorithm is used to control the rate of task dispatches. Each\nqueue has a token bucket that holds tokens, up to the maximum\nspecified by \nmax_burst_size\n. Each time a task is dispatched, a\ntoken is removed from the bucket. Tasks will be dispatched until\nthe queue\ns bucket runs out of tokens. The bucket will be\ncontinuously refilled with new tokens based on\nmax_tasks_dispatched_per_second.\n\n\nCloud Tasks will pick the value of \nmax_burst_size\n based on the\nvalue of\nmax_tasks_dispatched_per_second.\n\n\nFor App Engine queues that were created or updated using\n\nqueue.yaml/xml\n, \nmax_burst_size\n is equal to\n\nbucket_size\n.\nSince \nmax_burst_size\n is output only, if\nUpdateQueue is called on a queue\ncreated by \nqueue.yaml/xml\n, \nmax_burst_size\n will be reset based\non the value of\nmax_tasks_dispatched_per_second,\nregardless of whether\nmax_tasks_dispatched_per_second\nis updated.\n\n\n\n\n\n\n\n\n\n\nmax-concurrent-tasks=67\n\n\n\n\n\n\nThe maximum number of concurrent tasks that Cloud Tasks allows\n    to be dispatched for this queue. After this threshold has been\n    reached, Cloud Tasks stops dispatching tasks until the number of\n    concurrent requests decreases.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThe maximum allowed value is 5,000.\n\n\nThis field is output only for\npull queues and always -1, which indicates no limit. No other\nqueue types can have \nmax_concurrent_tasks\n set to -1.\n\n\nThis field has the same meaning as\n\nmax_concurrent_requests in\nqueue.yaml/xml\n.\n* \nmax-tasks-dispatched-per-second=0.832506532618\n\n    - The maximum rate at which tasks are dispatched from this queue.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\n\n\nFor App Engine queues, the maximum allowed value\n  is 500.\n\n\nThis field is output only   for pull queues. In addition to the\n  \nmax_tasks_dispatched_per_second\n limit, a maximum of 10 QPS of\n  LeaseTasks requests are allowed per pull queue.\n\n\n\n\nThis field has the same meaning as\n\nrate in\nqueue.yaml/xml\n.\n\n\n\n\n\n\n\n\n\n\n..retry-config    max-attempts=60\n\n\n\n\n\n\nThe maximum number of attempts for a task.\n\n\nCloud Tasks will attempt the task \nmax_attempts\n times (that\nis, if the first attempt fails, then there will be\n\nmax_attempts - 1\n retries).  Must be \n 0.\n* \nmax-backoff=ipsum\n\n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue\ns RetryConfig specifies that the task should be\nretried.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nmax_backoff\n will be truncated to the nearest second.\n\n\nThis field has the same meaning as\n\nmax_backoff_seconds in\nqueue.yaml/xml\n.\n* \nmax-doublings=96\n\n    - The time between retries will double \nmax_doublings\n times.\n\n\nA task\ns retry interval starts at\nmin_backoff, then doubles\n\nmax_doublings\n times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff up to\nmax_attempts times.\n\n\nFor example, if min_backoff is 10s,\nmax_backoff is 300s, and\n\nmax_doublings\n is 3, then the a task will first be retried in\n10s. The retry interval will double three times, and then\nincrease linearly by 2^3 * 10s.  Finally, the task will retry at\nintervals of max_backoff until the\ntask has been attempted max_attempts\ntimes. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,\n240s, 300s, 300s, ....\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nThis field has the same meaning as\n\nmax_doublings in\nqueue.yaml/xml\n.\n* \nmax-retry-duration=et\n\n    - If positive, \nmax_retry_duration\n specifies the time limit for\nretrying a failed task, measured from when the task was first\nattempted. Once \nmax_retry_duration\n time has passed \nand\n the\ntask has been attempted max_attempts\ntimes, no further attempts will be made and the task will be\ndeleted.\n\n\nIf zero, then the task age is unlimited.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nmax_retry_duration\n will be truncated to the nearest second.\n\n\nThis field has the same meaning as\n\ntask_age_limit in\nqueue.yaml/xml\n.\n* \nmin-backoff=duo\n\n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue\ns RetryConfig specifies that the task should be\nretried.\n\n\nIf unspecified when the queue is created, Cloud Tasks will pick the\ndefault.\n\n\nThis field is output only for pull queues.\n\n\nmin_backoff\n will be truncated to the nearest second.\n\n\nThis field has the same meaning as\n\nmin_backoff_seconds in\nqueue.yaml/xml\n.\n* \nunlimited-attempts=true\n\n    - If true, then the number of attempts is unlimited.\n\n\n\n\n\n\n\n\n\n\n..    state=sea\n\n\n\n\n\n\nOutput only. The state of the queue.\n\n\nstate\n can only be changed by called\nPauseQueue,\nResumeQueue, or uploading\n\nqueue.yaml/xml\n.\nUpdateQueue cannot be used to change \nstate\n.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p update-mask=string\n\n\n\n\nA mask used to specify which fields of the queue are being updated.\n\n\nIf empty, then all fields will be updated.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Patch"
        }, 
        {
            "location": "/projects_locations-queues-patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-patch/#required-scalar-argument", 
            "text": "name   (string)   Caller-specified and required in CreateQueue,\n    after which it becomes output only.  The queue name.  The queue name must have the following format: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID   PROJECT_ID  can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n    Identifying\n   projects  LOCATION_ID  is the canonical ID for the queue s location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.  QUEUE_ID  can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Queue:\n  app-engine-http-target:\n    app-engine-routing-override:\n      host: string\n      instance: string\n      service: string\n      version: string\n  name: string\n  purge-time: string\n  rate-limits:\n    max-burst-size: integer\n    max-concurrent-tasks: integer\n    max-tasks-dispatched-per-second: number\n  retry-config:\n    max-attempts: integer\n    max-backoff: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff: string\n    unlimited-attempts: boolean\n  state: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .app-engine-http-target.app-engine-routing-override    host=gubergren    Output only. The host that the task is sent to.  For more information, see How Requests are\nRouted .  The host is constructed as:    host = [application_domain_name] /br \n   | [service] +  #39;. #39; + [application_domain_name] /br \n   | [version] +  #39;. #39; + [application_domain_name] /br \n   | [version_dot_service]+  #39;. #39; + [application_domain_name] /br \n   | [instance] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_service] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version_dot_service] +  #39;. #39; + [application_domain_name]    application_domain_name  = The domain name of the app, for\n  example  app-id .appspot.com, which is associated with the\n  queue s project ID. Some tasks which were created using the App Engine\n  SDK use a custom domain name.    service =  service    version =  version    version_dot_service = \n  version  +  #39;. #39; + \n  service    instance =  instance    instance_dot_service = \n  instance  +  #39;. #39; + \n  service    instance_dot_version = \n  instance  +  #39;. #39; + \n  version    instance_dot_version_dot_service = \n  instance  +  #39;. #39; + \n  version  +  #39;. #39; + \n  service    If service is empty, then the task will be sent\nto the service which is the default service when the task is attempted.  If version is empty, then the task will be sent\nto the version which is the default version when the task is attempted.  If instance is empty, then the task\nwill be sent to an instance which is available when the task is\nattempted.  If service,\nversion, or\ninstance is invalid, then the task\nwill be sent to the default version of the default service when\nthe task is attempted.\n*  instance=sadipscing \n    - App instance.  By default, the task is sent to an instance which is available when\nthe task is attempted.  Requests can only be sent to a specific instance if manual scaling is used in App Engine\nStandard .\nApp Engine Flex does not support instances. For more information, see App Engine Standard request\nrouting \nand  App Engine Flex request\nrouting .\n*  service=aliquyam \n    - App service.  By default, the task is sent to the service which is the default\nservice when the task is attempted.  For some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n*  version=ea \n    - App version.  By default, the task is sent to the version which is the default\nversion when the task is attempted.  For some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.      ...    name=no    Caller-specified and required in CreateQueue,\n    after which it becomes output only.  The queue name.  The queue name must have the following format: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID   PROJECT_ID  can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n    Identifying\n   projects  LOCATION_ID  is the canonical ID for the queue s location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.  QUEUE_ID  can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.  purge-time=justo  Output only. The last time this queue was purged.     All tasks that were created before this time\nwere purged.  A queue can be purged using PurgeQueue, the App Engine Task Queue SDK, or the Cloud\nConsole .  Purge time will be truncated to the nearest microsecond. Purge\ntime will be unset if the queue has never been purged.\n*  rate-limits    max-burst-size=80 \n    - Output only. The max burst size.  Max burst size limits how fast tasks in queue are processed when\nmany tasks are in the queue and the rate is high. This field\nallows the queue to have a high rate so processing starts shortly\nafter a task is enqueued, but still limits resource usage when\nmany tasks are enqueued in a short period of time.  The  token bucket \nalgorithm is used to control the rate of task dispatches. Each\nqueue has a token bucket that holds tokens, up to the maximum\nspecified by  max_burst_size . Each time a task is dispatched, a\ntoken is removed from the bucket. Tasks will be dispatched until\nthe queue s bucket runs out of tokens. The bucket will be\ncontinuously refilled with new tokens based on\nmax_tasks_dispatched_per_second.  Cloud Tasks will pick the value of  max_burst_size  based on the\nvalue of\nmax_tasks_dispatched_per_second.  For App Engine queues that were created or updated using queue.yaml/xml ,  max_burst_size  is equal to bucket_size .\nSince  max_burst_size  is output only, if\nUpdateQueue is called on a queue\ncreated by  queue.yaml/xml ,  max_burst_size  will be reset based\non the value of\nmax_tasks_dispatched_per_second,\nregardless of whether\nmax_tasks_dispatched_per_second\nis updated.      max-concurrent-tasks=67    The maximum number of concurrent tasks that Cloud Tasks allows\n    to be dispatched for this queue. After this threshold has been\n    reached, Cloud Tasks stops dispatching tasks until the number of\n    concurrent requests decreases.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  The maximum allowed value is 5,000.  This field is output only for\npull queues and always -1, which indicates no limit. No other\nqueue types can have  max_concurrent_tasks  set to -1.  This field has the same meaning as max_concurrent_requests in\nqueue.yaml/xml .\n*  max-tasks-dispatched-per-second=0.832506532618 \n    - The maximum rate at which tasks are dispatched from this queue.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.   For App Engine queues, the maximum allowed value\n  is 500.  This field is output only   for pull queues. In addition to the\n   max_tasks_dispatched_per_second  limit, a maximum of 10 QPS of\n  LeaseTasks requests are allowed per pull queue.   This field has the same meaning as rate in\nqueue.yaml/xml .      ..retry-config    max-attempts=60    The maximum number of attempts for a task.  Cloud Tasks will attempt the task  max_attempts  times (that\nis, if the first attempt fails, then there will be max_attempts - 1  retries).  Must be   0.\n*  max-backoff=ipsum \n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue s RetryConfig specifies that the task should be\nretried.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  max_backoff  will be truncated to the nearest second.  This field has the same meaning as max_backoff_seconds in\nqueue.yaml/xml .\n*  max-doublings=96 \n    - The time between retries will double  max_doublings  times.  A task s retry interval starts at\nmin_backoff, then doubles max_doublings  times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff up to\nmax_attempts times.  For example, if min_backoff is 10s,\nmax_backoff is 300s, and max_doublings  is 3, then the a task will first be retried in\n10s. The retry interval will double three times, and then\nincrease linearly by 2^3 * 10s.  Finally, the task will retry at\nintervals of max_backoff until the\ntask has been attempted max_attempts\ntimes. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s,\n240s, 300s, 300s, ....  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  This field has the same meaning as max_doublings in\nqueue.yaml/xml .\n*  max-retry-duration=et \n    - If positive,  max_retry_duration  specifies the time limit for\nretrying a failed task, measured from when the task was first\nattempted. Once  max_retry_duration  time has passed  and  the\ntask has been attempted max_attempts\ntimes, no further attempts will be made and the task will be\ndeleted.  If zero, then the task age is unlimited.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  max_retry_duration  will be truncated to the nearest second.  This field has the same meaning as task_age_limit in\nqueue.yaml/xml .\n*  min-backoff=duo \n    - A task will be scheduled for retry between\nmin_backoff and\nmax_backoff duration after it fails,\nif the queue s RetryConfig specifies that the task should be\nretried.  If unspecified when the queue is created, Cloud Tasks will pick the\ndefault.  This field is output only for pull queues.  min_backoff  will be truncated to the nearest second.  This field has the same meaning as min_backoff_seconds in\nqueue.yaml/xml .\n*  unlimited-attempts=true \n    - If true, then the number of attempts is unlimited.      ..    state=sea    Output only. The state of the queue.  state  can only be changed by called\nPauseQueue,\nResumeQueue, or uploading queue.yaml/xml .\nUpdateQueue cannot be used to change  state .", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-patch/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p update-mask=string   A mask used to specify which fields of the queue are being updated.  If empty, then all fields will be updated.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-queues-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-pause/", 
            "text": "Pauses the queue.\n\n\nIf a queue is paused then the system will stop dispatching tasks\nuntil the queue is resumed via\nResumeQueue. Tasks can still be added\nwhen the queue is paused. A queue is paused if its\nstate is PAUSED.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-pause ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe queue name. For example:\n\nprojects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPauseQueueRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Pause"
        }, 
        {
            "location": "/projects_locations-queues-pause/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-pause ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-pause/#required-scalar-argument", 
            "text": "name   (string)   Required.  The queue name. For example: projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-pause/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PauseQueueRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-pause/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-pause/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-pause/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-purge/", 
            "text": "Purges a queue by deleting all of its tasks.\n\n\nAll tasks created before this method is called are permanently deleted.\n\n\nPurge operations can take up to one minute to take effect. Tasks\nmight be dispatched before the purge takes effect. A purge is irreversible.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-purge ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe queue name. For example:\n\nprojects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPurgeQueueRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Purge"
        }, 
        {
            "location": "/projects_locations-queues-purge/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-purge ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-purge/#required-scalar-argument", 
            "text": "name   (string)   Required.  The queue name. For example: projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-purge/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PurgeQueueRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-purge/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-purge/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-purge/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-resume/", 
            "text": "Resume a queue.\n\n\nThis method resumes a queue after it has been\nPAUSED or\nDISABLED. The state of a queue is stored\nin the queue\ns state; after calling this method it\nwill be set to RUNNING.\n\n\nWARNING: Resuming many high-QPS queues at the same time can\nlead to target overloading. If you are resuming high-QPS\nqueues, follow the 500/50/5 pattern described in\n\nManaging Cloud Tasks Scaling\nRisks\n.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-resume ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe queue name. For example:\n\nprojects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nResumeQueueRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Resume"
        }, 
        {
            "location": "/projects_locations-queues-resume/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-resume ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-resume/#required-scalar-argument", 
            "text": "name   (string)   Required.  The queue name. For example: projects/PROJECT_ID/location/LOCATION_ID/queues/QUEUE_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-resume/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ResumeQueueRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-resume/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-resume/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-resume/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-set-iam-policy/", 
            "text": "Sets the access control policy for a Queue. Replaces any existing\npolicy.\n\n\nNote: The Cloud Console does not check queue-level IAM permissions yet.\nProject-level permissions are required to use the Cloud Console.\n\n\nAuthorization requires the following\n\nGoogle IAM\n permission on the specified\nresource parent:\n\n\n\n\ncloudtasks.queues.setIamPolicy\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-set-iam-policy ...\n\n\nRequired Scalar Argument\n\n\n\n\nresource\n \n(string)\n\n\nREQUIRED: The resource for which the policy is being specified.\n    See the operation documentation for the appropriate value for this field.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSetIamPolicyRequest:\n  policy:\n    etag: string\n    version: integer\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .policy    etag=lorem\n\n\n\n\netag\n is used for optimistic concurrency control as a way to help\n    prevent simultaneous updates of a policy from overwriting each other.\n    It is strongly suggested that systems make use of the \netag\n in the\n    read-modify-write cycle to perform policy updates in order to avoid race\n    conditions: An \netag\n is returned in the response to \ngetIamPolicy\n, and\n    systems are expected to put that etag in the request to \nsetIamPolicy\n to\n    ensure that their change will be applied to the same version of the policy.\n\n\nIf no \netag\n is provided in the call to \nsetIamPolicy\n, then the existing\npolicy is overwritten blindly.\n* \nversion=26\n\n    - Deprecated.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Set Iam Policy"
        }, 
        {
            "location": "/projects_locations-queues-set-iam-policy/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-set-iam-policy ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-set-iam-policy/#required-scalar-argument", 
            "text": "resource   (string)  REQUIRED: The resource for which the policy is being specified.\n    See the operation documentation for the appropriate value for this field.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-set-iam-policy/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SetIamPolicyRequest:\n  policy:\n    etag: string\n    version: integer  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .policy    etag=lorem   etag  is used for optimistic concurrency control as a way to help\n    prevent simultaneous updates of a policy from overwriting each other.\n    It is strongly suggested that systems make use of the  etag  in the\n    read-modify-write cycle to perform policy updates in order to avoid race\n    conditions: An  etag  is returned in the response to  getIamPolicy , and\n    systems are expected to put that etag in the request to  setIamPolicy  to\n    ensure that their change will be applied to the same version of the policy.  If no  etag  is provided in the call to  setIamPolicy , then the existing\npolicy is overwritten blindly.\n*  version=26 \n    - Deprecated.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-set-iam-policy/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-set-iam-policy/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-set-iam-policy/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-acknowledge/", 
            "text": "Acknowledges a pull task.\n\n\nThe worker, that is, the entity that\nleased this task must call this method\nto indicate that the work associated with the task has finished.\n\n\nThe worker must acknowledge a task within the\nlease_duration or the lease\nwill expire and the task will become available to be leased\nagain. After the task is acknowledged, it will not be returned\nby a later LeaseTasks,\nGetTask, or\nListTasks.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-acknowledge ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe task name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAcknowledgeTaskRequest:\n  schedule-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    schedule-time=erat\n\n\n\n\nRequired.\n\n\nThe task\ns current schedule time, available in the\nschedule_time returned by\nLeaseTasks response or\nRenewLease response. This restriction is\nto ensure that your worker currently holds the lease.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Acknowledge"
        }, 
        {
            "location": "/projects_locations-queues-tasks-acknowledge/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-acknowledge ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-acknowledge/#required-scalar-argument", 
            "text": "name   (string)   Required.  The task name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-acknowledge/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AcknowledgeTaskRequest:\n  schedule-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    schedule-time=erat   Required.  The task s current schedule time, available in the\nschedule_time returned by\nLeaseTasks response or\nRenewLease response. This restriction is\nto ensure that your worker currently holds the lease.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-tasks-acknowledge/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-tasks-acknowledge/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-acknowledge/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-cancel-lease/", 
            "text": "Cancel a pull task\ns lease.\n\n\nThe worker can use this method to cancel a task\ns lease by\nsetting its schedule_time to now. This will\nmake the task available to be leased to the next caller of\nLeaseTasks.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-cancel-lease ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe task name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCancelLeaseRequest:\n  response-view: string\n  schedule-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    response-view=sadipscing\n\n\n\n\nThe response_view specifies which subset of the Task will be\n    returned.\n\n\nBy default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.\n\n\nAuthorization for FULL requires\n\ncloudtasks.tasks.fullView\n \nGoogle IAM\n\npermission on the Task resource.\n* \nschedule-time=dolor\n\n    - Required.\n\n\nThe task\ns current schedule time, available in the\nschedule_time returned by\nLeaseTasks response or\nRenewLease response. This restriction is\nto ensure that your worker currently holds the lease.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Cancel Lease"
        }, 
        {
            "location": "/projects_locations-queues-tasks-cancel-lease/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-cancel-lease ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-cancel-lease/#required-scalar-argument", 
            "text": "name   (string)   Required.  The task name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-cancel-lease/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CancelLeaseRequest:\n  response-view: string\n  schedule-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    response-view=sadipscing   The response_view specifies which subset of the Task will be\n    returned.  By default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.  Authorization for FULL requires cloudtasks.tasks.fullView   Google IAM \npermission on the Task resource.\n*  schedule-time=dolor \n    - Required.  The task s current schedule time, available in the\nschedule_time returned by\nLeaseTasks response or\nRenewLease response. This restriction is\nto ensure that your worker currently holds the lease.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-tasks-cancel-lease/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-tasks-cancel-lease/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-cancel-lease/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-create/", 
            "text": "Creates a task and adds it to a queue.\n\n\nTasks cannot be updated after creation; there is no UpdateTask command.\n\n\n\n\nFor App Engine queues, the maximum task size is\n  100KB.\n\n\nFor pull queues, the maximum task size is 1MB.\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\n\n\nRequired.\n\n\nThe queue name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\nThe queue must already exist.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCreateTaskRequest:\n  response-view: string\n  task:\n    app-engine-http-request:\n      app-engine-routing:\n        host: string\n        instance: string\n        service: string\n        version: string\n      headers: { string: string }\n      http-method: string\n      payload: string\n      relative-url: string\n    create-time: string\n    name: string\n    pull-message:\n      payload: string\n      tag: string\n    schedule-time: string\n    status:\n      attempt-dispatch-count: integer\n      attempt-response-count: integer\n      first-attempt-status:\n        dispatch-time: string\n        response-status:\n          code: integer\n          message: string\n        response-time: string\n        schedule-time: string\n      last-attempt-status:\n        dispatch-time: string\n        response-status:\n          code: integer\n          message: string\n        response-time: string\n        schedule-time: string\n    view: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .    response-view=eirmod\n\n\n\n\n\n\nThe response_view specifies which subset of the Task will be\n    returned.\n\n\nBy default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.\n\n\nAuthorization for FULL requires\n\ncloudtasks.tasks.fullView\n \nGoogle IAM\n\npermission on the Task resource.\n* \ntask.app-engine-http-request.app-engine-routing    host=elitr\n\n    - Output only. The host that the task is sent to.\n\n\nFor more information, see\n\nHow Requests are\nRouted\n.\n\n\nThe host is constructed as:\n\n\n\n\n\n\nhost = [application_domain_name]\n/br\n\n  \n| [service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version_dot_service]+ \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version_dot_service] + \n#39;.\n#39; + [application_domain_name]\n\n\n\n\n\n\napplication_domain_name\n = The domain name of the app, for\n  example \napp-id\n.appspot.com, which is associated with the\n  queue\ns project ID. Some tasks which were created using the App Engine\n  SDK use a custom domain name.\n\n\n\n\n\n\nservice =\n service\n\n\n\n\n\n\nversion =\n version\n\n\n\n\n\n\nversion_dot_service =\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance =\n instance\n\n\n\n\n\n\ninstance_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance_dot_version =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version\n\n\n\n\n\n\ninstance_dot_version_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\nIf service is empty, then the task will be sent\nto the service which is the default service when the task is attempted.\n\n\nIf version is empty, then the task will be sent\nto the version which is the default version when the task is attempted.\n\n\nIf instance is empty, then the task\nwill be sent to an instance which is available when the task is\nattempted.\n\n\nIf service,\nversion, or\ninstance is invalid, then the task\nwill be sent to the default version of the default service when\nthe task is attempted.\n* \ninstance=amet\n\n    - App instance.\n\n\nBy default, the task is sent to an instance which is available when\nthe task is attempted.\n\n\nRequests can only be sent to a specific instance if\n\nmanual scaling is used in App Engine\nStandard\n.\nApp Engine Flex does not support instances. For more information, see\n\nApp Engine Standard request\nrouting\n\nand \nApp Engine Flex request\nrouting\n.\n* \nservice=no\n\n    - App service.\n\n\nBy default, the task is sent to the service which is the default\nservice when the task is attempted.\n\n\nFor some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n* \nversion=labore\n\n    - App version.\n\n\nBy default, the task is sent to the version which is the default\nversion when the task is attempted.\n\n\nFor some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n\n\n\n\n\n\n\n\n\n\n..    headers=key=eirmod\n\n\n\n\n\n\nHTTP request headers.\n\n\nThis map contains the header field names and values.\nHeaders can be set when the\ntask is created.\nRepeated headers are not supported but a header value can contain commas.\n\n\nCloud Tasks sets some headers to default values:\n\n\n\n\nUser-Agent\n: By default, this header is\n  \n#34;AppEngine-Google; (+http://code.google.com/appengine)\n#34;\n.\n  This header can be modified, but Cloud Tasks will append\n  \n#34;AppEngine-Google; (+http://code.google.com/appengine)\n#34;\n to the\n  modified \nUser-Agent\n.\n\n\n\n\nIf the task has a payload, Cloud\nTasks sets the following headers:\n\n\n\n\nContent-Type\n: By default, the \nContent-Type\n header is set to\n  \n#34;application/octet-stream\n#34;\n. The default can be overridden by explicitly\n  setting \nContent-Type\n to a particular media type when the\n  task is created.\n  For example, \nContent-Type\n can be set to \n#34;application/json\n#34;\n.\n\n\nContent-Length\n: This is computed by Cloud Tasks. This value is\n  output only.   It cannot be changed.\n\n\n\n\nThe headers below cannot be set or overridden:\n\n\n\n\nHost\n\n\nX-Google-*\n\n\nX-AppEngine-*\n\n\n\n\nIn addition, Cloud Tasks sets some headers when the task is dispatched,\nsuch as headers containing information about the task; see\n\nrequest\nheaders\n.\nThese headers are set only when the task is dispatched, so they are not\nvisible when the task is returned in a Cloud Tasks response.\n\n\nAlthough there is no specific limit for the maximum number of headers or\nthe size, there is a limit on the maximum size of the Task. For more\ninformation, see the CreateTask documentation.\n    - the value will be associated with the given \nkey\n\n* \nhttp-method=dolore\n\n    - The HTTP method to use for the request. The default is POST.\n\n\nThe app\ns request handler for the task\ns target URL must be able to handle\nHTTP requests with this http_method, otherwise the task attempt will fail\nwith error code 405 (Method Not Allowed). See\n\nWriting a push task request\nhandler\n\nand the documentation for the request handlers in the language your app is\nwritten in e.g.\n\nPython Request\nHandler\n.\n* \npayload=invidunt\n\n    - Payload.\n\n\nThe payload will be sent as the HTTP message body. A message\nbody, and thus a payload, is allowed only if the HTTP method is\nPOST or PUT. It is an error to set a data payload on a task with\nan incompatible HttpMethod.\n* \nrelative-url=aliquyam\n\n    - The relative URL.\n\n\nThe relative URL must begin with \n/\n and must be a valid HTTP relative URL.\nIt can contain a path and query string arguments.\nIf the relative URL is empty, then the root path \n/\n will be used.\nNo spaces are allowed, and the maximum length allowed is 2083 characters.\n\n\n\n\n\n\n\n\n\n\n..    create-time=accusam\n\n\n\n\n\n\nOutput only. The time that the task was created.\n\n\ncreate_time\n will be truncated to the nearest second.\n* \nname=lorem\n\n    - Optionally caller-specified in CreateTask.\n\n\nThe task name.\n\n\nThe task name must have the following format:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID\n\n\n\n\nPROJECT_ID\n can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n   \nIdentifying\n   projects\n\n\nLOCATION_ID\n is the canonical ID for the task\ns location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.\n\n\nQUEUE_ID\n can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.\n\n\nTASK_ID\n can contain only letters ([A-Za-z]), numbers ([0-9]),\n  hyphens (-), or underscores (_). The maximum length is 500 characters.\n\n\npull-message    payload=sea\n\n\nA data payload consumed by the worker to execute the task.\n\n\n\n\n\n\ntag=et\n\n\nThe task\ns tag.\n\n\n\n\n\n\n\n\nTags allow similar tasks to be processed in a batch. If you label\ntasks with a tag, your worker can\nlease tasks with the same tag using\nfilter. For example, if you want to\naggregate the events associated with a specific user once a day,\nyou could tag tasks with the user ID.\n\n\nThe task\ns tag can only be set when the\ntask is created.\n\n\nThe tag must be less than 500 characters.\n\n\nSDK compatibility: Although the SDK allows tags to be either\nstring or\n\nbytes\n,\nonly UTF-8 encoded tags can be used in Cloud Tasks. If a tag isn\nt UTF-8\nencoded, the tag will be empty when the task is returned by Cloud Tasks.\n\n\n\n\n\n\n\n\n\n\n..    schedule-time=duo\n\n\n\n\n\n\nThe time when the task is scheduled to be attempted.\n\n\nFor App Engine queues, this is when the task will be attempted or retried.\n\n\nFor pull queues, this is the time when the task is available to\nbe leased; if a task is currently leased, this is the time when\nthe current lease expires, that is, the time that the task was\nleased plus the lease_duration.\n\n\nschedule_time\n will be truncated to the nearest microsecond.\n* \nstatus    attempt-dispatch-count=80\n\n    - Output only. The number of attempts dispatched.\n\n\nThis count includes attempts which have been dispatched but haven\nt\nreceived a response.\n* \nattempt-response-count=61\n\n    - Output only. The number of attempts which have received a response.\n\n\nThis field is not calculated for pull tasks.\n* \nfirst-attempt-status    dispatch-time=sanctus\n\n    - Output only. The time that this attempt was dispatched.\n\n\ndispatch_time\n will be truncated to the nearest microsecond.\n* \nresponse-status    code=79\n\n    - The status code, which should be an enum value of google.rpc.Code.\n* \nmessage=amet\n\n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.\n\n\n\n\n\n\n\n\n\n\n..    response-time=et\n\n\n\n\n\n\nOutput only. The time that this attempt response was received.\n\n\nresponse_time\n will be truncated to the nearest microsecond.\n* \nschedule-time=consetetur\n\n    - Output only. The time that this attempt was scheduled.\n\n\nschedule_time\n will be truncated to the nearest microsecond.\n\n\n\n\n\n\n\n\n\n\n..last-attempt-status    dispatch-time=ut\n\n\n\n\n\n\nOutput only. The time that this attempt was dispatched.\n\n\ndispatch_time\n will be truncated to the nearest microsecond.\n* \nresponse-status    code=85\n\n    - The status code, which should be an enum value of google.rpc.Code.\n* \nmessage=sed\n\n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.\n\n\n\n\n\n\n\n\n\n\n..    response-time=dolor\n\n\n\n\n\n\nOutput only. The time that this attempt response was received.\n\n\nresponse_time\n will be truncated to the nearest microsecond.\n* \nschedule-time=dolor\n\n    - Output only. The time that this attempt was scheduled.\n\n\nschedule_time\n will be truncated to the nearest microsecond.\n\n\n\n\n\n\n\n\n\n\n...    view=dolor\n\n\n\n\nOutput only. The view specifies which subset of the Task has\n    been returned.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Create"
        }, 
        {
            "location": "/projects_locations-queues-tasks-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-create/#required-scalar-argument", 
            "text": "parent   (string)   Required.  The queue name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID  The queue must already exist.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CreateTaskRequest:\n  response-view: string\n  task:\n    app-engine-http-request:\n      app-engine-routing:\n        host: string\n        instance: string\n        service: string\n        version: string\n      headers: { string: string }\n      http-method: string\n      payload: string\n      relative-url: string\n    create-time: string\n    name: string\n    pull-message:\n      payload: string\n      tag: string\n    schedule-time: string\n    status:\n      attempt-dispatch-count: integer\n      attempt-response-count: integer\n      first-attempt-status:\n        dispatch-time: string\n        response-status:\n          code: integer\n          message: string\n        response-time: string\n        schedule-time: string\n      last-attempt-status:\n        dispatch-time: string\n        response-status:\n          code: integer\n          message: string\n        response-time: string\n        schedule-time: string\n    view: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .    response-view=eirmod    The response_view specifies which subset of the Task will be\n    returned.  By default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.  Authorization for FULL requires cloudtasks.tasks.fullView   Google IAM \npermission on the Task resource.\n*  task.app-engine-http-request.app-engine-routing    host=elitr \n    - Output only. The host that the task is sent to.  For more information, see How Requests are\nRouted .  The host is constructed as:    host = [application_domain_name] /br \n   | [service] +  #39;. #39; + [application_domain_name] /br \n   | [version] +  #39;. #39; + [application_domain_name] /br \n   | [version_dot_service]+  #39;. #39; + [application_domain_name] /br \n   | [instance] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_service] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version_dot_service] +  #39;. #39; + [application_domain_name]    application_domain_name  = The domain name of the app, for\n  example  app-id .appspot.com, which is associated with the\n  queue s project ID. Some tasks which were created using the App Engine\n  SDK use a custom domain name.    service =  service    version =  version    version_dot_service = \n  version  +  #39;. #39; + \n  service    instance =  instance    instance_dot_service = \n  instance  +  #39;. #39; + \n  service    instance_dot_version = \n  instance  +  #39;. #39; + \n  version    instance_dot_version_dot_service = \n  instance  +  #39;. #39; + \n  version  +  #39;. #39; + \n  service    If service is empty, then the task will be sent\nto the service which is the default service when the task is attempted.  If version is empty, then the task will be sent\nto the version which is the default version when the task is attempted.  If instance is empty, then the task\nwill be sent to an instance which is available when the task is\nattempted.  If service,\nversion, or\ninstance is invalid, then the task\nwill be sent to the default version of the default service when\nthe task is attempted.\n*  instance=amet \n    - App instance.  By default, the task is sent to an instance which is available when\nthe task is attempted.  Requests can only be sent to a specific instance if manual scaling is used in App Engine\nStandard .\nApp Engine Flex does not support instances. For more information, see App Engine Standard request\nrouting \nand  App Engine Flex request\nrouting .\n*  service=no \n    - App service.  By default, the task is sent to the service which is the default\nservice when the task is attempted.  For some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.\n*  version=labore \n    - App version.  By default, the task is sent to the version which is the default\nversion when the task is attempted.  For some queues or tasks which were created using the App Engine\nTask Queue API, host is not parsable\ninto service,\nversion, and\ninstance. For example, some tasks\nwhich were created using the App Engine SDK use a custom domain\nname; custom domains are not parsed by Cloud Tasks. If\nhost is not parsable, then\nservice,\nversion, and\ninstance are the empty string.      ..    headers=key=eirmod    HTTP request headers.  This map contains the header field names and values.\nHeaders can be set when the\ntask is created.\nRepeated headers are not supported but a header value can contain commas.  Cloud Tasks sets some headers to default values:   User-Agent : By default, this header is\n   #34;AppEngine-Google; (+http://code.google.com/appengine) #34; .\n  This header can be modified, but Cloud Tasks will append\n   #34;AppEngine-Google; (+http://code.google.com/appengine) #34;  to the\n  modified  User-Agent .   If the task has a payload, Cloud\nTasks sets the following headers:   Content-Type : By default, the  Content-Type  header is set to\n   #34;application/octet-stream #34; . The default can be overridden by explicitly\n  setting  Content-Type  to a particular media type when the\n  task is created.\n  For example,  Content-Type  can be set to  #34;application/json #34; .  Content-Length : This is computed by Cloud Tasks. This value is\n  output only.   It cannot be changed.   The headers below cannot be set or overridden:   Host  X-Google-*  X-AppEngine-*   In addition, Cloud Tasks sets some headers when the task is dispatched,\nsuch as headers containing information about the task; see request\nheaders .\nThese headers are set only when the task is dispatched, so they are not\nvisible when the task is returned in a Cloud Tasks response.  Although there is no specific limit for the maximum number of headers or\nthe size, there is a limit on the maximum size of the Task. For more\ninformation, see the CreateTask documentation.\n    - the value will be associated with the given  key \n*  http-method=dolore \n    - The HTTP method to use for the request. The default is POST.  The app s request handler for the task s target URL must be able to handle\nHTTP requests with this http_method, otherwise the task attempt will fail\nwith error code 405 (Method Not Allowed). See Writing a push task request\nhandler \nand the documentation for the request handlers in the language your app is\nwritten in e.g. Python Request\nHandler .\n*  payload=invidunt \n    - Payload.  The payload will be sent as the HTTP message body. A message\nbody, and thus a payload, is allowed only if the HTTP method is\nPOST or PUT. It is an error to set a data payload on a task with\nan incompatible HttpMethod.\n*  relative-url=aliquyam \n    - The relative URL.  The relative URL must begin with  /  and must be a valid HTTP relative URL.\nIt can contain a path and query string arguments.\nIf the relative URL is empty, then the root path  /  will be used.\nNo spaces are allowed, and the maximum length allowed is 2083 characters.      ..    create-time=accusam    Output only. The time that the task was created.  create_time  will be truncated to the nearest second.\n*  name=lorem \n    - Optionally caller-specified in CreateTask.  The task name.  The task name must have the following format: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID   PROJECT_ID  can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n    Identifying\n   projects  LOCATION_ID  is the canonical ID for the task s location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.  QUEUE_ID  can contain letters ([A-Za-z]), numbers ([0-9]), or\n  hyphens (-). The maximum length is 100 characters.  TASK_ID  can contain only letters ([A-Za-z]), numbers ([0-9]),\n  hyphens (-), or underscores (_). The maximum length is 500 characters.  pull-message    payload=sea  A data payload consumed by the worker to execute the task.    tag=et  The task s tag.     Tags allow similar tasks to be processed in a batch. If you label\ntasks with a tag, your worker can\nlease tasks with the same tag using\nfilter. For example, if you want to\naggregate the events associated with a specific user once a day,\nyou could tag tasks with the user ID.  The task s tag can only be set when the\ntask is created.  The tag must be less than 500 characters.  SDK compatibility: Although the SDK allows tags to be either\nstring or bytes ,\nonly UTF-8 encoded tags can be used in Cloud Tasks. If a tag isn t UTF-8\nencoded, the tag will be empty when the task is returned by Cloud Tasks.      ..    schedule-time=duo    The time when the task is scheduled to be attempted.  For App Engine queues, this is when the task will be attempted or retried.  For pull queues, this is the time when the task is available to\nbe leased; if a task is currently leased, this is the time when\nthe current lease expires, that is, the time that the task was\nleased plus the lease_duration.  schedule_time  will be truncated to the nearest microsecond.\n*  status    attempt-dispatch-count=80 \n    - Output only. The number of attempts dispatched.  This count includes attempts which have been dispatched but haven t\nreceived a response.\n*  attempt-response-count=61 \n    - Output only. The number of attempts which have received a response.  This field is not calculated for pull tasks.\n*  first-attempt-status    dispatch-time=sanctus \n    - Output only. The time that this attempt was dispatched.  dispatch_time  will be truncated to the nearest microsecond.\n*  response-status    code=79 \n    - The status code, which should be an enum value of google.rpc.Code.\n*  message=amet \n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.      ..    response-time=et    Output only. The time that this attempt response was received.  response_time  will be truncated to the nearest microsecond.\n*  schedule-time=consetetur \n    - Output only. The time that this attempt was scheduled.  schedule_time  will be truncated to the nearest microsecond.      ..last-attempt-status    dispatch-time=ut    Output only. The time that this attempt was dispatched.  dispatch_time  will be truncated to the nearest microsecond.\n*  response-status    code=85 \n    - The status code, which should be an enum value of google.rpc.Code.\n*  message=sed \n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.      ..    response-time=dolor    Output only. The time that this attempt response was received.  response_time  will be truncated to the nearest microsecond.\n*  schedule-time=dolor \n    - Output only. The time that this attempt was scheduled.  schedule_time  will be truncated to the nearest microsecond.      ...    view=dolor   Output only. The view specifies which subset of the Task has\n    been returned.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-tasks-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-tasks-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-delete/", 
            "text": "Deletes a task.\n\n\nA task can be deleted if it is scheduled or dispatched. A task\ncannot be deleted if it has completed successfully or permanently\nfailed.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe task name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Delete"
        }, 
        {
            "location": "/projects_locations-queues-tasks-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-delete/#required-scalar-argument", 
            "text": "name   (string)   Required.  The task name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-get/", 
            "text": "Gets a task.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-get ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe task name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p response-view=string\n\n\n\n\nThe response_view specifies which subset of the Task will be\n    returned.\n\n\nBy default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.\n\n\nAuthorization for FULL requires\n\ncloudtasks.tasks.fullView\n \nGoogle IAM\n\npermission on the Task resource.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Get"
        }, 
        {
            "location": "/projects_locations-queues-tasks-get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-get/#required-scalar-argument", 
            "text": "name   (string)   Required.  The task name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p response-view=string   The response_view specifies which subset of the Task will be\n    returned.  By default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.  Authorization for FULL requires cloudtasks.tasks.fullView   Google IAM \npermission on the Task resource.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-lease/", 
            "text": "Leases tasks from a pull queue for\nlease_duration.\n\n\nThis method is invoked by the worker to obtain a lease. The\nworker must acknowledge the task via\nAcknowledgeTask after they have\nperformed the work associated with the task.\n\n\nThe payload is intended to store data that\nthe worker needs to perform the work associated with the task. To\nreturn the payloads in the response, set\nresponse_view to\nFULL.\n\n\nA maximum of 10 qps of LeaseTasks\nrequests are allowed per\nqueue. RESOURCE_EXHAUSTED\nis returned when this limit is\nexceeded. RESOURCE_EXHAUSTED\nis also returned when\nmax_tasks_dispatched_per_second\nis exceeded.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-lease ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\n\n\nRequired.\n\n\nThe queue name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLeaseTasksRequest:\n  filter: string\n  lease-duration: string\n  max-tasks: integer\n  response-view: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    filter=et\n\n\n\n\nfilter\n can be used to specify a subset of tasks to lease.\n\n\nWhen \nfilter\n is set to \ntag=\nlt;my-tag\ngt;\n then the\nresponse will contain only tasks whose\ntag is equal to \nlt;my-tag\ngt;\n. \nlt;my-tag\ngt;\n must be\nless than 500 characters.\n\n\nWhen \nfilter\n is set to \ntag_function=oldest_tag()\n, only tasks which have\nthe same tag as the task with the oldest\nschedule_time will be returned.\n\n\nGrammar Syntax:\n\n\n\n\n\n\nfilter = \n#34;tag=\n#34; tag | \n#34;tag_function=\n#34; function\n\n\n\n\n\n\ntag = string\n\n\n\n\n\n\nfunction = \n#34;oldest_tag()\n#34;\n\n\n\n\n\n\nThe \noldest_tag()\n function returns tasks which have the same tag as the\noldest task (ordered by schedule time).\n\n\nSDK compatibility: Although the SDK allows tags to be either\nstring or\n\nbytes\n,\nonly UTF-8 encoded tags can be used in Cloud Tasks. Tag which\naren\nt UTF-8 encoded can\nt be used in the\nfilter and the task\ns\ntag will be displayed as empty in Cloud Tasks.\n* \nlease-duration=consetetur\n\n    - Required.\n\n\nThe duration of the lease.\n\n\nEach task returned in the response will\nhave its schedule_time set to the current\ntime plus the \nlease_duration\n. The task is leased until its\nschedule_time; thus, the task will not be\nreturned to another LeaseTasks call\nbefore its schedule_time.\n\n\nAfter the worker has successfully finished the work associated\nwith the task, the worker must call via\nAcknowledgeTask before the\nschedule_time. Otherwise the task will be\nreturned to a later LeaseTasks call so\nthat another worker can retry it.\n\n\nThe maximum lease duration is 1 week.\n\nlease_duration\n will be truncated to the nearest second.\n* \nmax-tasks=49\n\n    - The maximum number of tasks to lease.\n\n\nThe system will make a best effort to return as close to as\n\nmax_tasks\n as possible.\n\n\nThe largest that \nmax_tasks\n can be is 1000.\n\n\nThe maximum total size of a lease tasks response is\n32 MB. If the sum of all task sizes requested reaches this limit,\nfewer tasks than requested are returned.\n* \nresponse-view=voluptua.\n\n    - The response_view specifies which subset of the Task will be\nreturned.\n\n\nBy default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.\n\n\nAuthorization for FULL requires\n\ncloudtasks.tasks.fullView\n \nGoogle IAM\n\npermission on the Task resource.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Lease"
        }, 
        {
            "location": "/projects_locations-queues-tasks-lease/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-lease ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-lease/#required-scalar-argument", 
            "text": "parent   (string)   Required.  The queue name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-lease/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  LeaseTasksRequest:\n  filter: string\n  lease-duration: string\n  max-tasks: integer\n  response-view: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    filter=et   filter  can be used to specify a subset of tasks to lease.  When  filter  is set to  tag= lt;my-tag gt;  then the\nresponse will contain only tasks whose\ntag is equal to  lt;my-tag gt; .  lt;my-tag gt;  must be\nless than 500 characters.  When  filter  is set to  tag_function=oldest_tag() , only tasks which have\nthe same tag as the task with the oldest\nschedule_time will be returned.  Grammar Syntax:    filter =  #34;tag= #34; tag |  #34;tag_function= #34; function    tag = string    function =  #34;oldest_tag() #34;    The  oldest_tag()  function returns tasks which have the same tag as the\noldest task (ordered by schedule time).  SDK compatibility: Although the SDK allows tags to be either\nstring or bytes ,\nonly UTF-8 encoded tags can be used in Cloud Tasks. Tag which\naren t UTF-8 encoded can t be used in the\nfilter and the task s\ntag will be displayed as empty in Cloud Tasks.\n*  lease-duration=consetetur \n    - Required.  The duration of the lease.  Each task returned in the response will\nhave its schedule_time set to the current\ntime plus the  lease_duration . The task is leased until its\nschedule_time; thus, the task will not be\nreturned to another LeaseTasks call\nbefore its schedule_time.  After the worker has successfully finished the work associated\nwith the task, the worker must call via\nAcknowledgeTask before the\nschedule_time. Otherwise the task will be\nreturned to a later LeaseTasks call so\nthat another worker can retry it.  The maximum lease duration is 1 week. lease_duration  will be truncated to the nearest second.\n*  max-tasks=49 \n    - The maximum number of tasks to lease.  The system will make a best effort to return as close to as max_tasks  as possible.  The largest that  max_tasks  can be is 1000.  The maximum total size of a lease tasks response is\n32 MB. If the sum of all task sizes requested reaches this limit,\nfewer tasks than requested are returned.\n*  response-view=voluptua. \n    - The response_view specifies which subset of the Task will be\nreturned.  By default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.  Authorization for FULL requires cloudtasks.tasks.fullView   Google IAM \npermission on the Task resource.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-tasks-lease/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-tasks-lease/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-lease/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-list/", 
            "text": "Lists the tasks in a queue.\n\n\nBy default, only the BASIC view is retrieved\ndue to performance considerations;\nresponse_view controls the\nsubset of information which is returned.\n\n\nThe tasks may be returned in any order. The ordering may change at any\ntime.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\n\n\nRequired.\n\n\nThe queue name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\n\n\nMaximum page size.\n\n\nFewer tasks than requested might be returned, even if more tasks exist; use\nnext_page_token in the response to\ndetermine if more tasks exist.\n\n\nThe maximum page size is 1000. If unspecified, the page size will be the\nmaximum.\n\n\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\n\n\nA token identifying the page of results to return.\n\n\nTo request the first page results, page_token must be empty. To\nrequest the next page of results, page_token must be the value of\nnext_page_token returned\nfrom the previous call to ListTasks\nmethod.\n\n\nThe page token is valid for only 2 hours.\n\n\n\n\n\n\n\n\n\n\n-p response-view=string\n\n\n\n\n\n\nThe response_view specifies which subset of the Task will be\n    returned.\n\n\nBy default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.\n\n\nAuthorization for FULL requires\n\ncloudtasks.tasks.fullView\n \nGoogle IAM\n\npermission on the Task resource.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks List"
        }, 
        {
            "location": "/projects_locations-queues-tasks-list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-list/#required-scalar-argument", 
            "text": "parent   (string)   Required.  The queue name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-size=integer    Maximum page size.  Fewer tasks than requested might be returned, even if more tasks exist; use\nnext_page_token in the response to\ndetermine if more tasks exist.  The maximum page size is 1000. If unspecified, the page size will be the\nmaximum.      -p page-token=string    A token identifying the page of results to return.  To request the first page results, page_token must be empty. To\nrequest the next page of results, page_token must be the value of\nnext_page_token returned\nfrom the previous call to ListTasks\nmethod.  The page token is valid for only 2 hours.      -p response-view=string    The response_view specifies which subset of the Task will be\n    returned.  By default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.  Authorization for FULL requires cloudtasks.tasks.fullView   Google IAM \npermission on the Task resource.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-renew-lease/", 
            "text": "Renew the current lease of a pull task.\n\n\nThe worker can use this method to extend the lease by a new\nduration, starting from now. The new task lease will be\nreturned in the task\ns schedule_time.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-renew-lease ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe task name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nRenewLeaseRequest:\n  lease-duration: string\n  response-view: string\n  schedule-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    lease-duration=lorem\n\n\n\n\nRequired.\n\n\nThe desired new lease duration, starting from now.\n\n\nThe maximum lease duration is 1 week.\n\nlease_duration\n will be truncated to the nearest second.\n* \nresponse-view=gubergren\n\n    - The response_view specifies which subset of the Task will be\nreturned.\n\n\nBy default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.\n\n\nAuthorization for FULL requires\n\ncloudtasks.tasks.fullView\n \nGoogle IAM\n\npermission on the Task resource.\n* \nschedule-time=justo\n\n    - Required.\n\n\nThe task\ns current schedule time, available in the\nschedule_time returned by\nLeaseTasks response or\nRenewLease response. This restriction is\nto ensure that your worker currently holds the lease.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Renew Lease"
        }, 
        {
            "location": "/projects_locations-queues-tasks-renew-lease/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-renew-lease ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-renew-lease/#required-scalar-argument", 
            "text": "name   (string)   Required.  The task name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-renew-lease/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  RenewLeaseRequest:\n  lease-duration: string\n  response-view: string\n  schedule-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    lease-duration=lorem   Required.  The desired new lease duration, starting from now.  The maximum lease duration is 1 week. lease_duration  will be truncated to the nearest second.\n*  response-view=gubergren \n    - The response_view specifies which subset of the Task will be\nreturned.  By default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.  Authorization for FULL requires cloudtasks.tasks.fullView   Google IAM \npermission on the Task resource.\n*  schedule-time=justo \n    - Required.  The task s current schedule time, available in the\nschedule_time returned by\nLeaseTasks response or\nRenewLease response. This restriction is\nto ensure that your worker currently holds the lease.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-tasks-renew-lease/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-tasks-renew-lease/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-renew-lease/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-tasks-run/", 
            "text": "Forces a task to run now.\n\n\nWhen this method is called, Cloud Tasks will dispatch the task, even if\nthe task is already running, the queue has reached its RateLimits or\nis PAUSED.\n\n\nThis command is meant to be used for manual debugging. For\nexample, RunTask can be used to retry a failed\ntask after a fix has been made or to manually force a task to be\ndispatched now.\n\n\nThe dispatched task is returned. That is, the task that is returned\ncontains the status after the task is dispatched but\nbefore the task is received by its target.\n\n\nIf Cloud Tasks receives a successful response from the task\ns\ntarget, then the task will be deleted; otherwise the task\ns\nschedule_time will be reset to the time that\nRunTask was called plus the retry delay specified\nin the queue\ns RetryConfig.\n\n\nRunTask returns\nNOT_FOUND when it is called on a\ntask that has already succeeded or permanently failed.\n\n\nRunTask cannot be called on a\npull task.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-tasks-run ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe task name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nRunTaskRequest:\n  response-view: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    response-view=sit\n\n\n\n\nThe response_view specifies which subset of the Task will be\n    returned.\n\n\nBy default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.\n\n\nAuthorization for FULL requires\n\ncloudtasks.tasks.fullView\n \nGoogle IAM\n\npermission on the Task resource.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Tasks Run"
        }, 
        {
            "location": "/projects_locations-queues-tasks-run/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-tasks-run ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-tasks-run/#required-scalar-argument", 
            "text": "name   (string)   Required.  The task name. For example: projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-tasks-run/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  RunTaskRequest:\n  response-view: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    response-view=sit   The response_view specifies which subset of the Task will be\n    returned.  By default response_view is BASIC; not all\ninformation is retrieved by default because some data, such as\npayloads, might be desirable to return only when needed because\nof its large size or because of the sensitivity of data that it\ncontains.  Authorization for FULL requires cloudtasks.tasks.fullView   Google IAM \npermission on the Task resource.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-tasks-run/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-tasks-run/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-tasks-run/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-queues-test-iam-permissions/", 
            "text": "Returns permissions that a caller has on a Queue.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \nfail open\n without warning.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudtasks2-beta2 --scope \nscope\n projects locations-queues-test-iam-permissions ...\n\n\nRequired Scalar Argument\n\n\n\n\nresource\n \n(string)\n\n\nREQUIRED: The resource for which the policy detail is being requested.\n    See the operation documentation for the appropriate value for this field.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTestIamPermissionsRequest:\n  permissions: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    permissions=vero\n\n\nThe set of permissions to check for the \nresource\n. Permissions with\n    wildcards (such as \n or \nstorage.\n) are not allowed. For more\n    information see\n    \nIAM Overview\n.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Queues Test Iam Permissions"
        }, 
        {
            "location": "/projects_locations-queues-test-iam-permissions/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudtasks2-beta2 --scope  scope  projects locations-queues-test-iam-permissions ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-queues-test-iam-permissions/#required-scalar-argument", 
            "text": "resource   (string)  REQUIRED: The resource for which the policy detail is being requested.\n    See the operation documentation for the appropriate value for this field.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-queues-test-iam-permissions/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  TestIamPermissionsRequest:\n  permissions: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    permissions=vero  The set of permissions to check for the  resource . Permissions with\n    wildcards (such as   or  storage. ) are not allowed. For more\n    information see\n     IAM Overview .  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-queues-test-iam-permissions/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-queues-test-iam-permissions/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-queues-test-iam-permissions/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}