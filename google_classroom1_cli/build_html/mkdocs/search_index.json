{
    "docs": [
        {
            "location": "/", 
            "text": "The \nclassroom1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle classroom\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nclassroom\n API can be found at the\n\nofficial documentation site\n.\n\n\nDownloads\n\n\nYou can download the pre-compiled 64bit binaries for the following platforms:\n\n\n\n\n \nubuntu\n\n\n \nosx\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nclassroom\n API at revision \n20151013\n. The CLI is at version \n0.3.5\n.\n\n\nclassroom1 [options]\n        courses\n                aliases-create \ncourse-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                aliases-delete \ncourse-id\n \nalias\n [-p \nv\n]... [-o \nout\n]\n                aliases-list \ncourse-id\n [-p \nv\n]... [-o \nout\n]\n                create (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                delete \nid\n [-p \nv\n]... [-o \nout\n]\n                get \nid\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n                patch \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                students-create \ncourse-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                students-delete \ncourse-id\n \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                students-get \ncourse-id\n \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                students-list \ncourse-id\n [-p \nv\n]... [-o \nout\n]\n                teachers-create \ncourse-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                teachers-delete \ncourse-id\n \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                teachers-get \ncourse-id\n \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                teachers-list \ncourse-id\n [-p \nv\n]... [-o \nout\n]\n                update \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        invitations\n                accept \nid\n [-p \nv\n]... [-o \nout\n]\n                create (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                delete \nid\n [-p \nv\n]... [-o \nout\n]\n                get \nid\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n        user-profiles\n                get \nuser-id\n [-p \nv\n]... [-o \nout\n]\n  classroom1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nclassroom1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/classroom1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/classroom1-secret.json\n, assuming that the required \nclassroom\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nclassroom1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#downloads", 
            "text": "You can download the pre-compiled 64bit binaries for the following platforms:     ubuntu    osx   Find the source code  on github .", 
            "title": "Downloads"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  classroom  API at revision  20151013 . The CLI is at version  0.3.5 .  classroom1 [options]\n        courses\n                aliases-create  course-id  (-r  kv )... [-p  v ]... [-o  out ]\n                aliases-delete  course-id   alias  [-p  v ]... [-o  out ]\n                aliases-list  course-id  [-p  v ]... [-o  out ]\n                create (-r  kv )... [-p  v ]... [-o  out ]\n                delete  id  [-p  v ]... [-o  out ]\n                get  id  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n                patch  id  (-r  kv )... [-p  v ]... [-o  out ]\n                students-create  course-id  (-r  kv )... [-p  v ]... [-o  out ]\n                students-delete  course-id   user-id  [-p  v ]... [-o  out ]\n                students-get  course-id   user-id  [-p  v ]... [-o  out ]\n                students-list  course-id  [-p  v ]... [-o  out ]\n                teachers-create  course-id  (-r  kv )... [-p  v ]... [-o  out ]\n                teachers-delete  course-id   user-id  [-p  v ]... [-o  out ]\n                teachers-get  course-id   user-id  [-p  v ]... [-o  out ]\n                teachers-list  course-id  [-p  v ]... [-o  out ]\n                update  id  (-r  kv )... [-p  v ]... [-o  out ]\n        invitations\n                accept  id  [-p  v ]... [-o  out ]\n                create (-r  kv )... [-p  v ]... [-o  out ]\n                delete  id  [-p  v ]... [-o  out ]\n                get  id  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n        user-profiles\n                get  user-id  [-p  v ]... [-o  out ]\n  classroom1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  classroom1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/classroom1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/classroom1-secret.json , assuming that the required  classroom  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  classroom1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/courses_aliases-create/", 
            "text": "Creates an alias for a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to create the alias or for access errors. * \nNOT_FOUND\n if the course does not exist. * \nALREADY_EXISTS\n if the alias already exists.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.courses\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses aliases-create ...\n\n\nRequired Scalar Argument\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course to alias. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCourseAlias:\n  alias: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    alias=eirmod\n\n\nAlias string. The format of the string indicates the desired alias scoping. * \nd:\n indicates a domain-scoped alias. Example: \nd:math_101\n * \np:\n indicates a project-scoped alias. Example: \np:abc123\n This field has a maximum length of 256 characters.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Aliases Create"
        }, 
        {
            "location": "/courses_aliases-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.courses  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses aliases-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_aliases-create/#required-scalar-argument", 
            "text": "course-id   (string)  Identifier of the course to alias. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_aliases-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CourseAlias:\n  alias: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    alias=eirmod  Alias string. The format of the string indicates the desired alias scoping. *  d:  indicates a domain-scoped alias. Example:  d:math_101  *  p:  indicates a project-scoped alias. Example:  p:abc123  This field has a maximum length of 256 characters.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/courses_aliases-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_aliases-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_aliases-delete/", 
            "text": "Deletes an alias of a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to remove the alias or for access errors. * \nNOT_FOUND\n if the alias does not exist.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.courses\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses aliases-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course whose alias should be deleted. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\nalias\n \n(string)\n\n\nAlias to delete. This may not be the Classroom-assigned identifier.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Aliases Delete"
        }, 
        {
            "location": "/courses_aliases-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.courses  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses aliases-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_aliases-delete/#required-scalar-arguments", 
            "text": "course-id   (string)  Identifier of the course whose alias should be deleted. This identifier can be either the Classroom-assigned identifier or an alias.    alias   (string)  Alias to delete. This may not be the Classroom-assigned identifier.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/courses_aliases-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_aliases-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_aliases-list/", 
            "text": "Returns a list of aliases for a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to access the course or for access errors. * \nNOT_FOUND\n if the course does not exist.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.courses\n\n\nhttps://www.googleapis.com/auth/classroom.courses.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses aliases-list ...\n\n\nRequired Scalar Argument\n\n\n\n\ncourse-id\n \n(string)\n\n\nThe identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nnextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Aliases List"
        }, 
        {
            "location": "/courses_aliases-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.courses  https://www.googleapis.com/auth/classroom.courses.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses aliases-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_aliases-list/#required-scalar-argument", 
            "text": "course-id   (string)  The identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_aliases-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_aliases-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.     -p page-size=integer   Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/courses_aliases-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_create/", 
            "text": "Creates a course. The user specified in \nownerId\n is the owner of the created course and added as a teacher. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to create courses or for access errors. * \nNOT_FOUND\n if the primary teacher is not a valid user. * \nFAILED_PRECONDITION\n if the course owner\ns account is disabled or for the following request errors: * UserGroupsMembershipLimitReached * \nALREADY_EXISTS\n if an alias was specified in the \nid\n and already exists.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.courses\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses create ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCourse:\n  alternate-link: string\n  course-state: string\n  creation-time: string\n  description: string\n  description-heading: string\n  enrollment-code: string\n  id: string\n  name: string\n  owner-id: string\n  room: string\n  section: string\n  update-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    alternate-link=sit\n\n\nAbsolute link to this course in the Classroom web UI. Read-only.\n\n\n\n\n\n\ncourse-state=stet\n\n\nState of the course. If unspecified, the default state is \nPROVISIONED\n.\n\n\n\n\n\n\ncreation-time=sed\n\n\nCreation time of the course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\ndescription=et\n\n\nOptional description. For example, \nWe\nll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!\n If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.\n\n\n\n\n\n\ndescription-heading=dolores\n\n\nOptional heading for the description. For example, \nWelcome to 10th Grade Biology.\n If set, this field must be a valid UTF-8 string and no longer than 3600 characters.\n\n\n\n\n\n\nenrollment-code=kasd\n\n\nEnrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\nid=accusam\n\n\nIdentifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The \nid\n is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.\n\n\n\n\n\n\nname=takimata\n\n\nName of the course. For example, \n10th Grade Biology\n. The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.\n\n\n\n\n\n\nowner-id=justo\n\n\nThe identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\nroom=amet.\n\n\nOptional room location. For example, \n301\n. If set, this field must be a valid UTF-8 string and no longer than 650 characters.\n\n\n\n\n\n\nsection=erat\n\n\nSection of the course. For example, \nPeriod 2\n. If set, this field must be a valid UTF-8 string and no longer than 2800 characters.\n\n\n\n\n\n\nupdate-time=labore\n\n\nTime of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Create"
        }, 
        {
            "location": "/courses_create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.courses  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Course:\n  alternate-link: string\n  course-state: string\n  creation-time: string\n  description: string\n  description-heading: string\n  enrollment-code: string\n  id: string\n  name: string\n  owner-id: string\n  room: string\n  section: string\n  update-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    alternate-link=sit  Absolute link to this course in the Classroom web UI. Read-only.    course-state=stet  State of the course. If unspecified, the default state is  PROVISIONED .    creation-time=sed  Creation time of the course. Specifying this field in a course update mask will result in an error. Read-only.    description=et  Optional description. For example,  We ll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!  If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.    description-heading=dolores  Optional heading for the description. For example,  Welcome to 10th Grade Biology.  If set, this field must be a valid UTF-8 string and no longer than 3600 characters.    enrollment-code=kasd  Enrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.    id=accusam  Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The  id  is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.    name=takimata  Name of the course. For example,  10th Grade Biology . The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.    owner-id=justo  The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an  INVALID_ARGUMENT  error.    room=amet.  Optional room location. For example,  301 . If set, this field must be a valid UTF-8 string and no longer than 650 characters.    section=erat  Section of the course. For example,  Period 2 . If set, this field must be a valid UTF-8 string and no longer than 2800 characters.    update-time=labore  Time of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/courses_create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_delete/", 
            "text": "Deletes a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to delete the requested course or for access errors. * \nNOT_FOUND\n if no course exists with the requested ID.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.courses\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nIdentifier of the course to delete. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Delete"
        }, 
        {
            "location": "/courses_delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.courses  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_delete/#required-scalar-argument", 
            "text": "id   (string)  Identifier of the course to delete. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_get/", 
            "text": "Returns a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to access the requested course or for access errors. * \nNOT_FOUND\n if no course exists with the requested ID.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.courses\n\n\nhttps://www.googleapis.com/auth/classroom.courses.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses get ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nIdentifier of the course to return. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/courses_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.courses  https://www.googleapis.com/auth/classroom.courses.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_get/#required-scalar-argument", 
            "text": "id   (string)  Identifier of the course to return. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_list/", 
            "text": "Returns a list of courses that the requesting user is permitted to view, restricted to those that match the request. This method returns the following error codes: * \nPERMISSION_DENIED\n for access errors. * \nINVALID_ARGUMENT\n if the query argument is malformed. * \nNOT_FOUND\n if any users specified in the query arguments do not exist.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.courses\n\n\nhttps://www.googleapis.com/auth/classroom.courses.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p teacher-id=string\n\n\n\n\nRestricts returned courses to those having a teacher with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nnextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.\n\n\n\n\n\n\n\n\n-p student-id=string\n\n\n\n\nRestricts returned courses to those having a student with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/courses_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.courses  https://www.googleapis.com/auth/classroom.courses.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p teacher-id=string   Restricts returned courses to those having a teacher with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user     -p page-size=integer   Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.     -p page-token=string   nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.     -p student-id=string   Restricts returned courses to those having a student with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/courses_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_patch/", 
            "text": "Updates one or more fields in a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to modify the requested course or for access errors. * \nNOT_FOUND\n if no course exists with the requested ID. * \nINVALID_ARGUMENT\n if invalid fields are specified in the update mask or if no update mask is supplied. * \nFAILED_PRECONDITION\n for the following request errors: * CourseNotModifiable\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.courses\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses patch ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nIdentifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCourse:\n  alternate-link: string\n  course-state: string\n  creation-time: string\n  description: string\n  description-heading: string\n  enrollment-code: string\n  id: string\n  name: string\n  owner-id: string\n  room: string\n  section: string\n  update-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    alternate-link=sea\n\n\nAbsolute link to this course in the Classroom web UI. Read-only.\n\n\n\n\n\n\ncourse-state=nonumy\n\n\nState of the course. If unspecified, the default state is \nPROVISIONED\n.\n\n\n\n\n\n\ncreation-time=dolores\n\n\nCreation time of the course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\ndescription=gubergren\n\n\nOptional description. For example, \nWe\nll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!\n If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.\n\n\n\n\n\n\ndescription-heading=sadipscing\n\n\nOptional heading for the description. For example, \nWelcome to 10th Grade Biology.\n If set, this field must be a valid UTF-8 string and no longer than 3600 characters.\n\n\n\n\n\n\nenrollment-code=aliquyam\n\n\nEnrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\nid=ea\n\n\nIdentifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The \nid\n is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.\n\n\n\n\n\n\nname=no\n\n\nName of the course. For example, \n10th Grade Biology\n. The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.\n\n\n\n\n\n\nowner-id=justo\n\n\nThe identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\nroom=justo\n\n\nOptional room location. For example, \n301\n. If set, this field must be a valid UTF-8 string and no longer than 650 characters.\n\n\n\n\n\n\nsection=et\n\n\nSection of the course. For example, \nPeriod 2\n. If set, this field must be a valid UTF-8 string and no longer than 2800 characters.\n\n\n\n\n\n\nupdate-time=et\n\n\nTime of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p update-mask=string\n\n\nMask that identifies which fields on the course to update. This field is required to do an update. The update will fail if invalid fields are specified. The following fields are valid: * \nname\n * \nsection\n * \ndescriptionHeading\n * \ndescription\n * \nroom\n * \ncourseState\n When set in a query parameter, this field should be specified as \nupdateMask=,,...\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Patch"
        }, 
        {
            "location": "/courses_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.courses  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_patch/#required-scalar-argument", 
            "text": "id   (string)  Identifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Course:\n  alternate-link: string\n  course-state: string\n  creation-time: string\n  description: string\n  description-heading: string\n  enrollment-code: string\n  id: string\n  name: string\n  owner-id: string\n  room: string\n  section: string\n  update-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    alternate-link=sea  Absolute link to this course in the Classroom web UI. Read-only.    course-state=nonumy  State of the course. If unspecified, the default state is  PROVISIONED .    creation-time=dolores  Creation time of the course. Specifying this field in a course update mask will result in an error. Read-only.    description=gubergren  Optional description. For example,  We ll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!  If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.    description-heading=sadipscing  Optional heading for the description. For example,  Welcome to 10th Grade Biology.  If set, this field must be a valid UTF-8 string and no longer than 3600 characters.    enrollment-code=aliquyam  Enrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.    id=ea  Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The  id  is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.    name=no  Name of the course. For example,  10th Grade Biology . The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.    owner-id=justo  The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an  INVALID_ARGUMENT  error.    room=justo  Optional room location. For example,  301 . If set, this field must be a valid UTF-8 string and no longer than 650 characters.    section=et  Section of the course. For example,  Period 2 . If set, this field must be a valid UTF-8 string and no longer than 2800 characters.    update-time=et  Time of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/courses_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_patch/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p update-mask=string  Mask that identifies which fields on the course to update. This field is required to do an update. The update will fail if invalid fields are specified. The following fields are valid: *  name  *  section  *  descriptionHeading  *  description  *  room  *  courseState  When set in a query parameter, this field should be specified as  updateMask=,,...", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/courses_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_students-create/", 
            "text": "Adds a user as a student of a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to create students in this course or for access errors. * \nNOT_FOUND\n if the requested course ID does not exist. * \nFAILED_PRECONDITION\n if the requested user\ns account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * UserGroupsMembershipLimitReached * \nALREADY_EXISTS\n if the user is already a student or teacher in the course.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.profile.emails\n\n\nhttps://www.googleapis.com/auth/classroom.profile.photos\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.profile.emails\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses students-create ...\n\n\nRequired Scalar Argument\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course to create the student in. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nStudent:\n  course-id: string\n  profile:\n    email-address: string\n    id: string\n    name:\n      family-name: string\n      full-name: string\n      given-name: string\n    photo-url: string\n  user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    course-id=diam\n\n\nIdentifier of the course. Read-only.\n\n\n\n\n\n\nprofile    email-address=ipsum\n\n\nEmail address of the user. Read-only.\n\n\n\n\n\n\nid=lorem\n\n\nIdentifier of the user. Read-only.\n\n\n\n\n\n\nname    family-name=et\n\n\nThe user\ns last name. Read-only.\n\n\n\n\n\n\nfull-name=duo\n\n\nThe user\ns full name formed by concatenating the first and last name values. Read-only.\n\n\n\n\n\n\n\n\ngiven-name=aliquyam\n\n\n\n\nThe user\ns first name. Read-only.\n\n\n\n\n\n\n\n\n..    photo-url=sea\n\n\n\n\nURL of user\ns profile photo. Read-only.\n\n\n\n\n\n\n\n\n..    user-id=lorem\n\n\n\n\nIdentifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p enrollment-code=string\n\n\nEnrollment code of the course to create the student in. This code is required if userId corresponds to the requesting user; it may be omitted if the requesting user has administrative permissions to create students for any user.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Students Create"
        }, 
        {
            "location": "/courses_students-create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.profile.emails  https://www.googleapis.com/auth/classroom.profile.photos  https://www.googleapis.com/auth/classroom.rosters   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.profile.emails .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses students-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_students-create/#required-scalar-argument", 
            "text": "course-id   (string)  Identifier of the course to create the student in. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_students-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Student:\n  course-id: string\n  profile:\n    email-address: string\n    id: string\n    name:\n      family-name: string\n      full-name: string\n      given-name: string\n    photo-url: string\n  user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    course-id=diam  Identifier of the course. Read-only.    profile    email-address=ipsum  Email address of the user. Read-only.    id=lorem  Identifier of the user. Read-only.    name    family-name=et  The user s last name. Read-only.    full-name=duo  The user s full name formed by concatenating the first and last name values. Read-only.     given-name=aliquyam   The user s first name. Read-only.     ..    photo-url=sea   URL of user s profile photo. Read-only.     ..    user-id=lorem   Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/courses_students-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_students-create/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p enrollment-code=string  Enrollment code of the course to create the student in. This code is required if userId corresponds to the requesting user; it may be omitted if the requesting user has administrative permissions to create students for any user.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/courses_students-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_students-delete/", 
            "text": "Deletes a student of a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to delete students of this course or for access errors. * \nNOT_FOUND\n if no student of this course has the requested ID or if the course does not exist.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.rosters\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses students-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nIdentifier of the student to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Students Delete"
        }, 
        {
            "location": "/courses_students-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.rosters  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses students-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_students-delete/#required-scalar-arguments", 
            "text": "course-id   (string)  Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.    user-id   (string)  Identifier of the student to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/courses_students-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_students-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_students-get/", 
            "text": "Returns a student of a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to view students of this course or for access errors. * \nNOT_FOUND\n if no student of this course has the requested ID or if the course does not exist.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.profile.emails\n\n\nhttps://www.googleapis.com/auth/classroom.profile.photos\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses students-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nIdentifier of the student to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Students Get"
        }, 
        {
            "location": "/courses_students-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.profile.emails  https://www.googleapis.com/auth/classroom.profile.photos  https://www.googleapis.com/auth/classroom.rosters  https://www.googleapis.com/auth/classroom.rosters.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses students-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_students-get/#required-scalar-arguments", 
            "text": "course-id   (string)  Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.    user-id   (string)  Identifier of the student to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/courses_students-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_students-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_students-list/", 
            "text": "Returns a list of students of this course that the requester is permitted to view. This method returns the following error codes: * \nNOT_FOUND\n if the course does not exist. * \nPERMISSION_DENIED\n for access errors.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.profile.emails\n\n\nhttps://www.googleapis.com/auth/classroom.profile.photos\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses students-list ...\n\n\nRequired Scalar Argument\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nnextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Students List"
        }, 
        {
            "location": "/courses_students-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.profile.emails  https://www.googleapis.com/auth/classroom.profile.photos  https://www.googleapis.com/auth/classroom.rosters  https://www.googleapis.com/auth/classroom.rosters.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses students-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_students-list/#required-scalar-argument", 
            "text": "course-id   (string)  Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_students-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_students-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.     -p page-size=integer   Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/courses_students-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_teachers-create/", 
            "text": "Creates a teacher of a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to create teachers in this course or for access errors. * \nNOT_FOUND\n if the requested course ID does not exist. * \nFAILED_PRECONDITION\n if the requested user\ns account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * \nALREADY_EXISTS\n if the user is already a teacher or student in the course.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.profile.emails\n\n\nhttps://www.googleapis.com/auth/classroom.profile.photos\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.profile.emails\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses teachers-create ...\n\n\nRequired Scalar Argument\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTeacher:\n  course-id: string\n  profile:\n    email-address: string\n    id: string\n    name:\n      family-name: string\n      full-name: string\n      given-name: string\n    photo-url: string\n  user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    course-id=eos\n\n\nIdentifier of the course. Read-only.\n\n\n\n\n\n\nprofile    email-address=erat\n\n\nEmail address of the user. Read-only.\n\n\n\n\n\n\nid=sadipscing\n\n\nIdentifier of the user. Read-only.\n\n\n\n\n\n\nname    family-name=dolor\n\n\nThe user\ns last name. Read-only.\n\n\n\n\n\n\nfull-name=eirmod\n\n\nThe user\ns full name formed by concatenating the first and last name values. Read-only.\n\n\n\n\n\n\n\n\ngiven-name=elitr\n\n\n\n\nThe user\ns first name. Read-only.\n\n\n\n\n\n\n\n\n..    photo-url=amet\n\n\n\n\nURL of user\ns profile photo. Read-only.\n\n\n\n\n\n\n\n\n..    user-id=no\n\n\n\n\nIdentifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Teachers Create"
        }, 
        {
            "location": "/courses_teachers-create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.profile.emails  https://www.googleapis.com/auth/classroom.profile.photos  https://www.googleapis.com/auth/classroom.rosters   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.profile.emails .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses teachers-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_teachers-create/#required-scalar-argument", 
            "text": "course-id   (string)  Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_teachers-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Teacher:\n  course-id: string\n  profile:\n    email-address: string\n    id: string\n    name:\n      family-name: string\n      full-name: string\n      given-name: string\n    photo-url: string\n  user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    course-id=eos  Identifier of the course. Read-only.    profile    email-address=erat  Email address of the user. Read-only.    id=sadipscing  Identifier of the user. Read-only.    name    family-name=dolor  The user s last name. Read-only.    full-name=eirmod  The user s full name formed by concatenating the first and last name values. Read-only.     given-name=elitr   The user s first name. Read-only.     ..    photo-url=amet   URL of user s profile photo. Read-only.     ..    user-id=no   Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/courses_teachers-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_teachers-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_teachers-delete/", 
            "text": "Deletes a teacher of a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to delete teachers of this course or for access errors. * \nNOT_FOUND\n if no teacher of this course has the requested ID or if the course does not exist. * \nFAILED_PRECONDITION\n if the requested ID belongs to the primary teacher of this course.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.rosters\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses teachers-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nIdentifier of the teacher to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Teachers Delete"
        }, 
        {
            "location": "/courses_teachers-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.rosters  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses teachers-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_teachers-delete/#required-scalar-arguments", 
            "text": "course-id   (string)  Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.    user-id   (string)  Identifier of the teacher to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/courses_teachers-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_teachers-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_teachers-get/", 
            "text": "Returns a teacher of a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to view teachers of this course or for access errors. * \nNOT_FOUND\n if no teacher of this course has the requested ID or if the course does not exist.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.profile.emails\n\n\nhttps://www.googleapis.com/auth/classroom.profile.photos\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses teachers-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nIdentifier of the teacher to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Teachers Get"
        }, 
        {
            "location": "/courses_teachers-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.profile.emails  https://www.googleapis.com/auth/classroom.profile.photos  https://www.googleapis.com/auth/classroom.rosters  https://www.googleapis.com/auth/classroom.rosters.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses teachers-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_teachers-get/#required-scalar-arguments", 
            "text": "course-id   (string)  Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.    user-id   (string)  Identifier of the teacher to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/courses_teachers-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_teachers-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_teachers-list/", 
            "text": "Returns a list of teachers of this course that the requester is permitted to view. This method returns the following error codes: * \nNOT_FOUND\n if the course does not exist. * \nPERMISSION_DENIED\n for access errors.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.profile.emails\n\n\nhttps://www.googleapis.com/auth/classroom.profile.photos\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses teachers-list ...\n\n\nRequired Scalar Argument\n\n\n\n\ncourse-id\n \n(string)\n\n\nIdentifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nnextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Teachers List"
        }, 
        {
            "location": "/courses_teachers-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.profile.emails  https://www.googleapis.com/auth/classroom.profile.photos  https://www.googleapis.com/auth/classroom.rosters  https://www.googleapis.com/auth/classroom.rosters.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses teachers-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_teachers-list/#required-scalar-argument", 
            "text": "course-id   (string)  Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_teachers-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_teachers-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-size=integer   Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.     -p page-token=string   nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/courses_teachers-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/courses_update/", 
            "text": "Updates a course. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to modify the requested course or for access errors. * \nNOT_FOUND\n if no course exists with the requested ID. * \nFAILED_PRECONDITION\n for the following request errors: * CourseNotModifiable\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.courses\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.courses\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n courses update ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nIdentifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCourse:\n  alternate-link: string\n  course-state: string\n  creation-time: string\n  description: string\n  description-heading: string\n  enrollment-code: string\n  id: string\n  name: string\n  owner-id: string\n  room: string\n  section: string\n  update-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    alternate-link=labore\n\n\nAbsolute link to this course in the Classroom web UI. Read-only.\n\n\n\n\n\n\ncourse-state=eirmod\n\n\nState of the course. If unspecified, the default state is \nPROVISIONED\n.\n\n\n\n\n\n\ncreation-time=dolore\n\n\nCreation time of the course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\ndescription=invidunt\n\n\nOptional description. For example, \nWe\nll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!\n If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.\n\n\n\n\n\n\ndescription-heading=aliquyam\n\n\nOptional heading for the description. For example, \nWelcome to 10th Grade Biology.\n If set, this field must be a valid UTF-8 string and no longer than 3600 characters.\n\n\n\n\n\n\nenrollment-code=accusam\n\n\nEnrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\nid=lorem\n\n\nIdentifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The \nid\n is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.\n\n\n\n\n\n\nname=sea\n\n\nName of the course. For example, \n10th Grade Biology\n. The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.\n\n\n\n\n\n\nowner-id=et\n\n\nThe identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\nroom=duo\n\n\nOptional room location. For example, \n301\n. If set, this field must be a valid UTF-8 string and no longer than 650 characters.\n\n\n\n\n\n\nsection=et\n\n\nSection of the course. For example, \nPeriod 2\n. If set, this field must be a valid UTF-8 string and no longer than 2800 characters.\n\n\n\n\n\n\nupdate-time=eirmod\n\n\nTime of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Update"
        }, 
        {
            "location": "/courses_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.courses  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.courses .\nYou can set the scope for this method like this:  classroom1 --scope  scope  courses update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/courses_update/#required-scalar-argument", 
            "text": "id   (string)  Identifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/courses_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Course:\n  alternate-link: string\n  course-state: string\n  creation-time: string\n  description: string\n  description-heading: string\n  enrollment-code: string\n  id: string\n  name: string\n  owner-id: string\n  room: string\n  section: string\n  update-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    alternate-link=labore  Absolute link to this course in the Classroom web UI. Read-only.    course-state=eirmod  State of the course. If unspecified, the default state is  PROVISIONED .    creation-time=dolore  Creation time of the course. Specifying this field in a course update mask will result in an error. Read-only.    description=invidunt  Optional description. For example,  We ll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!  If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.    description-heading=aliquyam  Optional heading for the description. For example,  Welcome to 10th Grade Biology.  If set, this field must be a valid UTF-8 string and no longer than 3600 characters.    enrollment-code=accusam  Enrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.    id=lorem  Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The  id  is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.    name=sea  Name of the course. For example,  10th Grade Biology . The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.    owner-id=et  The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an  INVALID_ARGUMENT  error.    room=duo  Optional room location. For example,  301 . If set, this field must be a valid UTF-8 string and no longer than 650 characters.    section=et  Section of the course. For example,  Period 2 . If set, this field must be a valid UTF-8 string and no longer than 2800 characters.    update-time=eirmod  Time of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/courses_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/courses_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/invitations_accept/", 
            "text": "Accepts an invitation, removing it and adding the invited user to the teachers or students (as appropriate) of the specified course. Only the invited user may accept an invitation. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to accept the requested invitation or for access errors. * \nFAILED_PRECONDITION\n for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * \nNOT_FOUND\n if no invitation exists with the requested ID.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.rosters\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n invitations accept ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nIdentifier of the invitation to accept.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Accept"
        }, 
        {
            "location": "/invitations_accept/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.rosters  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters .\nYou can set the scope for this method like this:  classroom1 --scope  scope  invitations accept ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/invitations_accept/#required-scalar-argument", 
            "text": "id   (string)  Identifier of the invitation to accept.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/invitations_accept/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/invitations_accept/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/invitations_create/", 
            "text": "Creates an invitation. Only one invitation for a user and course may exist at a time. Delete and re-create an invitation to make changes. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to create invitations for this course or for access errors. * \nNOT_FOUND\n if the course or the user does not exist. * \nFAILED_PRECONDITION\n if the requested user\ns account is disabled or if the user already has this role or a role with greater permissions. * \nALREADY_EXISTS\n if an invitation for the specified user and course already exists.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.rosters\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n invitations create ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nInvitation:\n  course-id: string\n  id: string\n  role: string\n  user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    course-id=sanctus\n\n\nIdentifier of the course to invite the user to.\n\n\n\n\n\n\nid=et\n\n\nIdentifier assigned by Classroom. Read-only.\n\n\n\n\n\n\nrole=amet\n\n\nRole to invite the user to have. Must not be \nCOURSE_ROLE_UNSPECIFIED\n.\n\n\n\n\n\n\nuser-id=et\n\n\nIdentifier of the invited user. When specified as a parameter of a request, this identifier can be set to one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Create"
        }, 
        {
            "location": "/invitations_create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.rosters  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters .\nYou can set the scope for this method like this:  classroom1 --scope  scope  invitations create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/invitations_create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Invitation:\n  course-id: string\n  id: string\n  role: string\n  user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    course-id=sanctus  Identifier of the course to invite the user to.    id=et  Identifier assigned by Classroom. Read-only.    role=amet  Role to invite the user to have. Must not be  COURSE_ROLE_UNSPECIFIED .    user-id=et  Identifier of the invited user. When specified as a parameter of a request, this identifier can be set to one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/invitations_create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/invitations_create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/invitations_delete/", 
            "text": "Deletes an invitation. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to delete the requested invitation or for access errors. * \nNOT_FOUND\n if no invitation exists with the requested ID.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/classroom.rosters\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n invitations delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nIdentifier of the invitation to delete.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Delete"
        }, 
        {
            "location": "/invitations_delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/classroom.rosters  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters .\nYou can set the scope for this method like this:  classroom1 --scope  scope  invitations delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/invitations_delete/#required-scalar-argument", 
            "text": "id   (string)  Identifier of the invitation to delete.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/invitations_delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/invitations_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/invitations_get/", 
            "text": "Returns an invitation. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to view the requested invitation or for access errors. * \nNOT_FOUND\n if no invitation exists with the requested ID.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n invitations get ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(string)\n\n\nIdentifier of the invitation to return.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/invitations_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.rosters  https://www.googleapis.com/auth/classroom.rosters.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  invitations get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/invitations_get/#required-scalar-argument", 
            "text": "id   (string)  Identifier of the invitation to return.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/invitations_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/invitations_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/invitations_list/", 
            "text": "Returns a list of invitations that the requesting user is permitted to view, restricted to those that match the list request. \nNote:\n At least one of \nuser_id\n or \ncourse_id\n must be supplied. Both fields can be supplied. This method returns the following error codes: * \nPERMISSION_DENIED\n for access errors.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n invitations list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p user-id=string\n\n\n\n\nRestricts returned invitations to those for a specific user. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nnextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.\n\n\n\n\n\n\n\n\n-p course-id=string\n\n\n\n\nRestricts returned invitations to those for a course with the specified identifier.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/invitations_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.rosters  https://www.googleapis.com/auth/classroom.rosters.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  invitations list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/invitations_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/invitations_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p user-id=string   Restricts returned invitations to those for a specific user. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user     -p page-token=string   nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.     -p page-size=integer   Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.     -p course-id=string   Restricts returned invitations to those for a course with the specified identifier.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/invitations_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/user-profiles_get/", 
            "text": "Returns a user profile. This method returns the following error codes: * \nPERMISSION_DENIED\n if the requesting user is not permitted to access this user profile or if no profile exists with the requested ID or for access errors.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/classroom.profile.emails\n\n\nhttps://www.googleapis.com/auth/classroom.profile.photos\n\n\nhttps://www.googleapis.com/auth/classroom.rosters\n\n\nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/classroom.rosters.readonly\n.\nYou can set the scope for this method like this: \nclassroom1 --scope \nscope\n user-profiles get ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nIdentifier of the profile to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal \n#34;me\n#34;\n, indicating the requesting user\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/user-profiles_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/classroom.profile.emails  https://www.googleapis.com/auth/classroom.profile.photos  https://www.googleapis.com/auth/classroom.rosters  https://www.googleapis.com/auth/classroom.rosters.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/classroom.rosters.readonly .\nYou can set the scope for this method like this:  classroom1 --scope  scope  user-profiles get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/user-profiles_get/#required-scalar-argument", 
            "text": "user-id   (string)  Identifier of the profile to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal  #34;me #34; , indicating the requesting user", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/user-profiles_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/user-profiles_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}