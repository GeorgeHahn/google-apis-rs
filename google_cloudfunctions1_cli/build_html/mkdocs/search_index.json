{
    "docs": [
        {
            "location": "/", 
            "text": "The \ncloudfunctions1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Cloud Functions\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nCloud Functions\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-cloudfunctions1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nCloud Functions\n API at revision \n20190620\n. The CLI is at version \n1.0.12\n.\n\n\ncloudfunctions1 [options]\n        operations\n                get \nname\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n        projects\n                locations-functions-call \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-functions-create \nlocation\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-functions-delete \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-functions-generate-download-url \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-functions-generate-upload-url \nparent\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-functions-get \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-functions-get-iam-policy \nresource\n [-p \nv\n]... [-o \nout\n]\n                locations-functions-list \nparent\n [-p \nv\n]... [-o \nout\n]\n                locations-functions-patch \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-functions-set-iam-policy \nresource\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-functions-test-iam-permissions \nresource\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-list \nname\n [-p \nv\n]... [-o \nout\n]\n  cloudfunctions1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ncloudfunctions1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/cloudfunctions1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/cloudfunctions1-secret.json\n, assuming that the required \ncloudfunctions\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ncloudfunctions1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-cloudfunctions1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Cloud Functions  API at revision  20190620 . The CLI is at version  1.0.12 .  cloudfunctions1 [options]\n        operations\n                get  name  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n        projects\n                locations-functions-call  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-functions-create  location  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-functions-delete  name  [-p  v ]... [-o  out ]\n                locations-functions-generate-download-url  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-functions-generate-upload-url  parent  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-functions-get  name  [-p  v ]... [-o  out ]\n                locations-functions-get-iam-policy  resource  [-p  v ]... [-o  out ]\n                locations-functions-list  parent  [-p  v ]... [-o  out ]\n                locations-functions-patch  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-functions-set-iam-policy  resource  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-functions-test-iam-permissions  resource  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-list  name  [-p  v ]... [-o  out ]\n  cloudfunctions1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  cloudfunctions1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/cloudfunctions1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/cloudfunctions1-secret.json , assuming that the required  cloudfunctions  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  cloudfunctions1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/operations_get/", 
            "text": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n operations get ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe name of the operation resource.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/operations_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  operations get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/operations_get/#required-scalar-argument", 
            "text": "name   (string)  The name of the operation resource.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/operations_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/operations_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/operations_list/", 
            "text": "Lists operations that match the specified filter in the request. If the\nserver doesn\nt support this method, it returns \nUNIMPLEMENTED\n.\n\n\nNOTE: the \nname\n binding allows API services to override the binding\nto use different resource name schemes, such as \nusers/*/operations\n. To\noverride the binding, API services can add a binding such as\n\n#34;/v1/{name=users/*}/operations\n#34;\n to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n operations list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p filter=string\n\n\n\n\nRequired. A filter for matching the requested operations.\nbr\nbr\n The supported formats of \nb\nfilter\n/b\n are:\nbr\n To query for specific function: \ncode\nproject:\n,location:\n,function:\n/code\nbr\n To query for all of the latest operations for a project: \ncode\nproject:\n,latest:true\n/code\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe standard list page token.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nThe standard list page size.\n\n\n\n\n\n\n\n\n-p name=string\n\n\n\n\nMust not be set.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/operations_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  operations list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/operations_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/operations_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p filter=string   Required. A filter for matching the requested operations. br br  The supported formats of  b filter /b  are: br  To query for specific function:  code project: ,location: ,function: /code br  To query for all of the latest operations for a project:  code project: ,latest:true /code     -p page-token=string   The standard list page token.     -p page-size=integer   The standard list page size.     -p name=string   Must not be set.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/operations_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-call/", 
            "text": "Synchronously invokes a deployed Cloud Function. To be used for testing\npurposes as very limited traffic is allowed. For more information on\nthe actual limits, refer to\n\nRate Limits\n.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-call ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe name of the function to be called.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCallFunctionRequest:\n  data: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    data=eirmod\n\n\nInput to be passed to the function.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Call"
        }, 
        {
            "location": "/projects_locations-functions-call/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-call ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-call/#required-scalar-argument", 
            "text": "name   (string)  The name of the function to be called.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-call/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CallFunctionRequest:\n  data: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    data=eirmod  Input to be passed to the function.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-functions-call/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-functions-call/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-call/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-create/", 
            "text": "Creates a new function. If a function with the given name already exists in\nthe specified project, the long running operation will return\n\nALREADY_EXISTS\n error.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nlocation\n \n(string)\n\n\nThe project and location in which the function should be created, specified\n    in the format \nprojects/*/locations/*\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCloudFunction:\n  available-memory-mb: integer\n  description: string\n  entry-point: string\n  environment-variables: { string: string }\n  event-trigger:\n    event-type: string\n    resource: string\n    service: string\n  https-trigger:\n    url: string\n  labels: { string: string }\n  max-instances: integer\n  name: string\n  network: string\n  runtime: string\n  service-account-email: string\n  source-archive-url: string\n  source-repository:\n    deployed-url: string\n    url: string\n  source-upload-url: string\n  status: string\n  timeout: string\n  update-time: string\n  version-id: string\n  vpc-connector: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    available-memory-mb=53\n\n\nThe amount of memory in MB available for a function.\n    Defaults to 256MB.\n\n\n\n\n\n\ndescription=stet\n\n\nUser-provided description of a function.\n\n\n\n\n\n\nentry-point=sed\n\n\nThe name of the function (as defined in source code) that will be\n    executed. Defaults to the resource name suffix, if not specified. For\n    backward compatibility, if function with given name is not found, then the\n    system will try to use function named \nfunction\n.\n    For Node.js this is name of a function exported by the module specified\n    in \nsource_location\n.\n\n\n\n\n\n\nenvironment-variables=key=et\n\n\nEnvironment variables that shall be available during function execution.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\n\n\nevent-trigger    event-type=dolores\n\n\n\n\n\n\nRequired. The type of event to observe. For example:\n    \nproviders/cloud.storage/eventTypes/object.change\n and\n    \nproviders/cloud.pubsub/eventTypes/topic.publish\n.\n\n\nEvent types match pattern \nproviders/*/eventTypes/*.*\n.\nThe pattern contains:\n\n\n\n\nnamespace: For example, \ncloud.storage\n and\n   \ngoogle.firebase.analytics\n.\n\n\nresource type: The type of resource on which event occurs. For\n   example, the Google Cloud Storage API includes the type \nobject\n.\n\n\naction: The action that generates the event. For example, action for\n   a Google Cloud Storage Object is \nchange\n.\nThese parts are lower case.\n\n\nresource=kasd\n\n\nRequired. The resource(s) from which to observe events, for example,\n\nprojects/_/buckets/myBucket\n.\n\n\n\n\n\n\n\n\nNot all syntactically correct values are accepted by all services. For\nexample:\n\n\n\n\nThe authorization model must support it. Google Cloud Functions\n   only allows EventTriggers to be deployed that observe resources in the\n   same project as the \nCloudFunction\n.\n\n\nThe resource type must match the pattern expected for an\n   \nevent_type\n. For example, an \nEventTrigger\n that has an\n   \nevent_type\n of \ngoogle.pubsub.topic.publish\n should have a resource\n   that matches Google Cloud Pub/Sub topics.\n\n\n\n\nAdditionally, some services may support short names when creating an\n\nEventTrigger\n. These will always be returned in the normalized \nlong\n\nformat.\n\n\nSee each \nservice\ns\n documentation for supported formats.\n* \nservice=accusam\n\n    - The hostname of the service that should be observed.\n\n\nIf no string is provided, the default service implementing the API will\nbe used. For example, \nstorage.googleapis.com\n is the default for all\nevent types in the \ngoogle.storage\n namespace.\n\n\n\n\n\n\n\n\n\n\n..https-trigger    url=takimata\n\n\n\n\nOutput only. The deployed url for the function.\n\n\n\n\n\n\n\n\n..    labels=key=justo\n\n\n\n\nLabels associated with this Cloud Function.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\nmax-instances=100\n\n\nThe limit on the maximum number of function instances that may coexist at a\n    given time.\n\n\n\n\n\n\nname=erat\n\n\nA user-defined name of the function. Function names must be unique\n    globally and match pattern \nprojects/*/locations/*/functions/*\n\n\n\n\n\n\n\n\nnetwork=labore\n\n\n\n\n\n\nThe VPC Network that this cloud function can connect to. It can be\n    either the fully-qualified URI, or the short name of the network resource.\n    If the short network name is used, the network must belong to the same\n    project. Otherwise, it must belong to a project within the same\n    organization. The format of this field is either\n    \nprojects/{project}/global/networks/{network}\n or \n{network}\n, where\n    {project} is a project id where the network is defined, and {network} is\n    the short name of the network.\n\n\nThis field is mutually exclusive with \nvpc_connector\n and will be replaced\nby it.\n\n\nSee \nthe VPC documentation\n for\nmore information on connecting Cloud projects.\n\n\nThis feature is currently in alpha, available only for whitelisted users.\n* \nruntime=sea\n\n    - Required. The runtime in which the function is going to run. Choices:\n\n\n\n\nnodejs6\n: Node.js 6\n\n\nnodejs8\n: Node.js 8\n\n\nnodejs10\n: Node.js 10\n\n\npython37\n: Python 3.7\n\n\ngo111\n: Go 1.11\n\n\nservice-account-email=nonumy\n\n\nThe email of the function\ns service account. If empty, defaults to\n{project_id}@appspot.gserviceaccount.com.\n\n\n\n\n\n\nsource-archive-url=dolores\n\n\nThe Google Cloud Storage URL, starting with gs://, pointing to the zip\narchive which contains the function.\n\n\n\n\n\n\nsource-repository    deployed-url=gubergren\n\n\nOutput only. The URL pointing to the hosted repository where the function\nwere defined at the time of deployment. It always points to a specific\ncommit in the format described above.\n\n\n\n\n\n\nurl=sadipscing\n\n\nThe URL pointing to the hosted repository where the function is defined.\nThere are supported Cloud Source Repository URLs in the following\nformats:\n\n\n\n\n\n\n\n\nTo refer to a specific commit:\n\nhttps://source.developers.google.com/projects/*/repos/*/revisions/*/paths/*\n\nTo refer to a moveable alias (branch):\n\nhttps://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/*\n\nIn particular, to refer to HEAD use \nmaster\n moveable alias.\nTo refer to a specific fixed alias (tag):\n\nhttps://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*\n\n\nYou may omit \npaths/*\n if you want to use the main directory.\n\n\n\n\n\n\n\n\n\n\n..    source-upload-url=aliquyam\n\n\n\n\nThe Google Cloud Storage signed URL used for source uploading, generated\n    by google.cloud.functions.v1.GenerateUploadUrl\n\n\n\n\n\n\nstatus=ea\n\n\nOutput only. Status of the function deployment.\n\n\n\n\n\n\ntimeout=no\n\n\nThe function execution timeout. Execution is considered failed and\n    can be terminated if the function is not completed at the end of the\n    timeout period. Defaults to 60 seconds.\n\n\n\n\n\n\nupdate-time=justo\n\n\nOutput only. The last update timestamp of a Cloud Function.\n\n\n\n\n\n\nversion-id=justo\n\n\nOutput only.\n    The version identifier of the Cloud Function. Each deployment attempt\n    results in a new version of a function being created.\n\n\n\n\n\n\nvpc-connector=et\n\n\n\n\nThe VPC Network Connector that this cloud function can connect to. It can\n    be either the fully-qualified URI, or the short name of the network\n    connector resource. The format of this field is\n    \nprojects/*/locations/*/connectors/*\n\n\nThis field is mutually exclusive with \nnetwork\n field and will eventually\nreplace it.\n\n\nSee \nthe VPC documentation\n for\nmore information on connecting Cloud projects.\n\n\nThis feature is currently in alpha, available only for whitelisted users.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Create"
        }, 
        {
            "location": "/projects_locations-functions-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-create/#required-scalar-argument", 
            "text": "location   (string)  The project and location in which the function should be created, specified\n    in the format  projects/*/locations/*", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CloudFunction:\n  available-memory-mb: integer\n  description: string\n  entry-point: string\n  environment-variables: { string: string }\n  event-trigger:\n    event-type: string\n    resource: string\n    service: string\n  https-trigger:\n    url: string\n  labels: { string: string }\n  max-instances: integer\n  name: string\n  network: string\n  runtime: string\n  service-account-email: string\n  source-archive-url: string\n  source-repository:\n    deployed-url: string\n    url: string\n  source-upload-url: string\n  status: string\n  timeout: string\n  update-time: string\n  version-id: string\n  vpc-connector: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    available-memory-mb=53  The amount of memory in MB available for a function.\n    Defaults to 256MB.    description=stet  User-provided description of a function.    entry-point=sed  The name of the function (as defined in source code) that will be\n    executed. Defaults to the resource name suffix, if not specified. For\n    backward compatibility, if function with given name is not found, then the\n    system will try to use function named  function .\n    For Node.js this is name of a function exported by the module specified\n    in  source_location .    environment-variables=key=et  Environment variables that shall be available during function execution.  the value will be associated with the given  key     event-trigger    event-type=dolores    Required. The type of event to observe. For example:\n     providers/cloud.storage/eventTypes/object.change  and\n     providers/cloud.pubsub/eventTypes/topic.publish .  Event types match pattern  providers/*/eventTypes/*.* .\nThe pattern contains:   namespace: For example,  cloud.storage  and\n    google.firebase.analytics .  resource type: The type of resource on which event occurs. For\n   example, the Google Cloud Storage API includes the type  object .  action: The action that generates the event. For example, action for\n   a Google Cloud Storage Object is  change .\nThese parts are lower case.  resource=kasd  Required. The resource(s) from which to observe events, for example, projects/_/buckets/myBucket .     Not all syntactically correct values are accepted by all services. For\nexample:   The authorization model must support it. Google Cloud Functions\n   only allows EventTriggers to be deployed that observe resources in the\n   same project as the  CloudFunction .  The resource type must match the pattern expected for an\n    event_type . For example, an  EventTrigger  that has an\n    event_type  of  google.pubsub.topic.publish  should have a resource\n   that matches Google Cloud Pub/Sub topics.   Additionally, some services may support short names when creating an EventTrigger . These will always be returned in the normalized  long \nformat.  See each  service s  documentation for supported formats.\n*  service=accusam \n    - The hostname of the service that should be observed.  If no string is provided, the default service implementing the API will\nbe used. For example,  storage.googleapis.com  is the default for all\nevent types in the  google.storage  namespace.      ..https-trigger    url=takimata   Output only. The deployed url for the function.     ..    labels=key=justo   Labels associated with this Cloud Function.  the value will be associated with the given  key    max-instances=100  The limit on the maximum number of function instances that may coexist at a\n    given time.    name=erat  A user-defined name of the function. Function names must be unique\n    globally and match pattern  projects/*/locations/*/functions/*     network=labore    The VPC Network that this cloud function can connect to. It can be\n    either the fully-qualified URI, or the short name of the network resource.\n    If the short network name is used, the network must belong to the same\n    project. Otherwise, it must belong to a project within the same\n    organization. The format of this field is either\n     projects/{project}/global/networks/{network}  or  {network} , where\n    {project} is a project id where the network is defined, and {network} is\n    the short name of the network.  This field is mutually exclusive with  vpc_connector  and will be replaced\nby it.  See  the VPC documentation  for\nmore information on connecting Cloud projects.  This feature is currently in alpha, available only for whitelisted users.\n*  runtime=sea \n    - Required. The runtime in which the function is going to run. Choices:   nodejs6 : Node.js 6  nodejs8 : Node.js 8  nodejs10 : Node.js 10  python37 : Python 3.7  go111 : Go 1.11  service-account-email=nonumy  The email of the function s service account. If empty, defaults to\n{project_id}@appspot.gserviceaccount.com.    source-archive-url=dolores  The Google Cloud Storage URL, starting with gs://, pointing to the zip\narchive which contains the function.    source-repository    deployed-url=gubergren  Output only. The URL pointing to the hosted repository where the function\nwere defined at the time of deployment. It always points to a specific\ncommit in the format described above.    url=sadipscing  The URL pointing to the hosted repository where the function is defined.\nThere are supported Cloud Source Repository URLs in the following\nformats:     To refer to a specific commit: https://source.developers.google.com/projects/*/repos/*/revisions/*/paths/* \nTo refer to a moveable alias (branch): https://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/* \nIn particular, to refer to HEAD use  master  moveable alias.\nTo refer to a specific fixed alias (tag): https://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*  You may omit  paths/*  if you want to use the main directory.      ..    source-upload-url=aliquyam   The Google Cloud Storage signed URL used for source uploading, generated\n    by google.cloud.functions.v1.GenerateUploadUrl    status=ea  Output only. Status of the function deployment.    timeout=no  The function execution timeout. Execution is considered failed and\n    can be terminated if the function is not completed at the end of the\n    timeout period. Defaults to 60 seconds.    update-time=justo  Output only. The last update timestamp of a Cloud Function.    version-id=justo  Output only.\n    The version identifier of the Cloud Function. Each deployment attempt\n    results in a new version of a function being created.    vpc-connector=et   The VPC Network Connector that this cloud function can connect to. It can\n    be either the fully-qualified URI, or the short name of the network\n    connector resource. The format of this field is\n     projects/*/locations/*/connectors/*  This field is mutually exclusive with  network  field and will eventually\nreplace it.  See  the VPC documentation  for\nmore information on connecting Cloud projects.  This feature is currently in alpha, available only for whitelisted users.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-functions-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-functions-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-delete/", 
            "text": "Deletes a function with the given name from the specified project. If the\ngiven function is used by some trigger, the trigger will be updated to\nremove this function.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe name of the function which should be deleted.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Delete"
        }, 
        {
            "location": "/projects_locations-functions-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-delete/#required-scalar-argument", 
            "text": "name   (string)  The name of the function which should be deleted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-generate-download-url/", 
            "text": "Returns a signed URL for downloading deployed function source code.\nThe URL is only valid for a limited period and should be used within\nminutes after generation.\nFor more information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-generate-download-url ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe name of function for which source code Google Cloud Storage signed\n    URL should be generated.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nGenerateDownloadUrlRequest:\n  version-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    version-id=et\n\n\nThe optional version of function. If not set, default, current version\n    is used.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Generate Download Url"
        }, 
        {
            "location": "/projects_locations-functions-generate-download-url/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-generate-download-url ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-generate-download-url/#required-scalar-argument", 
            "text": "name   (string)  The name of function for which source code Google Cloud Storage signed\n    URL should be generated.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-generate-download-url/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  GenerateDownloadUrlRequest:\n  version-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    version-id=et  The optional version of function. If not set, default, current version\n    is used.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-functions-generate-download-url/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-functions-generate-download-url/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-generate-download-url/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-generate-upload-url/", 
            "text": "Returns a signed URL for uploading a function source code.\nFor more information about the signed URL usage see:\nhttps://cloud.google.com/storage/docs/access-control/signed-urls.\nOnce the function source code upload is complete, the used signed\nURL should be provided in CreateFunction or UpdateFunction request\nas a reference to the function source code.\n\n\nWhen uploading source code to the generated signed URL, please follow\nthese restrictions:\n\n\n\n\nSource file type should be a zip file.\n\n\nSource file size should not exceed 100MB limit.\n\n\nNo credentials should be attached - the signed URLs provide access to the\n  target bucket using internal service identity; if credentials were\n  attached, the identity from the credentials would be used, but that\n  identity does not have permissions to upload files to the URL.\n\n\n\n\nWhen making a HTTP PUT request, these two headers need to be specified:\n\n\n\n\ncontent-type: application/zip\n\n\nx-goog-content-length-range: 0,104857600\n\n\n\n\nAnd this header SHOULD NOT be specified:\n\n\n\n\nAuthorization: Bearer YOUR_TOKEN\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-generate-upload-url ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\nThe project and location in which the Google Cloud Storage signed URL\n    should be generated, specified in the format \nprojects/*/locations/*\n.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nGenerateUploadUrlRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Generate Upload Url"
        }, 
        {
            "location": "/projects_locations-functions-generate-upload-url/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-generate-upload-url ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-generate-upload-url/#required-scalar-argument", 
            "text": "parent   (string)  The project and location in which the Google Cloud Storage signed URL\n    should be generated, specified in the format  projects/*/locations/* .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-generate-upload-url/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  GenerateUploadUrlRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-functions-generate-upload-url/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-functions-generate-upload-url/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-generate-upload-url/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-get/", 
            "text": "Returns a function with the given name from the requested project.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-get ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe name of the function which details should be obtained.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Get"
        }, 
        {
            "location": "/projects_locations-functions-get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-get/#required-scalar-argument", 
            "text": "name   (string)  The name of the function which details should be obtained.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-get-iam-policy/", 
            "text": "Gets the IAM access control policy for a function.\nReturns an empty policy if the function exists and does not have a policy\nset.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-get-iam-policy ...\n\n\nRequired Scalar Argument\n\n\n\n\nresource\n \n(string)\n\n\nREQUIRED: The resource for which the policy is being requested.\n    See the operation documentation for the appropriate value for this field.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Get Iam Policy"
        }, 
        {
            "location": "/projects_locations-functions-get-iam-policy/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-get-iam-policy ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-get-iam-policy/#required-scalar-argument", 
            "text": "resource   (string)  REQUIRED: The resource for which the policy is being requested.\n    See the operation documentation for the appropriate value for this field.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-get-iam-policy/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-get-iam-policy/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-list/", 
            "text": "Returns a list of functions that belong to the requested project.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\nThe project and location from which the function should be listed,\n    specified in the format \nprojects/*/locations/*\n\n    If you want to list functions in all locations, use \n-\n in place of a\n    location.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of functions to return per call.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe value returned by the last\n    \nListFunctionsResponse\n; indicates that\n    this is a continuation of a prior \nListFunctions\n call, and that the\n    system should return the next page of data.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions List"
        }, 
        {
            "location": "/projects_locations-functions-list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-list/#required-scalar-argument", 
            "text": "parent   (string)  The project and location from which the function should be listed,\n    specified in the format  projects/*/locations/* \n    If you want to list functions in all locations, use  -  in place of a\n    location.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-size=integer   Maximum number of functions to return per call.     -p page-token=string   The value returned by the last\n     ListFunctionsResponse ; indicates that\n    this is a continuation of a prior  ListFunctions  call, and that the\n    system should return the next page of data.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-functions-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-patch/", 
            "text": "Updates existing function.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-patch ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nA user-defined name of the function. Function names must be unique\n    globally and match pattern \nprojects/*/locations/*/functions/*\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCloudFunction:\n  available-memory-mb: integer\n  description: string\n  entry-point: string\n  environment-variables: { string: string }\n  event-trigger:\n    event-type: string\n    resource: string\n    service: string\n  https-trigger:\n    url: string\n  labels: { string: string }\n  max-instances: integer\n  name: string\n  network: string\n  runtime: string\n  service-account-email: string\n  source-archive-url: string\n  source-repository:\n    deployed-url: string\n    url: string\n  source-upload-url: string\n  status: string\n  timeout: string\n  update-time: string\n  version-id: string\n  vpc-connector: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    available-memory-mb=60\n\n\nThe amount of memory in MB available for a function.\n    Defaults to 256MB.\n\n\n\n\n\n\ndescription=ipsum\n\n\nUser-provided description of a function.\n\n\n\n\n\n\nentry-point=lorem\n\n\nThe name of the function (as defined in source code) that will be\n    executed. Defaults to the resource name suffix, if not specified. For\n    backward compatibility, if function with given name is not found, then the\n    system will try to use function named \nfunction\n.\n    For Node.js this is name of a function exported by the module specified\n    in \nsource_location\n.\n\n\n\n\n\n\nenvironment-variables=key=et\n\n\nEnvironment variables that shall be available during function execution.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\n\n\nevent-trigger    event-type=duo\n\n\n\n\n\n\nRequired. The type of event to observe. For example:\n    \nproviders/cloud.storage/eventTypes/object.change\n and\n    \nproviders/cloud.pubsub/eventTypes/topic.publish\n.\n\n\nEvent types match pattern \nproviders/*/eventTypes/*.*\n.\nThe pattern contains:\n\n\n\n\nnamespace: For example, \ncloud.storage\n and\n   \ngoogle.firebase.analytics\n.\n\n\nresource type: The type of resource on which event occurs. For\n   example, the Google Cloud Storage API includes the type \nobject\n.\n\n\naction: The action that generates the event. For example, action for\n   a Google Cloud Storage Object is \nchange\n.\nThese parts are lower case.\n\n\nresource=aliquyam\n\n\nRequired. The resource(s) from which to observe events, for example,\n\nprojects/_/buckets/myBucket\n.\n\n\n\n\n\n\n\n\nNot all syntactically correct values are accepted by all services. For\nexample:\n\n\n\n\nThe authorization model must support it. Google Cloud Functions\n   only allows EventTriggers to be deployed that observe resources in the\n   same project as the \nCloudFunction\n.\n\n\nThe resource type must match the pattern expected for an\n   \nevent_type\n. For example, an \nEventTrigger\n that has an\n   \nevent_type\n of \ngoogle.pubsub.topic.publish\n should have a resource\n   that matches Google Cloud Pub/Sub topics.\n\n\n\n\nAdditionally, some services may support short names when creating an\n\nEventTrigger\n. These will always be returned in the normalized \nlong\n\nformat.\n\n\nSee each \nservice\ns\n documentation for supported formats.\n* \nservice=sea\n\n    - The hostname of the service that should be observed.\n\n\nIf no string is provided, the default service implementing the API will\nbe used. For example, \nstorage.googleapis.com\n is the default for all\nevent types in the \ngoogle.storage\n namespace.\n\n\n\n\n\n\n\n\n\n\n..https-trigger    url=lorem\n\n\n\n\nOutput only. The deployed url for the function.\n\n\n\n\n\n\n\n\n..    labels=key=eos\n\n\n\n\nLabels associated with this Cloud Function.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\nmax-instances=20\n\n\nThe limit on the maximum number of function instances that may coexist at a\n    given time.\n\n\n\n\n\n\nname=sadipscing\n\n\nA user-defined name of the function. Function names must be unique\n    globally and match pattern \nprojects/*/locations/*/functions/*\n\n\n\n\n\n\n\n\nnetwork=dolor\n\n\n\n\n\n\nThe VPC Network that this cloud function can connect to. It can be\n    either the fully-qualified URI, or the short name of the network resource.\n    If the short network name is used, the network must belong to the same\n    project. Otherwise, it must belong to a project within the same\n    organization. The format of this field is either\n    \nprojects/{project}/global/networks/{network}\n or \n{network}\n, where\n    {project} is a project id where the network is defined, and {network} is\n    the short name of the network.\n\n\nThis field is mutually exclusive with \nvpc_connector\n and will be replaced\nby it.\n\n\nSee \nthe VPC documentation\n for\nmore information on connecting Cloud projects.\n\n\nThis feature is currently in alpha, available only for whitelisted users.\n* \nruntime=eirmod\n\n    - Required. The runtime in which the function is going to run. Choices:\n\n\n\n\nnodejs6\n: Node.js 6\n\n\nnodejs8\n: Node.js 8\n\n\nnodejs10\n: Node.js 10\n\n\npython37\n: Python 3.7\n\n\ngo111\n: Go 1.11\n\n\nservice-account-email=elitr\n\n\nThe email of the function\ns service account. If empty, defaults to\n{project_id}@appspot.gserviceaccount.com.\n\n\n\n\n\n\nsource-archive-url=amet\n\n\nThe Google Cloud Storage URL, starting with gs://, pointing to the zip\narchive which contains the function.\n\n\n\n\n\n\nsource-repository    deployed-url=no\n\n\nOutput only. The URL pointing to the hosted repository where the function\nwere defined at the time of deployment. It always points to a specific\ncommit in the format described above.\n\n\n\n\n\n\nurl=labore\n\n\nThe URL pointing to the hosted repository where the function is defined.\nThere are supported Cloud Source Repository URLs in the following\nformats:\n\n\n\n\n\n\n\n\nTo refer to a specific commit:\n\nhttps://source.developers.google.com/projects/*/repos/*/revisions/*/paths/*\n\nTo refer to a moveable alias (branch):\n\nhttps://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/*\n\nIn particular, to refer to HEAD use \nmaster\n moveable alias.\nTo refer to a specific fixed alias (tag):\n\nhttps://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*\n\n\nYou may omit \npaths/*\n if you want to use the main directory.\n\n\n\n\n\n\n\n\n\n\n..    source-upload-url=eirmod\n\n\n\n\nThe Google Cloud Storage signed URL used for source uploading, generated\n    by google.cloud.functions.v1.GenerateUploadUrl\n\n\n\n\n\n\nstatus=dolore\n\n\nOutput only. Status of the function deployment.\n\n\n\n\n\n\ntimeout=invidunt\n\n\nThe function execution timeout. Execution is considered failed and\n    can be terminated if the function is not completed at the end of the\n    timeout period. Defaults to 60 seconds.\n\n\n\n\n\n\nupdate-time=aliquyam\n\n\nOutput only. The last update timestamp of a Cloud Function.\n\n\n\n\n\n\nversion-id=accusam\n\n\nOutput only.\n    The version identifier of the Cloud Function. Each deployment attempt\n    results in a new version of a function being created.\n\n\n\n\n\n\nvpc-connector=lorem\n\n\n\n\nThe VPC Network Connector that this cloud function can connect to. It can\n    be either the fully-qualified URI, or the short name of the network\n    connector resource. The format of this field is\n    \nprojects/*/locations/*/connectors/*\n\n\nThis field is mutually exclusive with \nnetwork\n field and will eventually\nreplace it.\n\n\nSee \nthe VPC documentation\n for\nmore information on connecting Cloud projects.\n\n\nThis feature is currently in alpha, available only for whitelisted users.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p update-mask=string\n\n\nRequired list of fields to be updated in this request.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Patch"
        }, 
        {
            "location": "/projects_locations-functions-patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-patch/#required-scalar-argument", 
            "text": "name   (string)  A user-defined name of the function. Function names must be unique\n    globally and match pattern  projects/*/locations/*/functions/*", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CloudFunction:\n  available-memory-mb: integer\n  description: string\n  entry-point: string\n  environment-variables: { string: string }\n  event-trigger:\n    event-type: string\n    resource: string\n    service: string\n  https-trigger:\n    url: string\n  labels: { string: string }\n  max-instances: integer\n  name: string\n  network: string\n  runtime: string\n  service-account-email: string\n  source-archive-url: string\n  source-repository:\n    deployed-url: string\n    url: string\n  source-upload-url: string\n  status: string\n  timeout: string\n  update-time: string\n  version-id: string\n  vpc-connector: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    available-memory-mb=60  The amount of memory in MB available for a function.\n    Defaults to 256MB.    description=ipsum  User-provided description of a function.    entry-point=lorem  The name of the function (as defined in source code) that will be\n    executed. Defaults to the resource name suffix, if not specified. For\n    backward compatibility, if function with given name is not found, then the\n    system will try to use function named  function .\n    For Node.js this is name of a function exported by the module specified\n    in  source_location .    environment-variables=key=et  Environment variables that shall be available during function execution.  the value will be associated with the given  key     event-trigger    event-type=duo    Required. The type of event to observe. For example:\n     providers/cloud.storage/eventTypes/object.change  and\n     providers/cloud.pubsub/eventTypes/topic.publish .  Event types match pattern  providers/*/eventTypes/*.* .\nThe pattern contains:   namespace: For example,  cloud.storage  and\n    google.firebase.analytics .  resource type: The type of resource on which event occurs. For\n   example, the Google Cloud Storage API includes the type  object .  action: The action that generates the event. For example, action for\n   a Google Cloud Storage Object is  change .\nThese parts are lower case.  resource=aliquyam  Required. The resource(s) from which to observe events, for example, projects/_/buckets/myBucket .     Not all syntactically correct values are accepted by all services. For\nexample:   The authorization model must support it. Google Cloud Functions\n   only allows EventTriggers to be deployed that observe resources in the\n   same project as the  CloudFunction .  The resource type must match the pattern expected for an\n    event_type . For example, an  EventTrigger  that has an\n    event_type  of  google.pubsub.topic.publish  should have a resource\n   that matches Google Cloud Pub/Sub topics.   Additionally, some services may support short names when creating an EventTrigger . These will always be returned in the normalized  long \nformat.  See each  service s  documentation for supported formats.\n*  service=sea \n    - The hostname of the service that should be observed.  If no string is provided, the default service implementing the API will\nbe used. For example,  storage.googleapis.com  is the default for all\nevent types in the  google.storage  namespace.      ..https-trigger    url=lorem   Output only. The deployed url for the function.     ..    labels=key=eos   Labels associated with this Cloud Function.  the value will be associated with the given  key    max-instances=20  The limit on the maximum number of function instances that may coexist at a\n    given time.    name=sadipscing  A user-defined name of the function. Function names must be unique\n    globally and match pattern  projects/*/locations/*/functions/*     network=dolor    The VPC Network that this cloud function can connect to. It can be\n    either the fully-qualified URI, or the short name of the network resource.\n    If the short network name is used, the network must belong to the same\n    project. Otherwise, it must belong to a project within the same\n    organization. The format of this field is either\n     projects/{project}/global/networks/{network}  or  {network} , where\n    {project} is a project id where the network is defined, and {network} is\n    the short name of the network.  This field is mutually exclusive with  vpc_connector  and will be replaced\nby it.  See  the VPC documentation  for\nmore information on connecting Cloud projects.  This feature is currently in alpha, available only for whitelisted users.\n*  runtime=eirmod \n    - Required. The runtime in which the function is going to run. Choices:   nodejs6 : Node.js 6  nodejs8 : Node.js 8  nodejs10 : Node.js 10  python37 : Python 3.7  go111 : Go 1.11  service-account-email=elitr  The email of the function s service account. If empty, defaults to\n{project_id}@appspot.gserviceaccount.com.    source-archive-url=amet  The Google Cloud Storage URL, starting with gs://, pointing to the zip\narchive which contains the function.    source-repository    deployed-url=no  Output only. The URL pointing to the hosted repository where the function\nwere defined at the time of deployment. It always points to a specific\ncommit in the format described above.    url=labore  The URL pointing to the hosted repository where the function is defined.\nThere are supported Cloud Source Repository URLs in the following\nformats:     To refer to a specific commit: https://source.developers.google.com/projects/*/repos/*/revisions/*/paths/* \nTo refer to a moveable alias (branch): https://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/* \nIn particular, to refer to HEAD use  master  moveable alias.\nTo refer to a specific fixed alias (tag): https://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*  You may omit  paths/*  if you want to use the main directory.      ..    source-upload-url=eirmod   The Google Cloud Storage signed URL used for source uploading, generated\n    by google.cloud.functions.v1.GenerateUploadUrl    status=dolore  Output only. Status of the function deployment.    timeout=invidunt  The function execution timeout. Execution is considered failed and\n    can be terminated if the function is not completed at the end of the\n    timeout period. Defaults to 60 seconds.    update-time=aliquyam  Output only. The last update timestamp of a Cloud Function.    version-id=accusam  Output only.\n    The version identifier of the Cloud Function. Each deployment attempt\n    results in a new version of a function being created.    vpc-connector=lorem   The VPC Network Connector that this cloud function can connect to. It can\n    be either the fully-qualified URI, or the short name of the network\n    connector resource. The format of this field is\n     projects/*/locations/*/connectors/*  This field is mutually exclusive with  network  field and will eventually\nreplace it.  See  the VPC documentation  for\nmore information on connecting Cloud projects.  This feature is currently in alpha, available only for whitelisted users.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-functions-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-functions-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-patch/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p update-mask=string  Required list of fields to be updated in this request.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-functions-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-set-iam-policy/", 
            "text": "Sets the IAM access control policy on the specified function.\nReplaces any existing policy.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-set-iam-policy ...\n\n\nRequired Scalar Argument\n\n\n\n\nresource\n \n(string)\n\n\nREQUIRED: The resource for which the policy is being specified.\n    See the operation documentation for the appropriate value for this field.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSetIamPolicyRequest:\n  policy:\n    etag: string\n    version: integer\n  update-mask: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .policy    etag=sea\n\n\n\n\n\n\netag\n is used for optimistic concurrency control as a way to help\n    prevent simultaneous updates of a policy from overwriting each other.\n    It is strongly suggested that systems make use of the \netag\n in the\n    read-modify-write cycle to perform policy updates in order to avoid race\n    conditions: An \netag\n is returned in the response to \ngetIamPolicy\n, and\n    systems are expected to put that etag in the request to \nsetIamPolicy\n to\n    ensure that their change will be applied to the same version of the policy.\n\n\nIf no \netag\n is provided in the call to \nsetIamPolicy\n, then the existing\npolicy is overwritten blindly.\n* \nversion=80\n\n    - Deprecated.\n\n\n\n\n\n\n\n\n\n\n..    update-mask=duo\n\n\n\n\nOPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\n    the fields in the mask will be modified. If no mask is provided, the\n    following default mask is used:\n    paths: \nbindings, etag\n\n    This field is only used by Cloud IAM.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Set Iam Policy"
        }, 
        {
            "location": "/projects_locations-functions-set-iam-policy/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-set-iam-policy ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-set-iam-policy/#required-scalar-argument", 
            "text": "resource   (string)  REQUIRED: The resource for which the policy is being specified.\n    See the operation documentation for the appropriate value for this field.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-set-iam-policy/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SetIamPolicyRequest:\n  policy:\n    etag: string\n    version: integer\n  update-mask: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .policy    etag=sea    etag  is used for optimistic concurrency control as a way to help\n    prevent simultaneous updates of a policy from overwriting each other.\n    It is strongly suggested that systems make use of the  etag  in the\n    read-modify-write cycle to perform policy updates in order to avoid race\n    conditions: An  etag  is returned in the response to  getIamPolicy , and\n    systems are expected to put that etag in the request to  setIamPolicy  to\n    ensure that their change will be applied to the same version of the policy.  If no  etag  is provided in the call to  setIamPolicy , then the existing\npolicy is overwritten blindly.\n*  version=80 \n    - Deprecated.      ..    update-mask=duo   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\n    the fields in the mask will be modified. If no mask is provided, the\n    following default mask is used:\n    paths:  bindings, etag \n    This field is only used by Cloud IAM.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-functions-set-iam-policy/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-functions-set-iam-policy/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-set-iam-policy/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-functions-test-iam-permissions/", 
            "text": "Tests the specified permissions against the IAM access control policy\nfor a function.\nIf the function does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-functions-test-iam-permissions ...\n\n\nRequired Scalar Argument\n\n\n\n\nresource\n \n(string)\n\n\nREQUIRED: The resource for which the policy detail is being requested.\n    See the operation documentation for the appropriate value for this field.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTestIamPermissionsRequest:\n  permissions: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    permissions=et\n\n\nThe set of permissions to check for the \nresource\n. Permissions with\n    wildcards (such as \n or \nstorage.\n) are not allowed. For more\n    information see\n    \nIAM Overview\n.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Functions Test Iam Permissions"
        }, 
        {
            "location": "/projects_locations-functions-test-iam-permissions/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-functions-test-iam-permissions ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-functions-test-iam-permissions/#required-scalar-argument", 
            "text": "resource   (string)  REQUIRED: The resource for which the policy detail is being requested.\n    See the operation documentation for the appropriate value for this field.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-functions-test-iam-permissions/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  TestIamPermissionsRequest:\n  permissions: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    permissions=et  The set of permissions to check for the  resource . Permissions with\n    wildcards (such as   or  storage. ) are not allowed. For more\n    information see\n     IAM Overview .  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-functions-test-iam-permissions/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-functions-test-iam-permissions/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-functions-test-iam-permissions/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-list/", 
            "text": "Lists information about the supported locations for this service.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudfunctions1 --scope \nscope\n projects locations-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe resource that owns the locations collection, if applicable.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p filter=string\n\n\n\n\nThe standard list filter.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe standard list page token.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nThe standard list page size.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations List"
        }, 
        {
            "location": "/projects_locations-list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudfunctions1 --scope  scope  projects locations-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-list/#required-scalar-argument", 
            "text": "name   (string)  The resource that owns the locations collection, if applicable.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p filter=string   The standard list filter.     -p page-token=string   The standard list page token.     -p page-size=integer   The standard list page size.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}