initSidebarItems({"enum":[["Error",""]],"fn":[["remove_json_null_values",""]],"struct":[["CertificationExamStatus","Status for a Google Partners certification exam."],["CertificationStatus","Google Partners certification status."],["ClientMessageLogCall","Logs a generic message from the client, such as `Failed to render component`, `Profile page is running slow`, `More than 500 users have accessed this result.`, etc."],["ClientMessageMethods","A builder providing access to all methods supported on *clientMessage* resources. It is not used directly, but through the `Partners` hub."],["Company","A company resource in the Google Partners API. Once certified, it qualifies for being searched by advertisers."],["CompanyGetCall","Gets a company."],["CompanyLeadCreateCall","Creates an advertiser lead for the given company ID."],["CompanyListCall","Lists companies."],["CompanyMethods","A builder providing access to all methods supported on *company* resources. It is not used directly, but through the `Partners` hub."],["CreateLeadRequest","Request message for CreateLead."],["CreateLeadResponse","Response message for CreateLead. Debug information about this request."],["DebugInfo","Debug information about this request."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["EventData","Key value data pair for an event."],["GetCompanyResponse","Response message for GetCompany."],["LatLng","An object representing a latitude/longitude pair. This is expressed as a pair of doubles representing degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges. Example of normalization code in Python: def NormalizeLongitude(longitude): \"\"\"Wrapsdecimal degrees longitude to [-180.0, 180.0].\"\"\" q, r = divmod(longitude, 360.0) if r > 180.0 or (r == 180.0 and q <= -1.0): return r - 360.0 return r def NormalizeLatLng(latitude, longitude): \"\"\"Wraps decimal degrees latitude and longitude to [-180.0, 180.0] and [-90.0, 90.0], respectively.\"\"\" r = latitude % 360.0 if r = 270.0: return r - 360, NormalizeLongitude(longitude) else: return 180 - r, NormalizeLongitude(longitude + 180.0) assert 180.0 == NormalizeLongitude(180.0) assert -180.0 == NormalizeLongitude(-180.0) assert -179.0 == NormalizeLongitude(181.0) assert (0.0, 0.0) == NormalizeLatLng(360.0, 0.0) assert (0.0, 0.0) == NormalizeLatLng(-360.0, 0.0) assert (85.0, 180.0) == NormalizeLatLng(95.0, 0.0) assert (-85.0, -170.0) == NormalizeLatLng(-95.0, 10.0) assert (90.0, 10.0) == NormalizeLatLng(90.0, 10.0) assert (-90.0, -10.0) == NormalizeLatLng(-90.0, -10.0) assert (0.0, -170.0) == NormalizeLatLng(-180.0, 10.0) assert (0.0, -170.0) == NormalizeLatLng(180.0, 10.0) assert (-90.0, 10.0) == NormalizeLatLng(270.0, 10.0) assert (90.0, 10.0) == NormalizeLatLng(-270.0, 10.0)"],["Lead","A lead resource that represents an advertiser contact for a `Company`. These are usually generated via Google Partner Search (the advertiser portal)."],["ListCompaniesResponse","Response message for ListCompanies."],["ListUserStatesResponse","Response message for ListUserStates."],["LocalizedCompanyInfo","The localized company information."],["Location","A location with address and geographic coordinates."],["LogMessageRequest","Request message for LogClientMessage."],["LogMessageResponse","Response message for LogClientMessage."],["LogUserEventRequest","Request message for LogUserEvent."],["LogUserEventResponse","Response message for LogUserEvent."],["MethodInfo","Contains information about an API request."],["Money","Represents an amount of money with its currency type."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Partners","Central instance to access all Partners related resource activities"],["PublicProfile","Basic information from a public profile."],["Rank","Information related to ranking of results."],["RecaptchaChallenge","reCaptcha challenge info."],["RequestMetadata","Common data that is in each API request."],["ResponseMetadata","Common data that is in each API response."],["TrafficSource","Source of traffic for the current request."],["UserEventLogCall","Logs a user event."],["UserEventMethods","A builder providing access to all methods supported on *userEvent* resources. It is not used directly, but through the `Partners` hub."],["UserOverrides","Values to use instead of the user's respective defaults. These are only honored by whitelisted products."],["UserStateListCall","Lists states for current user."],["UserStateMethods","A builder providing access to all methods supported on *userState* resources. It is not used directly, but through the `Partners` hub."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});