{
    "docs": [
        {
            "location": "/", 
            "text": "The \nfitness1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle fitness\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nfitness\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-fitness1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nfitness\n API at revision \n20170922\n. The CLI is at version \n1.0.7\n.\n\n\nfitness1 [options]\n        users\n                data-sources-create \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                data-sources-data-point-changes-list \nuser-id\n \ndata-source-id\n [-p \nv\n]... [-o \nout\n]\n                data-sources-datasets-delete \nuser-id\n \ndata-source-id\n \ndataset-id\n [-p \nv\n]...\n                data-sources-datasets-get \nuser-id\n \ndata-source-id\n \ndataset-id\n [-p \nv\n]... [-o \nout\n]\n                data-sources-datasets-patch \nuser-id\n \ndata-source-id\n \ndataset-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                data-sources-delete \nuser-id\n \ndata-source-id\n [-p \nv\n]... [-o \nout\n]\n                data-sources-get \nuser-id\n \ndata-source-id\n [-p \nv\n]... [-o \nout\n]\n                data-sources-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                data-sources-patch \nuser-id\n \ndata-source-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                data-sources-update \nuser-id\n \ndata-source-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                dataset-aggregate \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                sessions-delete \nuser-id\n \nsession-id\n [-p \nv\n]...\n                sessions-list \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                sessions-update \nuser-id\n \nsession-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  fitness1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nfitness1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/fitness1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/fitness1-secret.json\n, assuming that the required \nfitness\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nfitness1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-fitness1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  fitness  API at revision  20170922 . The CLI is at version  1.0.7 .  fitness1 [options]\n        users\n                data-sources-create  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                data-sources-data-point-changes-list  user-id   data-source-id  [-p  v ]... [-o  out ]\n                data-sources-datasets-delete  user-id   data-source-id   dataset-id  [-p  v ]...\n                data-sources-datasets-get  user-id   data-source-id   dataset-id  [-p  v ]... [-o  out ]\n                data-sources-datasets-patch  user-id   data-source-id   dataset-id  (-r  kv )... [-p  v ]... [-o  out ]\n                data-sources-delete  user-id   data-source-id  [-p  v ]... [-o  out ]\n                data-sources-get  user-id   data-source-id  [-p  v ]... [-o  out ]\n                data-sources-list  user-id  [-p  v ]... [-o  out ]\n                data-sources-patch  user-id   data-source-id  (-r  kv )... [-p  v ]... [-o  out ]\n                data-sources-update  user-id   data-source-id  (-r  kv )... [-p  v ]... [-o  out ]\n                dataset-aggregate  user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                sessions-delete  user-id   session-id  [-p  v ]...\n                sessions-list  user-id  [-p  v ]... [-o  out ]\n                sessions-update  user-id   session-id  (-r  kv )... [-p  v ]... [-o  out ]\n  fitness1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  fitness1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/fitness1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/fitness1-secret.json , assuming that the required  fitness  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  fitness1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/users_data-sources-create/", 
            "text": "Creates a new data source that is unique across all data sources belonging to this user. The data stream ID field can be omitted and will be generated by the server with the correct format. The data stream ID is an ordered combination of some fields from the data source. In addition to the data source fields reflected into the data source ID, the developer project number that is authenticated when creating the data source is included. This developer project number is obfuscated when read by any other developer reading public data types.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nCreate the data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDataSource:\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  data-quality-standard: [string]\n  data-stream-id: string\n  data-stream-name: string\n  data-type:\n    name: string\n  device:\n    manufacturer: string\n    model: string\n    type: string\n    uid: string\n    version: string\n  name: string\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .application    details-url=eirmod\n\n\nAn optional URI that can be used to link back to the application.\n\n\n\n\n\n\nname=sit\n\n\nThe name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.\n\n\n\n\n\n\npackage-name=stet\n\n\nPackage name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.\n\n\n\n\n\n\n\n\nversion=sed\n\n\n\n\nVersion of the application. You should update this field whenever the application changes in a way that affects the computation of the data.\n\n\n\n\n\n\n\n\n..    data-quality-standard=et\n\n\n\n\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\ndata-stream-id=dolores\n\n\n\n\n\n\nA unique identifier for the data stream produced by this data source. The identifier includes:\n\n\n\n\nThe physical device\ns manufacturer, model, and serial number (UID). \n\n\nThe application\ns package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. \n\n\nThe data source\ns type. \n\n\nThe data source\ns stream name.  Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn\nt used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they\nre not equal.\n\n\n\n\nThe exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName \n\n\nThe exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName \n\n\nWhen any of the optional fields that comprise of the data stream ID are blank, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number\n\n\nFinally, the developer project number is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form.\n\n \ndata-stream-name=kasd\n\n    - The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.\n\n \ndata-type    name=accusam\n\n    - Each data type has a unique, namespaced, name. All data types in the com.google namespace are shared as part of the platform.\n\n\n\n\n\n\n\n\n\n\n..device    manufacturer=takimata\n\n\n\n\nManufacturer of the product/hardware.\n\n\n\n\n\n\nmodel=justo\n\n\nEnd-user visible model name for the device.\n\n\n\n\n\n\ntype=amet.\n\n\nA constant representing the type of the device.\n\n\n\n\n\n\nuid=erat\n\n\nThe serial number or other unique ID for the hardware. This field is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the uid field in clear and normal form.\n\n\n\n\n\n\n\n\nversion=labore\n\n\n\n\nVersion string for the device hardware/software.\n\n\n\n\n\n\n\n\n..    name=sea\n\n\n\n\nAn end-user visible name for this data source.\n\n\n\n\n\n\ntype=nonumy\n\n\nA constant describing the type of this data source. Indicates whether this data source produces raw or derived data.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Create"
        }, 
        {
            "location": "/users_data-sources-create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-create/#required-scalar-argument", 
            "text": "user-id   (string)  Create the data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_data-sources-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  DataSource:\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  data-quality-standard: [string]\n  data-stream-id: string\n  data-stream-name: string\n  data-type:\n    name: string\n  device:\n    manufacturer: string\n    model: string\n    type: string\n    uid: string\n    version: string\n  name: string\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .application    details-url=eirmod  An optional URI that can be used to link back to the application.    name=sit  The name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.    package-name=stet  Package name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.     version=sed   Version of the application. You should update this field whenever the application changes in a way that affects the computation of the data.     ..    data-quality-standard=et    Each invocation of this argument appends the given value to the array.     data-stream-id=dolores    A unique identifier for the data stream produced by this data source. The identifier includes:   The physical device s manufacturer, model, and serial number (UID).   The application s package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client.   The data source s type.   The data source s stream name.  Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn t used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they re not equal.   The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName   The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName   When any of the optional fields that comprise of the data stream ID are blank, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number  Finally, the developer project number is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form.   data-stream-name=kasd \n    - The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.   data-type    name=accusam \n    - Each data type has a unique, namespaced, name. All data types in the com.google namespace are shared as part of the platform.      ..device    manufacturer=takimata   Manufacturer of the product/hardware.    model=justo  End-user visible model name for the device.    type=amet.  A constant representing the type of the device.    uid=erat  The serial number or other unique ID for the hardware. This field is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the uid field in clear and normal form.     version=labore   Version string for the device hardware/software.     ..    name=sea   An end-user visible name for this data source.    type=nonumy  A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_data-sources-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_data-sources-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-data-point-changes-list/", 
            "text": "Queries for user\ns data point changes for a particular data source.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.read\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.read\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.read\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.read\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.read\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.read\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.read\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.read\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-data-point-changes-list ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nList data points for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source that created the dataset.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p limit=integer\n\n\n\n\nIf specified, no more than this many data point changes will be included in the response.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of nextPageToken from the previous response.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Data Point Changes List"
        }, 
        {
            "location": "/users_data-sources-data-point-changes-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.read  https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.read  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.read  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.read  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.read  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.read  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.read  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.read  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.read  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.read .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-data-point-changes-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-data-point-changes-list/#required-scalar-arguments", 
            "text": "user-id   (string)  List data points for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source that created the dataset.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-data-point-changes-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-data-point-changes-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p limit=integer   If specified, no more than this many data point changes will be included in the response.     -p page-token=string   The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of nextPageToken from the previous response.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_data-sources-data-point-changes-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-datasets-delete/", 
            "text": "Performs an inclusive delete of all data points whose start and end times have any overlap with the time range specified by the dataset ID. For most data types, the entire data point will be deleted. For data types where the time span represents a consistent value (such as com.google.activity.segment), and a data point straddles either end point of the dataset, only the overlapping portion of the data point will be deleted.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-datasets-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nDelete a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source that created the dataset.\n\n\n\n\n\n\ndataset-id\n \n(string)\n\n\nDataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like: \nstartTime-endTime\n where startTime and endTime are 64 bit integers.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p modified-time-millis=string\n\n\n\n\nWhen the operation was performed on the client.\n\n\n\n\n\n\n\n\n-p current-time-millis=string\n\n\n\n\nThe client\ns current time in milliseconds since epoch.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Datasets Delete"
        }, 
        {
            "location": "/users_data-sources-datasets-delete/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-datasets-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-datasets-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  Delete a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source that created the dataset.    dataset-id   (string)  Dataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like:  startTime-endTime  where startTime and endTime are 64 bit integers.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-datasets-delete/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p modified-time-millis=string   When the operation was performed on the client.     -p current-time-millis=string   The client s current time in milliseconds since epoch.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_data-sources-datasets-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-datasets-get/", 
            "text": "Returns a dataset containing all data points whose start and end times overlap with the specified range of the dataset minimum start time and maximum end time. Specifically, any data point whose start time is less than or equal to the dataset end time and whose end time is greater than or equal to the dataset start time.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.read\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.read\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.read\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.read\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.read\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.read\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.read\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.read\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-datasets-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nRetrieve a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source that created the dataset.\n\n\n\n\n\n\ndataset-id\n \n(string)\n\n\nDataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like: \nstartTime-endTime\n where startTime and endTime are 64 bit integers.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p limit=integer\n\n\n\n\nIf specified, no more than this many data points will be included in the dataset. If there are more data points in the dataset, nextPageToken will be set in the dataset response.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe continuation token, which is used to page through large datasets. To get the next page of a dataset, set this parameter to the value of nextPageToken from the previous response. Each subsequent call will yield a partial dataset with data point end timestamps that are strictly smaller than those in the previous partial response.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Datasets Get"
        }, 
        {
            "location": "/users_data-sources-datasets-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.read  https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.read  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.read  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.read  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.read  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.read  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.read  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.read  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.read  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.read .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-datasets-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-datasets-get/#required-scalar-arguments", 
            "text": "user-id   (string)  Retrieve a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source that created the dataset.    dataset-id   (string)  Dataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like:  startTime-endTime  where startTime and endTime are 64 bit integers.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-datasets-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-datasets-get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p limit=integer   If specified, no more than this many data points will be included in the dataset. If there are more data points in the dataset, nextPageToken will be set in the dataset response.     -p page-token=string   The continuation token, which is used to page through large datasets. To get the next page of a dataset, set this parameter to the value of nextPageToken from the previous response. Each subsequent call will yield a partial dataset with data point end timestamps that are strictly smaller than those in the previous partial response.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_data-sources-datasets-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/", 
            "text": "Adds data points to a dataset. The dataset need not be previously created. All points within the given dataset will be returned with subsquent calls to retrieve this dataset. Data points can belong to more than one dataset. This method does not use patch semantics.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-datasets-patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nPatch a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source that created the dataset.\n\n\n\n\n\n\ndataset-id\n \n(string)\n\n\nDataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like: \nstartTime-endTime\n where startTime and endTime are 64 bit integers.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDataset:\n  data-source-id: string\n  max-end-time-ns: string\n  min-start-time-ns: string\n  next-page-token: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    data-source-id=dolores\n\n\nThe data stream ID of the data source that created the points in this dataset.\n\n\n\n\n\n\nmax-end-time-ns=gubergren\n\n\nThe largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.\n\n\n\n\n\n\nmin-start-time-ns=sadipscing\n\n\nThe smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.\n\n\n\n\n\n\nnext-page-token=aliquyam\n\n\nThis token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p current-time-millis=string\n\n\nThe client\ns current time in milliseconds since epoch. Note that the minStartTimeNs and maxEndTimeNs properties in the request body are in nanoseconds instead of milliseconds.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Datasets Patch"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-datasets-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/#required-scalar-arguments", 
            "text": "user-id   (string)  Patch a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source that created the dataset.    dataset-id   (string)  Dataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like:  startTime-endTime  where startTime and endTime are 64 bit integers.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Dataset:\n  data-source-id: string\n  max-end-time-ns: string\n  min-start-time-ns: string\n  next-page-token: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    data-source-id=dolores  The data stream ID of the data source that created the points in this dataset.    max-end-time-ns=gubergren  The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.    min-start-time-ns=sadipscing  The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.    next-page-token=aliquyam  This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p current-time-millis=string  The client s current time in milliseconds since epoch. Note that the minStartTimeNs and maxEndTimeNs properties in the request body are in nanoseconds instead of milliseconds.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_data-sources-datasets-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-delete/", 
            "text": "Deletes the specified data source. The request will fail if the data source contains any data points.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nRetrieve a data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source to delete.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Delete"
        }, 
        {
            "location": "/users_data-sources-delete/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  Retrieve a data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source to delete.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-get/", 
            "text": "Returns the specified data source.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.read\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.read\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.read\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.read\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.read\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.read\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.read\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.read\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nRetrieve a data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Get"
        }, 
        {
            "location": "/users_data-sources-get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.read  https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.read  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.read  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.read  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.read  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.read  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.read  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.read  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.read  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.read .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-get/#required-scalar-arguments", 
            "text": "user-id   (string)  Retrieve a data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-list/", 
            "text": "Lists all data sources that are visible to the developer, using the OAuth scopes provided. The list is not exhaustive; the user may have private data sources that are only visible to other developers, or calls using other scopes.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.read\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.read\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.read\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.read\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.read\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.read\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.read\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.read\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nList data sources for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p data-type-name=string\n\n\nThe names of data types to include in the list. If not specified, all data sources will be returned.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources List"
        }, 
        {
            "location": "/users_data-sources-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.read  https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.read  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.read  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.read  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.read  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.read  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.read  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.read  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.read  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.read .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-list/#required-scalar-argument", 
            "text": "user-id   (string)  List data sources for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_data-sources-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p data-type-name=string  The names of data types to include in the list. If not specified, all data sources will be returned.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_data-sources-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-patch/", 
            "text": "Updates the specified data source. The dataStreamId, dataType, type, dataStreamName, and device properties with the exception of version, cannot be modified.\n\n\nData sources are identified by their dataStreamId. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUpdate the data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDataSource:\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  data-quality-standard: [string]\n  data-stream-id: string\n  data-stream-name: string\n  data-type:\n    name: string\n  device:\n    manufacturer: string\n    model: string\n    type: string\n    uid: string\n    version: string\n  name: string\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .application    details-url=ea\n\n\nAn optional URI that can be used to link back to the application.\n\n\n\n\n\n\nname=no\n\n\nThe name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.\n\n\n\n\n\n\npackage-name=justo\n\n\nPackage name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.\n\n\n\n\n\n\n\n\nversion=justo\n\n\n\n\nVersion of the application. You should update this field whenever the application changes in a way that affects the computation of the data.\n\n\n\n\n\n\n\n\n..    data-quality-standard=et\n\n\n\n\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\ndata-stream-id=et\n\n\n\n\n\n\nA unique identifier for the data stream produced by this data source. The identifier includes:\n\n\n\n\nThe physical device\ns manufacturer, model, and serial number (UID). \n\n\nThe application\ns package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. \n\n\nThe data source\ns type. \n\n\nThe data source\ns stream name.  Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn\nt used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they\nre not equal.\n\n\n\n\nThe exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName \n\n\nThe exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName \n\n\nWhen any of the optional fields that comprise of the data stream ID are blank, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number\n\n\nFinally, the developer project number is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form.\n\n \ndata-stream-name=diam\n\n    - The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.\n\n \ndata-type    name=ipsum\n\n    - Each data type has a unique, namespaced, name. All data types in the com.google namespace are shared as part of the platform.\n\n\n\n\n\n\n\n\n\n\n..device    manufacturer=lorem\n\n\n\n\nManufacturer of the product/hardware.\n\n\n\n\n\n\nmodel=et\n\n\nEnd-user visible model name for the device.\n\n\n\n\n\n\ntype=duo\n\n\nA constant representing the type of the device.\n\n\n\n\n\n\nuid=aliquyam\n\n\nThe serial number or other unique ID for the hardware. This field is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the uid field in clear and normal form.\n\n\n\n\n\n\n\n\nversion=sea\n\n\n\n\nVersion string for the device hardware/software.\n\n\n\n\n\n\n\n\n..    name=lorem\n\n\n\n\nAn end-user visible name for this data source.\n\n\n\n\n\n\ntype=eos\n\n\nA constant describing the type of this data source. Indicates whether this data source produces raw or derived data.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Patch"
        }, 
        {
            "location": "/users_data-sources-patch/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-patch/#required-scalar-arguments", 
            "text": "user-id   (string)  Update the data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  DataSource:\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  data-quality-standard: [string]\n  data-stream-id: string\n  data-stream-name: string\n  data-type:\n    name: string\n  device:\n    manufacturer: string\n    model: string\n    type: string\n    uid: string\n    version: string\n  name: string\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .application    details-url=ea  An optional URI that can be used to link back to the application.    name=no  The name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.    package-name=justo  Package name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.     version=justo   Version of the application. You should update this field whenever the application changes in a way that affects the computation of the data.     ..    data-quality-standard=et    Each invocation of this argument appends the given value to the array.     data-stream-id=et    A unique identifier for the data stream produced by this data source. The identifier includes:   The physical device s manufacturer, model, and serial number (UID).   The application s package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client.   The data source s type.   The data source s stream name.  Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn t used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they re not equal.   The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName   The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName   When any of the optional fields that comprise of the data stream ID are blank, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number  Finally, the developer project number is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form.   data-stream-name=diam \n    - The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.   data-type    name=ipsum \n    - Each data type has a unique, namespaced, name. All data types in the com.google namespace are shared as part of the platform.      ..device    manufacturer=lorem   Manufacturer of the product/hardware.    model=et  End-user visible model name for the device.    type=duo  A constant representing the type of the device.    uid=aliquyam  The serial number or other unique ID for the hardware. This field is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the uid field in clear and normal form.     version=sea   Version string for the device hardware/software.     ..    name=lorem   An end-user visible name for this data source.    type=eos  A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_data-sources-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_data-sources-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_data-sources-update/", 
            "text": "Updates the specified data source. The dataStreamId, dataType, type, dataStreamName, and device properties with the exception of version, cannot be modified.\n\n\nData sources are identified by their dataStreamId.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users data-sources-update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nUpdate the data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\ndata-source-id\n \n(string)\n\n\nThe data stream ID of the data source to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDataSource:\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  data-quality-standard: [string]\n  data-stream-id: string\n  data-stream-name: string\n  data-type:\n    name: string\n  device:\n    manufacturer: string\n    model: string\n    type: string\n    uid: string\n    version: string\n  name: string\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .application    details-url=erat\n\n\nAn optional URI that can be used to link back to the application.\n\n\n\n\n\n\nname=sadipscing\n\n\nThe name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.\n\n\n\n\n\n\npackage-name=dolor\n\n\nPackage name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.\n\n\n\n\n\n\n\n\nversion=eirmod\n\n\n\n\nVersion of the application. You should update this field whenever the application changes in a way that affects the computation of the data.\n\n\n\n\n\n\n\n\n..    data-quality-standard=elitr\n\n\n\n\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\ndata-stream-id=amet\n\n\n\n\n\n\nA unique identifier for the data stream produced by this data source. The identifier includes:\n\n\n\n\nThe physical device\ns manufacturer, model, and serial number (UID). \n\n\nThe application\ns package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. \n\n\nThe data source\ns type. \n\n\nThe data source\ns stream name.  Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn\nt used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they\nre not equal.\n\n\n\n\nThe exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName \n\n\nThe exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName \n\n\nWhen any of the optional fields that comprise of the data stream ID are blank, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number\n\n\nFinally, the developer project number is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form.\n\n \ndata-stream-name=no\n\n    - The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.\n\n \ndata-type    name=labore\n\n    - Each data type has a unique, namespaced, name. All data types in the com.google namespace are shared as part of the platform.\n\n\n\n\n\n\n\n\n\n\n..device    manufacturer=eirmod\n\n\n\n\nManufacturer of the product/hardware.\n\n\n\n\n\n\nmodel=dolore\n\n\nEnd-user visible model name for the device.\n\n\n\n\n\n\ntype=invidunt\n\n\nA constant representing the type of the device.\n\n\n\n\n\n\nuid=aliquyam\n\n\nThe serial number or other unique ID for the hardware. This field is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the uid field in clear and normal form.\n\n\n\n\n\n\n\n\nversion=accusam\n\n\n\n\nVersion string for the device hardware/software.\n\n\n\n\n\n\n\n\n..    name=lorem\n\n\n\n\nAn end-user visible name for this data source.\n\n\n\n\n\n\ntype=sea\n\n\nA constant describing the type of this data source. Indicates whether this data source produces raw or derived data.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Data Sources Update"
        }, 
        {
            "location": "/users_data-sources-update/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users data-sources-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_data-sources-update/#required-scalar-arguments", 
            "text": "user-id   (string)  Update the data source for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    data-source-id   (string)  The data stream ID of the data source to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_data-sources-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  DataSource:\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  data-quality-standard: [string]\n  data-stream-id: string\n  data-stream-name: string\n  data-type:\n    name: string\n  device:\n    manufacturer: string\n    model: string\n    type: string\n    uid: string\n    version: string\n  name: string\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .application    details-url=erat  An optional URI that can be used to link back to the application.    name=sadipscing  The name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.    package-name=dolor  Package name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.     version=eirmod   Version of the application. You should update this field whenever the application changes in a way that affects the computation of the data.     ..    data-quality-standard=elitr    Each invocation of this argument appends the given value to the array.     data-stream-id=amet    A unique identifier for the data stream produced by this data source. The identifier includes:   The physical device s manufacturer, model, and serial number (UID).   The application s package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client.   The data source s type.   The data source s stream name.  Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn t used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they re not equal.   The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName   The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName   When any of the optional fields that comprise of the data stream ID are blank, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number  Finally, the developer project number is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form.   data-stream-name=no \n    - The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.   data-type    name=labore \n    - Each data type has a unique, namespaced, name. All data types in the com.google namespace are shared as part of the platform.      ..device    manufacturer=eirmod   Manufacturer of the product/hardware.    model=dolore  End-user visible model name for the device.    type=invidunt  A constant representing the type of the device.    uid=aliquyam  The serial number or other unique ID for the hardware. This field is obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the uid field in clear and normal form.     version=accusam   Version string for the device hardware/software.     ..    name=lorem   An end-user visible name for this data source.    type=sea  A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_data-sources-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_data-sources-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_data-sources-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_dataset-aggregate/", 
            "text": "Aggregates data of a certain type or stream into buckets divided by a given type of boundary. Multiple data sets of multiple types and from multiple sources can be aggreated into exactly one bucket type per request.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.read\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.read\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.read\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.read\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.read\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.read\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.read\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.read\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users dataset-aggregate ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nAggregate data for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAggregateRequest:\n  bucket-by-activity-segment:\n    activity-data-source-id: string\n    min-duration-millis: string\n  bucket-by-activity-type:\n    activity-data-source-id: string\n    min-duration-millis: string\n  bucket-by-session:\n    min-duration-millis: string\n  bucket-by-time:\n    duration-millis: string\n    period:\n      time-zone-id: string\n      type: string\n      value: integer\n  end-time-millis: string\n  filtered-data-quality-standard: [string]\n  start-time-millis: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .bucket-by-activity-segment    activity-data-source-id=et\n\n\nThe default activity stream will be used if a specific activityDataSourceId is not specified.\n\n\n\n\n\n\n\n\nmin-duration-millis=duo\n\n\n\n\nSpecifies that only activity segments of duration longer than minDurationMillis are considered and used as a container for aggregated data.\n\n\n\n\n\n\n\n\n..bucket-by-activity-type    activity-data-source-id=et\n\n\n\n\nThe default activity stream will be used if a specific activityDataSourceId is not specified.\n\n\n\n\n\n\n\n\nmin-duration-millis=eirmod\n\n\n\n\nSpecifies that only activity segments of duration longer than minDurationMillis are considered and used as a container for aggregated data.\n\n\n\n\n\n\n\n\n..bucket-by-session    min-duration-millis=sanctus\n\n\n\n\nSpecifies that only sessions of duration longer than minDurationMillis are considered and used as a container for aggregated data.\n\n\n\n\n\n\n\n\n..bucket-by-time    duration-millis=et\n\n\n\n\nSpecifies that result buckets aggregate data by exactly durationMillis time frames. Time frames that contain no data will be included in the response with an empty dataset.\n\n\n\n\n\n\nperiod    time-zone-id=amet\n\n\norg.joda.timezone.DateTimeZone\n\n\n\n\n\n\ntype=et\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nvalue=56\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n...    end-time-millis=ut\n\n\n\n\nThe end of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive.\n\n\n\n\n\n\nfiltered-data-quality-standard=ea\n\n\nA list of acceptable data quality standards. Only data points which conform to at least one of the specified data quality standards will be returned. If the list is empty, all data points are returned.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nstart-time-millis=sed\n\n\nThe start of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Dataset Aggregate"
        }, 
        {
            "location": "/users_dataset-aggregate/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.read  https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.read  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.read  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.read  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.read  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.read  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.read  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.read  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.read  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.read .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users dataset-aggregate ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_dataset-aggregate/#required-scalar-argument", 
            "text": "user-id   (string)  Aggregate data for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_dataset-aggregate/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AggregateRequest:\n  bucket-by-activity-segment:\n    activity-data-source-id: string\n    min-duration-millis: string\n  bucket-by-activity-type:\n    activity-data-source-id: string\n    min-duration-millis: string\n  bucket-by-session:\n    min-duration-millis: string\n  bucket-by-time:\n    duration-millis: string\n    period:\n      time-zone-id: string\n      type: string\n      value: integer\n  end-time-millis: string\n  filtered-data-quality-standard: [string]\n  start-time-millis: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .bucket-by-activity-segment    activity-data-source-id=et  The default activity stream will be used if a specific activityDataSourceId is not specified.     min-duration-millis=duo   Specifies that only activity segments of duration longer than minDurationMillis are considered and used as a container for aggregated data.     ..bucket-by-activity-type    activity-data-source-id=et   The default activity stream will be used if a specific activityDataSourceId is not specified.     min-duration-millis=eirmod   Specifies that only activity segments of duration longer than minDurationMillis are considered and used as a container for aggregated data.     ..bucket-by-session    min-duration-millis=sanctus   Specifies that only sessions of duration longer than minDurationMillis are considered and used as a container for aggregated data.     ..bucket-by-time    duration-millis=et   Specifies that result buckets aggregate data by exactly durationMillis time frames. Time frames that contain no data will be included in the response with an empty dataset.    period    time-zone-id=amet  org.joda.timezone.DateTimeZone    type=et  No description provided.     value=56   No description provided.     ...    end-time-millis=ut   The end of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive.    filtered-data-quality-standard=ea  A list of acceptable data quality standards. Only data points which conform to at least one of the specified data quality standards will be returned. If the list is empty, all data points are returned.  Each invocation of this argument appends the given value to the array.    start-time-millis=sed  The start of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_dataset-aggregate/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_dataset-aggregate/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_dataset-aggregate/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_sessions-delete/", 
            "text": "Deletes a session specified by the given session ID.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/fitness.activity.write\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users sessions-delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nDelete a session for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\nsession-id\n \n(string)\n\n\nThe ID of the session to be deleted.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p current-time-millis=string\n\n\nThe client\ns current time in milliseconds since epoch.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Sessions Delete"
        }, 
        {
            "location": "/users_sessions-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/fitness.activity.write  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users sessions-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_sessions-delete/#required-scalar-arguments", 
            "text": "user-id   (string)  Delete a session for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    session-id   (string)  The ID of the session to be deleted.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_sessions-delete/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p current-time-millis=string  The client s current time in milliseconds since epoch.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_sessions-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_sessions-list/", 
            "text": "Lists sessions previously created.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/fitness.activity.read\n\n\nhttps://www.googleapis.com/auth/fitness.activity.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.read\n\n\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write\n\n\nhttps://www.googleapis.com/auth/fitness.body.read\n\n\nhttps://www.googleapis.com/auth/fitness.body.write\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.read\n\n\nhttps://www.googleapis.com/auth/fitness.body_temperature.write\n\n\nhttps://www.googleapis.com/auth/fitness.location.read\n\n\nhttps://www.googleapis.com/auth/fitness.location.write\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.read\n\n\nhttps://www.googleapis.com/auth/fitness.nutrition.write\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.read\n\n\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.read\n\n\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.read\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users sessions-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nuser-id\n \n(string)\n\n\nList sessions for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p end-time=string\n\n\n\n\nAn RFC3339 timestamp. Only sessions ending between the start and end times will be included in the response.\n\n\n\n\n\n\n\n\n-p start-time=string\n\n\n\n\nAn RFC3339 timestamp. Only sessions ending between the start and end times will be included in the response.\n\n\n\n\n\n\n\n\n-p include-deleted=boolean\n\n\n\n\nIf true, deleted sessions will be returned. When set to true, sessions returned in this response will only have an ID and will not have any other fields.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of nextPageToken from the previous response.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Sessions List"
        }, 
        {
            "location": "/users_sessions-list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/fitness.activity.read  https://www.googleapis.com/auth/fitness.activity.write  https://www.googleapis.com/auth/fitness.blood_glucose.read  https://www.googleapis.com/auth/fitness.blood_glucose.write  https://www.googleapis.com/auth/fitness.blood_pressure.read  https://www.googleapis.com/auth/fitness.blood_pressure.write  https://www.googleapis.com/auth/fitness.body.read  https://www.googleapis.com/auth/fitness.body.write  https://www.googleapis.com/auth/fitness.body_temperature.read  https://www.googleapis.com/auth/fitness.body_temperature.write  https://www.googleapis.com/auth/fitness.location.read  https://www.googleapis.com/auth/fitness.location.write  https://www.googleapis.com/auth/fitness.nutrition.read  https://www.googleapis.com/auth/fitness.nutrition.write  https://www.googleapis.com/auth/fitness.oxygen_saturation.read  https://www.googleapis.com/auth/fitness.oxygen_saturation.write  https://www.googleapis.com/auth/fitness.reproductive_health.read  https://www.googleapis.com/auth/fitness.reproductive_health.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.read .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users sessions-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_sessions-list/#required-scalar-argument", 
            "text": "user-id   (string)  List sessions for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/users_sessions-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_sessions-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p end-time=string   An RFC3339 timestamp. Only sessions ending between the start and end times will be included in the response.     -p start-time=string   An RFC3339 timestamp. Only sessions ending between the start and end times will be included in the response.     -p include-deleted=boolean   If true, deleted sessions will be returned. When set to true, sessions returned in this response will only have an ID and will not have any other fields.     -p page-token=string   The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of nextPageToken from the previous response.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_sessions-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/users_sessions-update/", 
            "text": "Updates or insert a given session.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/fitness.activity.write\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/fitness.activity.write\n.\nYou can set the scope for this method like this: \nfitness1 --scope \nscope\n users sessions-update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nuser-id\n \n(string)\n\n\nCreate sessions for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.\n\n\n\n\n\n\nsession-id\n \n(string)\n\n\nThe ID of the session to be created.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSession:\n  active-time-millis: string\n  activity-type: integer\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  description: string\n  end-time-millis: string\n  id: string\n  modified-time-millis: string\n  name: string\n  start-time-millis: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    active-time-millis=dolor\n\n\nSession active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value\n\n\n\n\n\n\nactivity-type=53\n\n\nThe type of activity this session represents.\n\n\n\n\n\n\napplication    details-url=dolor\n\n\nAn optional URI that can be used to link back to the application.\n\n\n\n\n\n\nname=et\n\n\nThe name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.\n\n\n\n\n\n\npackage-name=consetetur\n\n\nPackage name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.\n\n\n\n\n\n\n\n\nversion=amet.\n\n\n\n\nVersion of the application. You should update this field whenever the application changes in a way that affects the computation of the data.\n\n\n\n\n\n\n\n\n..    description=voluptua.\n\n\n\n\nA description for this session.\n\n\n\n\n\n\nend-time-millis=lorem\n\n\nAn end time, in milliseconds since epoch, inclusive.\n\n\n\n\n\n\nid=gubergren\n\n\nA client-generated identifier that is unique across all sessions owned by this particular user.\n\n\n\n\n\n\nmodified-time-millis=justo\n\n\nA timestamp that indicates when the session was last modified.\n\n\n\n\n\n\nname=sit\n\n\nA human readable name of the session.\n\n\n\n\n\n\nstart-time-millis=vero\n\n\nA start time, in milliseconds since epoch, inclusive.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p current-time-millis=string\n\n\nThe client\ns current time in milliseconds since epoch.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Sessions Update"
        }, 
        {
            "location": "/users_sessions-update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/fitness.activity.write  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/fitness.activity.write .\nYou can set the scope for this method like this:  fitness1 --scope  scope  users sessions-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/users_sessions-update/#required-scalar-arguments", 
            "text": "user-id   (string)  Create sessions for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.    session-id   (string)  The ID of the session to be created.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/users_sessions-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Session:\n  active-time-millis: string\n  activity-type: integer\n  application:\n    details-url: string\n    name: string\n    package-name: string\n    version: string\n  description: string\n  end-time-millis: string\n  id: string\n  modified-time-millis: string\n  name: string\n  start-time-millis: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    active-time-millis=dolor  Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value    activity-type=53  The type of activity this session represents.    application    details-url=dolor  An optional URI that can be used to link back to the application.    name=et  The name of this application. This is required for REST clients, but we do not enforce uniqueness of this name. It is provided as a matter of convenience for other developers who would like to identify which REST created an Application or Data Source.    package-name=consetetur  Package name for this application. This is used as a unique identifier when created by Android applications, but cannot be specified by REST clients. REST clients will have their developer project number reflected into the Data Source data stream IDs, instead of the packageName.     version=amet.   Version of the application. You should update this field whenever the application changes in a way that affects the computation of the data.     ..    description=voluptua.   A description for this session.    end-time-millis=lorem  An end time, in milliseconds since epoch, inclusive.    id=gubergren  A client-generated identifier that is unique across all sessions owned by this particular user.    modified-time-millis=justo  A timestamp that indicates when the session was last modified.    name=sit  A human readable name of the session.    start-time-millis=vero  A start time, in milliseconds since epoch, inclusive.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/users_sessions-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/users_sessions-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/users_sessions-update/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p current-time-millis=string  The client s current time in milliseconds since epoch.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/users_sessions-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}