initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"fn":[["remove_json_null_values",""]],"struct":[["AnalyzeEntitiesRequest","The entity analysis request message."],["AnalyzeEntitiesResponse","The entity analysis response message."],["AnalyzeSentimentRequest","The sentiment analysis request message."],["AnalyzeSentimentResponse","The sentiment analysis response message."],["AnalyzeSyntaxRequest","The syntax analysis request message."],["AnalyzeSyntaxResponse","The syntax analysis response message."],["AnnotateTextRequest","The request message for the text annotation API, which can perform multiple analysis types (sentiment, entities, and syntax) in one call."],["AnnotateTextResponse","The text annotations response message."],["Chunk",""],["CloudNaturalLanguage","Central instance to access all CloudNaturalLanguage related resource activities"],["ContentRange","Implements the Content-Range header, for serialization only"],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DependencyEdge","Represents dependency parse tree information for a token."],["Document","################################################################ #"],["DocumentAnalyzeEntityCall","Finds named entities (currently proper names and common nouns) in the text along with entity types, salience, mentions for each entity, and other properties."],["DocumentAnalyzeSentimentCall","Analyzes the sentiment of the provided text."],["DocumentAnalyzeSyntaxCall","Analyzes the syntax of the text and provides sentence boundaries and tokenization along with part of speech tags, dependency trees, and other properties."],["DocumentAnnotateTextCall","A convenience method that provides all the features that analyzeSentiment, analyzeEntities, and analyzeSyntax provide in one call."],["DocumentMethods","A builder providing access to all methods supported on document resources. It is not used directly, but through the `CloudNaturalLanguage` hub."],["DummyNetworkStream",""],["Entity","Represents a phrase in the text that is a known entity, such as a person, an organization, or location. The API associates information, such as salience and mentions, with entities."],["EntityMention","Represents a mention for an entity in the text. Currently, proper noun mentions are supported."],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["Features","All available features for sentiment, syntax, and semantic analysis. Setting each one to true will enable that specific analysis for the input."],["JsonServerError","A utility type which can decode a server response that indicates error"],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. Note: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["PartOfSpeech","Represents part of speech information for a token."],["RangeResponseHeader",""],["ResumableUploadHelper","A utility type to perform a resumable upload from start to end."],["Sentence","Represents a sentence in the input document."],["Sentiment","Represents the feeling associated with the entire text or entities in the text."],["ServerError",""],["ServerMessage",""],["TextSpan","Represents an output piece of text."],["Token","Represents the smallest syntactic building block of the text."],["XUploadContentType","The `X-Upload-Content-Type` header."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a parts string"],["UnusedType","Identifies types which are not actually used by the API This might be a bug within the google API schema."]],"type":[["Result","A universal result type used as return for all calls."]]});