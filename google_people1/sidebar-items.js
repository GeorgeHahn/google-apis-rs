initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"fn":[["remove_json_null_values",""]],"struct":[["Address","A person's physical address. May be a P.O. box or street address. All fields are optional."],["Biography","A person's short biography."],["Birthday","A person's birthday. At least one of the `date` and `text` fields are specified. The `date` and `text` fields typically represent the same date, but are not guaranteed to."],["BraggingRights","A person's bragging rights."],["ContactGroupMembership","A Google contact group membership."],["CoverPhoto","A person's cover photo. A large image shown on the person's profile page that represents who they are or what they care about."],["Date","Represents a whole calendar date, for example a date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. The day may be 0 to represent a year and month where the day is not significant. The year may be 0 to represent a month and day independent of year; for example, anniversary date."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DomainMembership","A Google Apps Domain membership."],["EmailAddress","A person's email address."],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["Event","An event related to the person."],["FieldMetadata","Metadata about a field."],["Gender","A person's gender."],["GetPeopleResponse","There is no detailed description."],["ImClient","A person's instant messaging client."],["Interest","One of the person's interests."],["ListConnectionsResponse","There is no detailed description."],["Locale","A person's locale preference."],["Membership","A person's membership in a group."],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. **Note**: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Name","A person's name. If the name is a mononym, the family name is empty."],["Nickname","A person's nickname."],["Occupation","A person's occupation."],["Organization","A person's past or current organization. Overlapping date ranges are permitted."],["People","Central instance to access all People related resource activities"],["PeopleConnectionListCall","Provides a list of the authenticated user's contacts merged with any linked profiles."],["PeopleGetBatchGetCall","Provides information about a list of specific people by specifying a list of requested resource names. Use `people/me` to indicate the authenticated user."],["PeopleGetCall","Provides information about a person resource for a resource name. Use `people/me` to indicate the authenticated user."],["PeopleMethods","A builder providing access to all methods supported on *people* resources. It is not used directly, but through the `People` hub."],["Person","Information about a person merged from various data sources such as the authenticated user's contacts and profile data. Fields other than IDs, metadata, and group memberships are user-edited. Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is guaranteed to have exactly one field with `metadata.primary` set to true."],["PersonMetadata","Metadata about a person."],["PersonResponse","The response for a single person"],["PhoneNumber","A person's phone number."],["Photo","A person's photo. A picture shown next to the person's name to help others recognize the person."],["Relation","A person's relation to another person."],["RelationshipInterest","The kind of relationship the person is looking for."],["RelationshipStatus","A person's relationship status."],["Residence","A person's past or current residence."],["Skill","A skill that the person has."],["Source","The source of a field."],["Tagline","A brief one-line description of the person."],["Url","A person's associated URLs."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a *parts* string"]],"type":[["Result","A universal result type used as return for all calls."]]});