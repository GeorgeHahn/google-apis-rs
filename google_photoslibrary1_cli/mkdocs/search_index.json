{
    "docs": [
        {
            "location": "/", 
            "text": "The \nphotoslibrary1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Photos Library\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nPhotos Library\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-photoslibrary1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nPhotos Library\n API at revision \n20181004\n. The CLI is at version \n1.0.8\n.\n\n\nphotoslibrary1 [options]\n        albums\n                add-enrichment \nalbum-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                create (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                get \nalbum-id\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n                share \nalbum-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        media-items\n                batch-create (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                get \nmedia-item-id\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n                search (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        shared-albums\n                get \nshare-token\n [-p \nv\n]... [-o \nout\n]\n                join (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n  photoslibrary1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nphotoslibrary1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/photoslibrary1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/photoslibrary1-secret.json\n, assuming that the required \nphotoslibrary\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nphotoslibrary1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-photoslibrary1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Photos Library  API at revision  20181004 . The CLI is at version  1.0.8 .  photoslibrary1 [options]\n        albums\n                add-enrichment  album-id  (-r  kv )... [-p  v ]... [-o  out ]\n                create (-r  kv )... [-p  v ]... [-o  out ]\n                get  album-id  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n                share  album-id  (-r  kv )... [-p  v ]... [-o  out ]\n        media-items\n                batch-create (-r  kv )... [-p  v ]... [-o  out ]\n                get  media-item-id  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n                search (-r  kv )... [-p  v ]... [-o  out ]\n        shared-albums\n                get  share-token  [-p  v ]... [-o  out ]\n                join (-r  kv )... [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n  photoslibrary1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  photoslibrary1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/photoslibrary1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/photoslibrary1-secret.json , assuming that the required  photoslibrary  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  photoslibrary1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/albums_add-enrichment/", 
            "text": "Adds an enrichment at a specified position in a defined album.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.appendonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.sharing\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n albums add-enrichment ...\n\n\nRequired Scalar Argument\n\n\n\n\nalbum-id\n \n(string)\n\n\nIdentifier of the album where the enrichment is to be added.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAddEnrichmentToAlbumRequest:\n  album-position:\n    position: string\n    relative-enrichment-item-id: string\n    relative-media-item-id: string\n  new-enrichment-item:\n    location-enrichment:\n      location:\n        latlng:\n          latitude: number\n          longitude: number\n        location-name: string\n    map-enrichment:\n      destination:\n        latlng:\n          latitude: number\n          longitude: number\n        location-name: string\n      origin:\n        latlng:\n          latitude: number\n          longitude: number\n        location-name: string\n    text-enrichment:\n      text: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .album-position    position=eirmod\n\n\nType of position, for a media or enrichment item.\n\n\n\n\n\n\nrelative-enrichment-item-id=sit\n\n\nThe enrichment item to which the position is relative to.\n    Only used when position type is AFTER_ENRICHMENT_ITEM.\n\n\n\n\n\n\n\n\nrelative-media-item-id=stet\n\n\n\n\nThe media item to which the position is relative to.\n    Only used when position type is AFTER_MEDIA_ITEM.\n\n\n\n\n\n\n\n\n..new-enrichment-item.location-enrichment.location.latlng    latitude=0.585787353902\n\n\n\n\nThe latitude in degrees. It must be in the range [-90.0, +90.0].\n\n\n\n\n\n\n\n\nlongitude=0.165687283689\n\n\n\n\nThe longitude in degrees. It must be in the range [-180.0, +180.0].\n\n\n\n\n\n\n\n\n..    location-name=dolores\n\n\n\n\nName of the location to be displayed.\n\n\n\n\n\n\n\n\n...map-enrichment.destination.latlng    latitude=0.383704808614\n\n\n\n\nThe latitude in degrees. It must be in the range [-90.0, +90.0].\n\n\n\n\n\n\n\n\nlongitude=0.789612824916\n\n\n\n\nThe longitude in degrees. It must be in the range [-180.0, +180.0].\n\n\n\n\n\n\n\n\n..    location-name=takimata\n\n\n\n\nName of the location to be displayed.\n\n\n\n\n\n\n\n\n..origin.latlng    latitude=0.30763338798\n\n\n\n\nThe latitude in degrees. It must be in the range [-90.0, +90.0].\n\n\n\n\n\n\n\n\nlongitude=0.992247072586\n\n\n\n\nThe longitude in degrees. It must be in the range [-180.0, +180.0].\n\n\n\n\n\n\n\n\n..    location-name=erat\n\n\n\n\nName of the location to be displayed.\n\n\n\n\n\n\n\n\n...text-enrichment    text=labore\n\n\n\n\nText for this enrichment item.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Add Enrichment"
        }, 
        {
            "location": "/albums_add-enrichment/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.appendonly  https://www.googleapis.com/auth/photoslibrary.sharing   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  albums add-enrichment ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/albums_add-enrichment/#required-scalar-argument", 
            "text": "album-id   (string)  Identifier of the album where the enrichment is to be added.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/albums_add-enrichment/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AddEnrichmentToAlbumRequest:\n  album-position:\n    position: string\n    relative-enrichment-item-id: string\n    relative-media-item-id: string\n  new-enrichment-item:\n    location-enrichment:\n      location:\n        latlng:\n          latitude: number\n          longitude: number\n        location-name: string\n    map-enrichment:\n      destination:\n        latlng:\n          latitude: number\n          longitude: number\n        location-name: string\n      origin:\n        latlng:\n          latitude: number\n          longitude: number\n        location-name: string\n    text-enrichment:\n      text: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .album-position    position=eirmod  Type of position, for a media or enrichment item.    relative-enrichment-item-id=sit  The enrichment item to which the position is relative to.\n    Only used when position type is AFTER_ENRICHMENT_ITEM.     relative-media-item-id=stet   The media item to which the position is relative to.\n    Only used when position type is AFTER_MEDIA_ITEM.     ..new-enrichment-item.location-enrichment.location.latlng    latitude=0.585787353902   The latitude in degrees. It must be in the range [-90.0, +90.0].     longitude=0.165687283689   The longitude in degrees. It must be in the range [-180.0, +180.0].     ..    location-name=dolores   Name of the location to be displayed.     ...map-enrichment.destination.latlng    latitude=0.383704808614   The latitude in degrees. It must be in the range [-90.0, +90.0].     longitude=0.789612824916   The longitude in degrees. It must be in the range [-180.0, +180.0].     ..    location-name=takimata   Name of the location to be displayed.     ..origin.latlng    latitude=0.30763338798   The latitude in degrees. It must be in the range [-90.0, +90.0].     longitude=0.992247072586   The longitude in degrees. It must be in the range [-180.0, +180.0].     ..    location-name=erat   Name of the location to be displayed.     ...text-enrichment    text=labore   Text for this enrichment item.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/albums_add-enrichment/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/albums_add-enrichment/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/albums_add-enrichment/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/albums_create/", 
            "text": "Creates an album in a user\ns Google Photos library.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.appendonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.sharing\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n albums create ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCreateAlbumRequest:\n  album:\n    cover-photo-base-url: string\n    cover-photo-media-item-id: string\n    id: string\n    is-writeable: boolean\n    media-items-count: int64\n    product-url: string\n    share-info:\n      is-joined: boolean\n      share-token: string\n      shareable-url: string\n      shared-album-options:\n        is-collaborative: boolean\n        is-commentable: boolean\n    title: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .album    cover-photo-base-url=sea\n\n\n[Output only] A URL to the cover photo\ns bytes. This shouldn\nt be used as\n    is. Parameters should be appended to this URL before use. For example,\n    \n#39;=w2048-h1024\n#39;\n sets the dimensions of\n    the cover photo to have a width of 2048 px and height of 1024 px.\n\n\n\n\n\n\ncover-photo-media-item-id=nonumy\n\n\n[Output only] Identifier for the media item associated with the cover\n    photo.\n\n\n\n\n\n\nid=dolores\n\n\n[Ouput only] Identifier for the album. This is a persistent identifier that\n    can be used between sessions to identify this album.\n\n\n\n\n\n\nis-writeable=false\n\n\n[Output only] True if you can create media items in this album.\n    This field is based on the scopes granted and permissions of the album. If\n    the scopes are changed or permissions of the album are changed, this field\n    is updated.\n\n\n\n\n\n\nmedia-items-count=-95\n\n\n[Output only] The number of media items in the album.\n\n\n\n\n\n\nproduct-url=aliquyam\n\n\n[Output only] Google Photos URL for the album. The user needs to be signed\n    in to their Google Photos account to access this link.\n\n\n\n\n\n\nshare-info    is-joined=false\n\n\nTrue if the user has joined the album. This is always true for the owner\n    of the shared album.\n\n\n\n\n\n\nshare-token=no\n\n\nA token that can be used by other users to join this shared album via the\n    API.\n\n\n\n\n\n\nshareable-url=justo\n\n\nA link to the album that\ns now shared on the Google Photos website and app.\n    Anyone with the link can access this shared album and see all of the items\n    present in the album.\n\n\n\n\n\n\nshared-album-options    is-collaborative=true\n\n\nTrue if the shared album allows collaborators (users who have joined\n    the album) to add media items to it. Defaults to false.\n\n\n\n\n\n\n\n\nis-commentable=true\n\n\n\n\nTrue if the shared album allows the owner and the collaborators (users\n    who have joined the album) to add comments to the album. Defaults to false.\n\n\n\n\n\n\n\n\n...    title=et\n\n\n\n\nName of the album displayed to the user in their Google Photos account.\n    This string shouldn\nt be more than 500 characters.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Create"
        }, 
        {
            "location": "/albums_create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.appendonly  https://www.googleapis.com/auth/photoslibrary.sharing   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  albums create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/albums_create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CreateAlbumRequest:\n  album:\n    cover-photo-base-url: string\n    cover-photo-media-item-id: string\n    id: string\n    is-writeable: boolean\n    media-items-count: int64\n    product-url: string\n    share-info:\n      is-joined: boolean\n      share-token: string\n      shareable-url: string\n      shared-album-options:\n        is-collaborative: boolean\n        is-commentable: boolean\n    title: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .album    cover-photo-base-url=sea  [Output only] A URL to the cover photo s bytes. This shouldn t be used as\n    is. Parameters should be appended to this URL before use. For example,\n     #39;=w2048-h1024 #39;  sets the dimensions of\n    the cover photo to have a width of 2048 px and height of 1024 px.    cover-photo-media-item-id=nonumy  [Output only] Identifier for the media item associated with the cover\n    photo.    id=dolores  [Ouput only] Identifier for the album. This is a persistent identifier that\n    can be used between sessions to identify this album.    is-writeable=false  [Output only] True if you can create media items in this album.\n    This field is based on the scopes granted and permissions of the album. If\n    the scopes are changed or permissions of the album are changed, this field\n    is updated.    media-items-count=-95  [Output only] The number of media items in the album.    product-url=aliquyam  [Output only] Google Photos URL for the album. The user needs to be signed\n    in to their Google Photos account to access this link.    share-info    is-joined=false  True if the user has joined the album. This is always true for the owner\n    of the shared album.    share-token=no  A token that can be used by other users to join this shared album via the\n    API.    shareable-url=justo  A link to the album that s now shared on the Google Photos website and app.\n    Anyone with the link can access this shared album and see all of the items\n    present in the album.    shared-album-options    is-collaborative=true  True if the shared album allows collaborators (users who have joined\n    the album) to add media items to it. Defaults to false.     is-commentable=true   True if the shared album allows the owner and the collaborators (users\n    who have joined the album) to add comments to the album. Defaults to false.     ...    title=et   Name of the album displayed to the user in their Google Photos account.\n    This string shouldn t be more than 500 characters.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/albums_create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/albums_create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/albums_create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/albums_get/", 
            "text": "Returns the album based on the specified \nalbumId\n or \nshareToken\n.\nExactly one of \nalbumId\n and \nshareToken\n must be set.\nThe \nalbumId\n should be the ID of an album owned by the user or a shared\nalbum that the user has joined.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\n\n\nhttps://www.googleapis.com/auth/photoslibrary.sharing\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.readonly\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n albums get ...\n\n\nRequired Scalar Argument\n\n\n\n\nalbum-id\n \n(string)\n\n\nIdentifier of the album to be requested. Must not be set if \nshareToken\n is\n    set.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p share-token=string\n\n\nShare token of the album to be request. Must not be set if \nalbumId\n is\n    set.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/albums_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.readonly  https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata  https://www.googleapis.com/auth/photoslibrary.sharing   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.readonly .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  albums get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/albums_get/#required-scalar-argument", 
            "text": "album-id   (string)  Identifier of the album to be requested. Must not be set if  shareToken  is\n    set.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/albums_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/albums_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p share-token=string  Share token of the album to be request. Must not be set if  albumId  is\n    set.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/albums_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/albums_list/", 
            "text": "Lists all albums shown to a user in the Albums tab of the Google\nPhotos app.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.readonly\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n albums list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the \npageToken\n. The \npageToken\n should\n    be the value returned in the \nnextPageToken\n parameter in the response to\n    the \nlistAlbums\n request.\n\n\n\n\n\n\n\n\n-p exclude-non-app-created-data=boolean\n\n\n\n\nIf set, the results exclude media items that were not created by this app.\n    Defaults to false (all albums are returned). This field is ignored if the\n    photoslibrary.readonly.appcreateddata scope is used.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of albums to return in the response. The default number of\n    albums to return at a time is 20. The maximum \npageSize\n is 50.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/albums_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.readonly  https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.readonly .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  albums list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/albums_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/albums_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   A continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the  pageToken . The  pageToken  should\n    be the value returned in the  nextPageToken  parameter in the response to\n    the  listAlbums  request.     -p exclude-non-app-created-data=boolean   If set, the results exclude media items that were not created by this app.\n    Defaults to false (all albums are returned). This field is ignored if the\n    photoslibrary.readonly.appcreateddata scope is used.     -p page-size=integer   Maximum number of albums to return in the response. The default number of\n    albums to return at a time is 20. The maximum  pageSize  is 50.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/albums_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/albums_share/", 
            "text": "Marks an album as shared and accessible to other users. This action can\nonly be performed on albums which were created by the developer via the\nAPI.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/photoslibrary.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.sharing\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n albums share ...\n\n\nRequired Scalar Argument\n\n\n\n\nalbum-id\n \n(string)\n\n\nIdentifier of the album to be shared. This \nalbumId\n must belong to an\n    album created by the developer.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nShareAlbumRequest:\n  shared-album-options:\n    is-collaborative: boolean\n    is-commentable: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .shared-album-options    is-collaborative=true\n\n\nTrue if the shared album allows collaborators (users who have joined\n    the album) to add media items to it. Defaults to false.\n\n\n\n\n\n\nis-commentable=false\n\n\nTrue if the shared album allows the owner and the collaborators (users\n    who have joined the album) to add comments to the album. Defaults to false.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Share"
        }, 
        {
            "location": "/albums_share/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/photoslibrary.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.sharing .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  albums share ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/albums_share/#required-scalar-argument", 
            "text": "album-id   (string)  Identifier of the album to be shared. This  albumId  must belong to an\n    album created by the developer.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/albums_share/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ShareAlbumRequest:\n  shared-album-options:\n    is-collaborative: boolean\n    is-commentable: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .shared-album-options    is-collaborative=true  True if the shared album allows collaborators (users who have joined\n    the album) to add media items to it. Defaults to false.    is-commentable=false  True if the shared album allows the owner and the collaborators (users\n    who have joined the album) to add comments to the album. Defaults to false.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/albums_share/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/albums_share/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/albums_share/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/media-items_batch-create/", 
            "text": "Creates one or more media items in a user\ns Google Photos library.\n\n\nThis is the second step for creating a media item. For details regarding\nStep 1, uploading the raw bytes to a Google Server, see\n\na href=\n/photos/library/guides/upload-media\nUploading media\n/a\n.\n\n\nThis call adds the media item to the library. If an album \nid\n is\nspecified, the call adds the media item to the album too. By default, the\nmedia item will be added to the end of the library or album.\n\n\nIf an album \nid\n and position are both defined, the media item is\nadded to the album at the specified position.\n\n\nIf the call contains multiple media items, they\nre added at the specified\nposition.\nIf you are creating a media item in a shared album where you are not the\nowner, you are not allowed to position the media item. Doing so will result\nin a \nBAD REQUEST\n error.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.appendonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.sharing\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n media-items batch-create ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBatchCreateMediaItemsRequest:\n  album-id: string\n  album-position:\n    position: string\n    relative-enrichment-item-id: string\n    relative-media-item-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    album-id=lorem\n\n\nIdentifier of the album where the media items are added. The media items\n    are also added to the user\ns library. This is an optional field.\n\n\n\n\n\n\nalbum-position    position=et\n\n\nType of position, for a media or enrichment item.\n\n\n\n\n\n\nrelative-enrichment-item-id=duo\n\n\nThe enrichment item to which the position is relative to.\n    Only used when position type is AFTER_ENRICHMENT_ITEM.\n\n\n\n\n\n\nrelative-media-item-id=aliquyam\n\n\nThe media item to which the position is relative to.\n    Only used when position type is AFTER_MEDIA_ITEM.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Batch Create"
        }, 
        {
            "location": "/media-items_batch-create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.appendonly  https://www.googleapis.com/auth/photoslibrary.sharing   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  media-items batch-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/media-items_batch-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BatchCreateMediaItemsRequest:\n  album-id: string\n  album-position:\n    position: string\n    relative-enrichment-item-id: string\n    relative-media-item-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    album-id=lorem  Identifier of the album where the media items are added. The media items\n    are also added to the user s library. This is an optional field.    album-position    position=et  Type of position, for a media or enrichment item.    relative-enrichment-item-id=duo  The enrichment item to which the position is relative to.\n    Only used when position type is AFTER_ENRICHMENT_ITEM.    relative-media-item-id=aliquyam  The media item to which the position is relative to.\n    Only used when position type is AFTER_MEDIA_ITEM.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/media-items_batch-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/media-items_batch-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/media-items_batch-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/media-items_get/", 
            "text": "Returns the media item for the specified media item \nid\n.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.readonly\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n media-items get ...\n\n\nRequired Scalar Argument\n\n\n\n\nmedia-item-id\n \n(string)\n\n\nIdentifier of media item to be requested.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/media-items_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.readonly  https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.readonly .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  media-items get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/media-items_get/#required-scalar-argument", 
            "text": "media-item-id   (string)  Identifier of media item to be requested.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/media-items_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/media-items_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/media-items_list/", 
            "text": "List all media items from a user\ns Google Photos library.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.readonly\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n media-items list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the \npageToken\n. The \npageToken\n should\n    be the value returned in the \nnextPageToken\n parameter in the response to\n    the \nlistMediaItems\n request.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of media items to return in the response. The default number\n    of media items to return at a time is 25. The maximum \npageSize\n is 100.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/media-items_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.readonly  https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.readonly .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  media-items list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/media-items_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/media-items_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   A continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the  pageToken . The  pageToken  should\n    be the value returned in the  nextPageToken  parameter in the response to\n    the  listMediaItems  request.     -p page-size=integer   Maximum number of media items to return in the response. The default number\n    of media items to return at a time is 25. The maximum  pageSize  is 100.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/media-items_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/media-items_search/", 
            "text": "Searches for media items in a user\ns Google Photos library.\nIf no filters are set, then all media items in the user\ns library are\nreturned.\nIf an album is set, all media items in the specified album are returned.\nIf filters are specified, media items that match the filters from the user\ns\nlibrary are listed.\nIf you set both the album and the filters, the request results in an error.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n media-items search ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSearchMediaItemsRequest:\n  album-id: string\n  filters:\n    content-filter:\n      excluded-content-categories: [string]\n      included-content-categories: [string]\n    exclude-non-app-created-data: boolean\n    include-archived-media: boolean\n    media-type-filter:\n      media-types: [string]\n  page-size: integer\n  page-token: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    album-id=sea\n\n\nIdentifier of an album. If populated, lists all media items in\n    specified album. Can\nt set in conjunction with any filters.\n\n\n\n\n\n\nfilters.content-filter    excluded-content-categories=lorem\n\n\nThe set of categories which are not to be included in the media item search\n    results. The items in the set are ORed. There\ns a maximum of 10\n    \nexcludedContentCategories\n per request.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nincluded-content-categories=eos\n\n\n\n\nThe set of categories to be included in the media item search results.\n    The items in the set are ORed. There\ns a maximum of 10\n    \nincludedContentCategories\n per request.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\n..    exclude-non-app-created-data=false\n\n\n\n\nIf set, the results exclude media items that were not created by this app.\n    Defaults to false (all media items are returned). This field is ignored if\n    the photoslibrary.readonly.appcreateddata scope is used.\n\n\n\n\n\n\ninclude-archived-media=false\n\n\nIf set, the results include media items that the user has archived.\n    Defaults to false (archived media items aren\nt included).\n\n\n\n\n\n\n\n\nmedia-type-filter    media-types=dolor\n\n\n\n\nThe types of media items to be included. This field should be populated\n    with only one media type. If you specify multiple media types, it results\n    in an error.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\n...    page-size=62\n\n\n\n\nMaximum number of media items to return in the response. The default number\n    of media items to return at a time is 25. The maximum\n    \npageSize\n is 100.\n\n\n\n\n\n\npage-token=elitr\n\n\nA continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the \npageToken\n. The \npageToken\n should\n    be the value returned in the \nnextPageToken\n parameter in the response to\n    the \nsearchMediaItems\n request.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Search"
        }, 
        {
            "location": "/media-items_search/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.readonly  https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  media-items search ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/media-items_search/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SearchMediaItemsRequest:\n  album-id: string\n  filters:\n    content-filter:\n      excluded-content-categories: [string]\n      included-content-categories: [string]\n    exclude-non-app-created-data: boolean\n    include-archived-media: boolean\n    media-type-filter:\n      media-types: [string]\n  page-size: integer\n  page-token: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    album-id=sea  Identifier of an album. If populated, lists all media items in\n    specified album. Can t set in conjunction with any filters.    filters.content-filter    excluded-content-categories=lorem  The set of categories which are not to be included in the media item search\n    results. The items in the set are ORed. There s a maximum of 10\n     excludedContentCategories  per request.  Each invocation of this argument appends the given value to the array.     included-content-categories=eos   The set of categories to be included in the media item search results.\n    The items in the set are ORed. There s a maximum of 10\n     includedContentCategories  per request.  Each invocation of this argument appends the given value to the array.     ..    exclude-non-app-created-data=false   If set, the results exclude media items that were not created by this app.\n    Defaults to false (all media items are returned). This field is ignored if\n    the photoslibrary.readonly.appcreateddata scope is used.    include-archived-media=false  If set, the results include media items that the user has archived.\n    Defaults to false (archived media items aren t included).     media-type-filter    media-types=dolor   The types of media items to be included. This field should be populated\n    with only one media type. If you specify multiple media types, it results\n    in an error.  Each invocation of this argument appends the given value to the array.     ...    page-size=62   Maximum number of media items to return in the response. The default number\n    of media items to return at a time is 25. The maximum\n     pageSize  is 100.    page-token=elitr  A continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the  pageToken . The  pageToken  should\n    be the value returned in the  nextPageToken  parameter in the response to\n    the  searchMediaItems  request.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/media-items_search/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/media-items_search/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/media-items_search/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/shared-albums_get/", 
            "text": "Returns the album based on the specified \nalbumId\n or \nshareToken\n.\nExactly one of \nalbumId\n and \nshareToken\n must be set.\nThe \nalbumId\n should be the ID of an album owned by the user or a shared\nalbum that the user has joined.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\n\n\nhttps://www.googleapis.com/auth/photoslibrary.sharing\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.readonly\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n shared-albums get ...\n\n\nRequired Scalar Argument\n\n\n\n\nshare-token\n \n(string)\n\n\nShare token of the album to be request. Must not be set if \nalbumId\n is\n    set.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p album-id=string\n\n\nIdentifier of the album to be requested. Must not be set if \nshareToken\n is\n    set.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/shared-albums_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.readonly  https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata  https://www.googleapis.com/auth/photoslibrary.sharing   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.readonly .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  shared-albums get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/shared-albums_get/#required-scalar-argument", 
            "text": "share-token   (string)  Share token of the album to be request. Must not be set if  albumId  is\n    set.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/shared-albums_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/shared-albums_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p album-id=string  Identifier of the album to be requested. Must not be set if  shareToken  is\n    set.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/shared-albums_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/shared-albums_join/", 
            "text": "Joins a shared album on behalf of the Google Photos user.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/photoslibrary.sharing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.sharing\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n shared-albums join ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nJoinSharedAlbumRequest:\n  share-token: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    share-token=amet\n\n\nToken to join the shared album on behalf of the user.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Join"
        }, 
        {
            "location": "/shared-albums_join/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/photoslibrary.sharing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.sharing .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  shared-albums join ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/shared-albums_join/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  JoinSharedAlbumRequest:\n  share-token: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    share-token=amet  Token to join the shared album on behalf of the user.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/shared-albums_join/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/shared-albums_join/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/shared-albums_join/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/shared-albums_list/", 
            "text": "Lists all shared albums available in the Sharing tab of the\nuser\ns Google Photos app.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/photoslibrary\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly\n\n\nhttps://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/photoslibrary.readonly\n.\nYou can set the scope for this method like this: \nphotoslibrary1 --scope \nscope\n shared-albums list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nMaximum number of albums to return in the response. The default number of\n    albums to return at a time is 20. The maximum \npageSize\n is 50.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the \npageToken\n. The \npageToken\n should\n    be the value returned in the \nnextPageToken\n parameter in the response to\n    the \nlistSharedAlbums\n request.\n\n\n\n\n\n\n\n\n-p exclude-non-app-created-data=boolean\n\n\n\n\nIf set, the results exclude media items that were not created by this app.\n    Defaults to false (all albums are returned). This field is ignored if the\n    photoslibrary.readonly.appcreateddata scope is used.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/shared-albums_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/photoslibrary  https://www.googleapis.com/auth/photoslibrary.readonly  https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/photoslibrary.readonly .\nYou can set the scope for this method like this:  photoslibrary1 --scope  scope  shared-albums list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/shared-albums_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/shared-albums_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-size=integer   Maximum number of albums to return in the response. The default number of\n    albums to return at a time is 20. The maximum  pageSize  is 50.     -p page-token=string   A continuation token to get the next page of the results. Adding this to\n    the request returns the rows after the  pageToken . The  pageToken  should\n    be the value returned in the  nextPageToken  parameter in the response to\n    the  listSharedAlbums  request.     -p exclude-non-app-created-data=boolean   If set, the results exclude media items that were not created by this app.\n    Defaults to false (all albums are returned). This field is ignored if the\n    photoslibrary.readonly.appcreateddata scope is used.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/shared-albums_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}