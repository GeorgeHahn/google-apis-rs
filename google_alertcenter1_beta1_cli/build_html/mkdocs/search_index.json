{
    "docs": [
        {
            "location": "/", 
            "text": "The \nalertcenter1-beta1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle AlertCenter\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nAlertCenter\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-alertcenter1_beta1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nAlertCenter\n API at revision \n20181011\n. The CLI is at version \n1.0.8\n.\n\n\nalertcenter1-beta1 [options]\n        alerts\n                delete \nalert-id\n [-p \nv\n]... [-o \nout\n]\n                feedback-create \nalert-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                feedback-list \nalert-id\n [-p \nv\n]... [-o \nout\n]\n                get \nalert-id\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n  alertcenter1-beta1 --help\n\nConfiguration:\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nalertcenter1-beta1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/alertcenter1-beta1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/alertcenter1-beta1-secret.json\n, assuming that the required \nalertcenter\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nalertcenter1-beta1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-alertcenter1_beta1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  AlertCenter  API at revision  20181011 . The CLI is at version  1.0.8 .  alertcenter1-beta1 [options]\n        alerts\n                delete  alert-id  [-p  v ]... [-o  out ]\n                feedback-create  alert-id  (-r  kv )... [-p  v ]... [-o  out ]\n                feedback-list  alert-id  [-p  v ]... [-o  out ]\n                get  alert-id  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n  alertcenter1-beta1 --help\n\nConfiguration:\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  alertcenter1-beta1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/alertcenter1-beta1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/alertcenter1-beta1-secret.json , assuming that the required  alertcenter  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  alertcenter1-beta1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/alerts_delete/", 
            "text": "Marks the specified alert for deletion. An alert that has been marked for\ndeletion will be excluded from the results of a List operation by default,\nand will be removed from the Alert Center after 30 days.\nMarking an alert for deletion will have no effect on an alert which has\nalready been marked for deletion. Attempting to mark a nonexistent alert\nfor deletion will return NOT_FOUND.\n\n\nRequired Scalar Argument\n\n\n\n\nalert-id\n \n(string)\n\n\nRequired. The identifier of the alert to delete.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p customer-id=string\n\n\nOptional. The unique identifier of the Google account of the customer the\n    alert is associated with. This is obfuscated and not the plain customer\n    ID as stored internally. Inferred from the caller identity if not provided.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Delete"
        }, 
        {
            "location": "/alerts_delete/#required-scalar-argument", 
            "text": "alert-id   (string)  Required. The identifier of the alert to delete.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/alerts_delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/alerts_delete/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p customer-id=string  Optional. The unique identifier of the Google account of the customer the\n    alert is associated with. This is obfuscated and not the plain customer\n    ID as stored internally. Inferred from the caller identity if not provided.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/alerts_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/alerts_feedback-create/", 
            "text": "Creates a new alert feedback.\n\n\nRequired Scalar Argument\n\n\n\n\nalert-id\n \n(string)\n\n\nRequired. The identifier of the alert this feedback belongs to.\n    Returns a NOT_FOUND error if no such alert.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAlertFeedback:\n  alert-id: string\n  create-time: string\n  customer-id: string\n  email: string\n  feedback-id: string\n  type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    alert-id=eirmod\n\n\nOutput only. The alert identifier.\n\n\n\n\n\n\ncreate-time=sit\n\n\nOutput only. The time this feedback was created. Assigned by the server.\n\n\n\n\n\n\ncustomer-id=stet\n\n\nOutput only. The unique identifier of the Google account of the customer.\n\n\n\n\n\n\nemail=sed\n\n\nOutput only. The email of the user that provided the feedback.\n\n\n\n\n\n\nfeedback-id=et\n\n\nOutput only. A unique identifier for the feedback. When creating a new\n    feedback the system will assign one.\n\n\n\n\n\n\ntype=dolores\n\n\nRequired. The type of the feedback.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p customer-id=string\n\n\nOptional. The unique identifier of the Google account of the customer the\n    alert\ns feedback is associated with. This is obfuscated and not the\n    plain customer ID as stored internally. Inferred from the caller identity\n    if not provided.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Feedback Create"
        }, 
        {
            "location": "/alerts_feedback-create/#required-scalar-argument", 
            "text": "alert-id   (string)  Required. The identifier of the alert this feedback belongs to.\n    Returns a NOT_FOUND error if no such alert.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/alerts_feedback-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AlertFeedback:\n  alert-id: string\n  create-time: string\n  customer-id: string\n  email: string\n  feedback-id: string\n  type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    alert-id=eirmod  Output only. The alert identifier.    create-time=sit  Output only. The time this feedback was created. Assigned by the server.    customer-id=stet  Output only. The unique identifier of the Google account of the customer.    email=sed  Output only. The email of the user that provided the feedback.    feedback-id=et  Output only. A unique identifier for the feedback. When creating a new\n    feedback the system will assign one.    type=dolores  Required. The type of the feedback.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/alerts_feedback-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/alerts_feedback-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/alerts_feedback-create/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p customer-id=string  Optional. The unique identifier of the Google account of the customer the\n    alert s feedback is associated with. This is obfuscated and not the\n    plain customer ID as stored internally. Inferred from the caller identity\n    if not provided.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/alerts_feedback-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/alerts_feedback-list/", 
            "text": "Lists all the feedback for an alert.\n\n\nRequired Scalar Argument\n\n\n\n\nalert-id\n \n(string)\n\n\nRequired. The alert identifier.\n    If the alert does not exist returns a NOT_FOUND error.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p customer-id=string\n\n\nOptional. The unique identifier of the Google account of the customer the\n    alert is associated with. This is obfuscated and not the plain customer\n    ID as stored internally. Inferred from the caller identity if not provided.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Feedback List"
        }, 
        {
            "location": "/alerts_feedback-list/#required-scalar-argument", 
            "text": "alert-id   (string)  Required. The alert identifier.\n    If the alert does not exist returns a NOT_FOUND error.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/alerts_feedback-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/alerts_feedback-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p customer-id=string  Optional. The unique identifier of the Google account of the customer the\n    alert is associated with. This is obfuscated and not the plain customer\n    ID as stored internally. Inferred from the caller identity if not provided.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/alerts_feedback-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/alerts_get/", 
            "text": "Gets the specified alert.\n\n\nRequired Scalar Argument\n\n\n\n\nalert-id\n \n(string)\n\n\nRequired. The identifier of the alert to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p customer-id=string\n\n\nOptional. The unique identifier of the Google account of the customer the\n    alert is associated with. This is obfuscated and not the plain customer\n    ID as stored internally. Inferred from the caller identity if not provided.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/alerts_get/#required-scalar-argument", 
            "text": "alert-id   (string)  Required. The identifier of the alert to retrieve.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/alerts_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/alerts_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p customer-id=string  Optional. The unique identifier of the Google account of the customer the\n    alert is associated with. This is obfuscated and not the plain customer\n    ID as stored internally. Inferred from the caller identity if not provided.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/alerts_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/alerts_list/", 
            "text": "Lists all the alerts for the current user and application.\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p filter=string\n\n\n\n\n\n\nOptional. Query string for filtering alert results.\n    This string must be specified as an expression or list of expressions,\n    using the following grammar:\n\n\nExpressions\n\n\nAn expression has the general form \nlt;field\ngt; \nlt;operator\ngt; \nlt;value\ngt;\n.\n\n\nA field or value which contains a space or a colon must be enclosed by\ndouble quotes.\n\n\nOperators\n\n\nOperators follow the BNF specification:\n\n\nlt;equalityOperator\ngt; ::= \n#34;=\n#34; | \n#34;:\n#34;\n\n\nlt;relationalOperator\ngt; ::= \n#34;\nlt;\n#34; | \n#34;\ngt;\n#34; | \n#34;\nlt;=\n#34; | \n#34;\ngt;=\n#34;\n\n\nRelational operators are defined only for timestamp fields. Equality\noperators are defined only for string fields.\n\n\nTimestamp fields\n\n\nThe value supplied for a timestamp field must be an\n\nRFC 3339\n date-time string.\n\n\nSupported timestamp fields are \ncreate_time\n, \nstart_time\n, and \nend_time\n.\n\n\nString fields\n\n\nThe value supplied for a string field may be an arbitrary string.\n\n\nExamples\n\n\nTo query for all alerts created on or after April 5, 2018:\n\n\ncreate_time \ngt;= \n#34;2018-04-05T00:00:00Z\n#34;\n\n\nTo query for all alerts from the source \nGmail phishing\n:\n\n\nsource:\n#34;Gmail phishing\n#34;\n\n\nJoining expressions\n\n\nExpressions may be joined to form a more complex query. The BNF\nspecification is:\n\n\nlt;expressionList\ngt; ::= \nlt;expression\ngt; | \nlt;expressionList\ngt; \nlt;conjunction\ngt;\n\nlt;expressionList\ngt; | \nlt;negation\ngt; \nlt;expressionList\ngt;\n\n\nlt;conjunction\ngt; ::= \n#34;AND\n#34; | \n#34;OR\n#34; | \n#34;\n#34;\n\n\nlt;negation\ngt; ::= \n#34;NOT\n#34;\n\n\nUsing the empty string as a conjunction acts as an implicit AND.\n\n\nThe precedence of joining operations, from highest to lowest, is NOT, AND,\nOR.\n\n\nExamples\n\n\nTo query for all alerts which started in 2017:\n\n\nstart_time \ngt;= \n#34;2017-01-01T00:00:00Z\n#34; AND start_time \nlt;\n\n#34;2018-01-01T00:00:00Z\n#34;\n\n\nTo query for all user reported phishing alerts from the source\n\nGmail phishing\n:\n\n\ntype:\n#34;User reported phishing\n#34; source:\n#34;Gmail phishing\n#34;\n\n\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nOptional. A token identifying a page of results the server should return.\n    If empty, a new iteration is started. To continue an iteration, pass in\n    the value from the previous ListAlertsResponse\ns next_page_token field.\n\n\n\n\n\n\n\n\n-p customer-id=string\n\n\n\n\nOptional. The unique identifier of the Google account of the customer the\n    alerts are associated with. This is obfuscated and not the plain\n    customer ID as stored internally. Inferred from the caller identity if not\n    provided.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nOptional. Requested page size. Server may return fewer items than\n    requested. If unspecified, server will pick an appropriate default.\n\n\n\n\n\n\n\n\n-p order-by=string\n\n\n\n\nOptional. Sort the list results by a certain order.\n    If not specified results may be returned in arbitrary order.\n    You can sort the results in a descending order based on the creation\n    timestamp using order_by=\ncreate_time desc\n.\n    Currently, only sorting by create_time desc is supported.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/alerts_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/alerts_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p filter=string    Optional. Query string for filtering alert results.\n    This string must be specified as an expression or list of expressions,\n    using the following grammar:", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/alerts_list/#expressions", 
            "text": "An expression has the general form  lt;field gt;  lt;operator gt;  lt;value gt; .  A field or value which contains a space or a colon must be enclosed by\ndouble quotes.", 
            "title": "Expressions"
        }, 
        {
            "location": "/alerts_list/#operators", 
            "text": "Operators follow the BNF specification:  lt;equalityOperator gt; ::=  #34;= #34; |  #34;: #34;  lt;relationalOperator gt; ::=  #34; lt; #34; |  #34; gt; #34; |  #34; lt;= #34; |  #34; gt;= #34;  Relational operators are defined only for timestamp fields. Equality\noperators are defined only for string fields.", 
            "title": "Operators"
        }, 
        {
            "location": "/alerts_list/#timestamp-fields", 
            "text": "The value supplied for a timestamp field must be an RFC 3339  date-time string.  Supported timestamp fields are  create_time ,  start_time , and  end_time .", 
            "title": "Timestamp fields"
        }, 
        {
            "location": "/alerts_list/#string-fields", 
            "text": "The value supplied for a string field may be an arbitrary string.", 
            "title": "String fields"
        }, 
        {
            "location": "/alerts_list/#examples", 
            "text": "To query for all alerts created on or after April 5, 2018:  create_time  gt;=  #34;2018-04-05T00:00:00Z #34;  To query for all alerts from the source  Gmail phishing :  source: #34;Gmail phishing #34;", 
            "title": "Examples"
        }, 
        {
            "location": "/alerts_list/#joining-expressions", 
            "text": "Expressions may be joined to form a more complex query. The BNF\nspecification is:  lt;expressionList gt; ::=  lt;expression gt; |  lt;expressionList gt;  lt;conjunction gt; lt;expressionList gt; |  lt;negation gt;  lt;expressionList gt;  lt;conjunction gt; ::=  #34;AND #34; |  #34;OR #34; |  #34; #34;  lt;negation gt; ::=  #34;NOT #34;  Using the empty string as a conjunction acts as an implicit AND.  The precedence of joining operations, from highest to lowest, is NOT, AND,\nOR.", 
            "title": "Joining expressions"
        }, 
        {
            "location": "/alerts_list/#examples_1", 
            "text": "To query for all alerts which started in 2017:  start_time  gt;=  #34;2017-01-01T00:00:00Z #34; AND start_time  lt; #34;2018-01-01T00:00:00Z #34;  To query for all user reported phishing alerts from the source Gmail phishing :  type: #34;User reported phishing #34; source: #34;Gmail phishing #34;      -p page-token=string   Optional. A token identifying a page of results the server should return.\n    If empty, a new iteration is started. To continue an iteration, pass in\n    the value from the previous ListAlertsResponse s next_page_token field.     -p customer-id=string   Optional. The unique identifier of the Google account of the customer the\n    alerts are associated with. This is obfuscated and not the plain\n    customer ID as stored internally. Inferred from the caller identity if not\n    provided.     -p page-size=integer   Optional. Requested page size. Server may return fewer items than\n    requested. If unspecified, server will pick an appropriate default.     -p order-by=string   Optional. Sort the list results by a certain order.\n    If not specified results may be returned in arbitrary order.\n    You can sort the results in a descending order based on the creation\n    timestamp using order_by= create_time desc .\n    Currently, only sorting by create_time desc is supported.", 
            "title": "Examples"
        }, 
        {
            "location": "/alerts_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}