initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"fn":[["remove_json_null_values",""]],"struct":[["AdmissionRule","An admission rule specifies either that all container images used in a pod creation request must be attested to by one or more attestors, that all pod creations will be allowed, or that all pod creations will be denied."],["AdmissionWhitelistPattern","An admission whitelist pattern exempts images from checks by admission rules."],["Attestor","An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated."],["AttestorPublicKey","An attestor public key that will be used to verify attestations signed by this attestor."],["BinaryAuthorization","Central instance to access all BinaryAuthorization related resource activities"],["Binding","Associates `members` with a `role`."],["Chunk",""],["ContentRange","Implements the Content-Range header, for serialization only"],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DummyNetworkStream",""],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:"],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["Expr","Represents an expression text. Example:"],["IamPolicy","Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources."],["JsonServerError","A utility type which can decode a server response that indicates error"],["ListAttestorsResponse","Response message for BinauthzManagementService.ListAttestors."],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. Note: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["PkixPublicKey","A public key in the PkixPublicKey format (see https://tools.ietf.org/html/rfc5280#section-4.1.2.7 for details). Public keys of this type are typically textually encoded using the PEM format."],["Policy","A policy for container image binary authorization."],["ProjectAttestorCreateCall","Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND if the project does not exist, INVALID_ARGUMENT if the request is malformed, ALREADY_EXISTS if the attestor already exists."],["ProjectAttestorDeleteCall","Deletes an attestor. Returns NOT_FOUND if the attestor does not exist."],["ProjectAttestorGetCall","Gets an attestor. Returns NOT_FOUND if the attestor does not exist."],["ProjectAttestorGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectAttestorListCall","Lists attestors. Returns INVALID_ARGUMENT if the project does not exist."],["ProjectAttestorSetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectAttestorTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectAttestorUpdateCall","Updates an attestor. Returns NOT_FOUND if the attestor does not exist."],["ProjectGetPolicyCall","A policy specifies the attestors that must attest to a container image, before the project is allowed to deploy that image. There is at most one policy per project. All image admission requests are permitted if a project has no policy."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `BinaryAuthorization` hub."],["ProjectPolicyGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectPolicySetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectPolicyTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectUpdatePolicyCall","Creates or updates a project's policy, and returns a copy of the new policy. A policy is always updated as a whole, to avoid race conditions with concurrent policy enforcement (or management!) requests. Returns NOT_FOUND if the project does not exist, INVALID_ARGUMENT if the request is malformed."],["RangeResponseHeader",""],["ResumableUploadHelper","A utility type to perform a resumable upload from start to end."],["ServerError",""],["ServerMessage",""],["SetIamPolicyRequest","Request message for `SetIamPolicy` method."],["TestIamPermissionsRequest","Request message for `TestIamPermissions` method."],["TestIamPermissionsResponse","Response message for `TestIamPermissions` method."],["UserOwnedDrydockNote","An user owned drydock note references a Drydock ATTESTATION_AUTHORITY Note created by the user."],["XUploadContentType","The `X-Upload-Content-Type` header."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a parts string"],["UnusedType","Identifies types which are not actually used by the API This might be a bug within the google API schema."]],"type":[["Result","A universal result type used as return for all calls."]]});