{
    "docs": [
        {
            "location": "/", 
            "text": "The \ntexttospeech1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Texttospeech\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nTexttospeech\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-texttospeech1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nTexttospeech\n API at revision \n20190628\n. The CLI is at version \n1.0.10\n.\n\n\ntexttospeech1 [options]\n        text\n                synthesize (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        voices\n                list [-p \nv\n]... [-o \nout\n]\n  texttospeech1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ntexttospeech1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/texttospeech1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/texttospeech1-secret.json\n, assuming that the required \ntexttospeech\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ntexttospeech1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-texttospeech1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Texttospeech  API at revision  20190628 . The CLI is at version  1.0.10 .  texttospeech1 [options]\n        text\n                synthesize (-r  kv )... [-p  v ]... [-o  out ]\n        voices\n                list [-p  v ]... [-o  out ]\n  texttospeech1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  texttospeech1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/texttospeech1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/texttospeech1-secret.json , assuming that the required  texttospeech  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  texttospeech1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/text_synthesize/", 
            "text": "Synthesizes speech synchronously: receive results after all text input\nhas been processed.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ntexttospeech1 --scope \nscope\n text synthesize ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nSynthesizeSpeechRequest:\n  audio-config:\n    audio-encoding: string\n    effects-profile-id: [string]\n    pitch: number\n    sample-rate-hertz: integer\n    speaking-rate: number\n    volume-gain-db: number\n  input:\n    ssml: string\n    text: string\n  voice:\n    language-code: string\n    name: string\n    ssml-gender: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .audio-config    audio-encoding=eirmod\n\n\nRequired. The format of the audio byte stream.\n\n\n\n\n\n\neffects-profile-id=sit\n\n\nOptional. Input only. An identifier which selects \naudio effects\n profiles\n    that are applied on (post synthesized) text to speech. Effects are applied\n    on top of each other in the order they are given. See\n    \naudio\n    profiles\n for\n    current supported profile ids.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\npitch=0.365848359249\n\n\nOptional. Input only. Speaking pitch, in the range [-20.0, 20.0]. 20 means\n    increase 20 semitones from the original pitch. -20 means decrease 20\n    semitones from the original pitch.\n\n\n\n\n\n\nsample-rate-hertz=59\n\n\nThe synthesis sample rate (in hertz) for this audio. Optional. When this is\n    specified in SynthesizeSpeechRequest, if this is different from the voice\ns\n    natural sample rate, then the synthesizer will honor this request by\n    converting to the desired sample rate (which might result in worse audio\n    quality), unless the specified sample rate is not supported for the\n    encoding chosen, in which case it will fail the request and return\n    google.rpc.Code.INVALID_ARGUMENT.\n\n\n\n\n\n\nspeaking-rate=0.165687283689\n\n\nOptional. Input only. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is\n    the normal native speed supported by the specific voice. 2.0 is twice as\n    fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0\n    speed. Any other values \n 0.25 or \n 4.0 will return an error.\n\n\n\n\n\n\n\n\nvolume-gain-db=0.824373746908\n\n\n\n\nOptional. Input only. Volume gain (in dB) of the normal native volume\n    supported by the specific voice, in the range [-96.0, 16.0]. If unset, or\n    set to a value of 0.0 (dB), will play at normal native signal amplitude. A\n    value of -6.0 (dB) will play at approximately half the amplitude of the\n    normal native signal amplitude. A value of +6.0 (dB) will play at\n    approximately twice the amplitude of the normal native signal amplitude.\n    Strongly recommend not to exceed +10 (dB) as there\ns usually no effective\n    increase in loudness for any value greater than that.\n\n\n\n\n\n\n\n\n..input    ssml=kasd\n\n\n\n\nThe SSML document to be synthesized. The SSML document must be valid\n    and well-formed. Otherwise the RPC will fail and return\n    google.rpc.Code.INVALID_ARGUMENT. For more information, see\n    \nSSML\n.\n\n\n\n\n\n\n\n\ntext=accusam\n\n\n\n\nThe raw text to be synthesized.\n\n\n\n\n\n\n\n\n..voice    language-code=takimata\n\n\n\n\nThe language (and optionally also the region) of the voice expressed as a\n    \nBCP-47\n language tag, e.g.\n    \nen-US\n. Required. This should not include a script tag (e.g. use\n    \ncmn-cn\n rather than \ncmn-Hant-cn\n), because the script will be inferred\n    from the input provided in the SynthesisInput.  The TTS service\n    will use this parameter to help choose an appropriate voice.  Note that\n    the TTS service may choose a voice with a slightly different language code\n    than the one selected; it may substitute a different region\n    (e.g. using en-US rather than en-CA if there isn\nt a Canadian voice\n    available), or even a different language, e.g. using \nnb\n (Norwegian\n    Bokmal) instead of \nno\n (Norwegian)\n.\n\n\n\n\n\n\nname=justo\n\n\nThe name of the voice. Optional; if not set, the service will choose a\n    voice based on the other parameters such as language_code and gender.\n\n\n\n\n\n\nssml-gender=amet.\n\n\nThe preferred gender of the voice. Optional; if not set, the service will\n    choose a voice based on the other parameters such as language_code and\n    name. Note that this is only a preference, not requirement; if a\n    voice of the appropriate gender is not available, the synthesizer should\n    substitute a voice with a different gender rather than failing the request.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Synthesize"
        }, 
        {
            "location": "/text_synthesize/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  texttospeech1 --scope  scope  text synthesize ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/text_synthesize/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  SynthesizeSpeechRequest:\n  audio-config:\n    audio-encoding: string\n    effects-profile-id: [string]\n    pitch: number\n    sample-rate-hertz: integer\n    speaking-rate: number\n    volume-gain-db: number\n  input:\n    ssml: string\n    text: string\n  voice:\n    language-code: string\n    name: string\n    ssml-gender: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .audio-config    audio-encoding=eirmod  Required. The format of the audio byte stream.    effects-profile-id=sit  Optional. Input only. An identifier which selects  audio effects  profiles\n    that are applied on (post synthesized) text to speech. Effects are applied\n    on top of each other in the order they are given. See\n     audio\n    profiles  for\n    current supported profile ids.  Each invocation of this argument appends the given value to the array.    pitch=0.365848359249  Optional. Input only. Speaking pitch, in the range [-20.0, 20.0]. 20 means\n    increase 20 semitones from the original pitch. -20 means decrease 20\n    semitones from the original pitch.    sample-rate-hertz=59  The synthesis sample rate (in hertz) for this audio. Optional. When this is\n    specified in SynthesizeSpeechRequest, if this is different from the voice s\n    natural sample rate, then the synthesizer will honor this request by\n    converting to the desired sample rate (which might result in worse audio\n    quality), unless the specified sample rate is not supported for the\n    encoding chosen, in which case it will fail the request and return\n    google.rpc.Code.INVALID_ARGUMENT.    speaking-rate=0.165687283689  Optional. Input only. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is\n    the normal native speed supported by the specific voice. 2.0 is twice as\n    fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0\n    speed. Any other values   0.25 or   4.0 will return an error.     volume-gain-db=0.824373746908   Optional. Input only. Volume gain (in dB) of the normal native volume\n    supported by the specific voice, in the range [-96.0, 16.0]. If unset, or\n    set to a value of 0.0 (dB), will play at normal native signal amplitude. A\n    value of -6.0 (dB) will play at approximately half the amplitude of the\n    normal native signal amplitude. A value of +6.0 (dB) will play at\n    approximately twice the amplitude of the normal native signal amplitude.\n    Strongly recommend not to exceed +10 (dB) as there s usually no effective\n    increase in loudness for any value greater than that.     ..input    ssml=kasd   The SSML document to be synthesized. The SSML document must be valid\n    and well-formed. Otherwise the RPC will fail and return\n    google.rpc.Code.INVALID_ARGUMENT. For more information, see\n     SSML .     text=accusam   The raw text to be synthesized.     ..voice    language-code=takimata   The language (and optionally also the region) of the voice expressed as a\n     BCP-47  language tag, e.g.\n     en-US . Required. This should not include a script tag (e.g. use\n     cmn-cn  rather than  cmn-Hant-cn ), because the script will be inferred\n    from the input provided in the SynthesisInput.  The TTS service\n    will use this parameter to help choose an appropriate voice.  Note that\n    the TTS service may choose a voice with a slightly different language code\n    than the one selected; it may substitute a different region\n    (e.g. using en-US rather than en-CA if there isn t a Canadian voice\n    available), or even a different language, e.g. using  nb  (Norwegian\n    Bokmal) instead of  no  (Norwegian) .    name=justo  The name of the voice. Optional; if not set, the service will choose a\n    voice based on the other parameters such as language_code and gender.    ssml-gender=amet.  The preferred gender of the voice. Optional; if not set, the service will\n    choose a voice based on the other parameters such as language_code and\n    name. Note that this is only a preference, not requirement; if a\n    voice of the appropriate gender is not available, the synthesizer should\n    substitute a voice with a different gender rather than failing the request.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/text_synthesize/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/text_synthesize/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/text_synthesize/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/voices_list/", 
            "text": "Returns a list of Voice supported for synthesis.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ntexttospeech1 --scope \nscope\n voices list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p language-code=string\n\n\nOptional (but recommended)\n    \nBCP-47\n language tag. If\n    specified, the ListVoices call will only return voices that can be used to\n    synthesize this language_code. E.g. when specifying \nen-NZ\n, you will get\n    supported \nen-\n voices; when specifying \nno\n, you will get supported\n    \nno-\n (Norwegian) and \nnb-\n (Norwegian Bokmal) voices; specifying \nzh\n\n    will also get supported \ncmn-\n voices; specifying \nzh-hk\n will also get\n    supported \nyue-*\n voices.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/voices_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  texttospeech1 --scope  scope  voices list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/voices_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/voices_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p language-code=string  Optional (but recommended)\n     BCP-47  language tag. If\n    specified, the ListVoices call will only return voices that can be used to\n    synthesize this language_code. E.g. when specifying  en-NZ , you will get\n    supported  en-  voices; when specifying  no , you will get supported\n     no-  (Norwegian) and  nb-  (Norwegian Bokmal) voices; specifying  zh \n    will also get supported  cmn-  voices; specifying  zh-hk  will also get\n    supported  yue-*  voices.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/voices_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}