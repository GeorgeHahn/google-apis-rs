{
    "docs": [
        {
            "location": "/", 
            "text": "The \ndoubleclicksearch2\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle doubleclicksearch\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \ndoubleclicksearch\n API can be found at the\n\nofficial documentation site\n.\n\n\nDownloads\n\n\nYou can download the pre-compiled 64bit binaries for the following platforms:\n\n\n\n\n \nubuntu\n\n\n \nosx\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \ndoubleclicksearch\n API at revision \n20160401\n. The CLI is at version \n0.3.5\n.\n\n\ndoubleclicksearch2 [options]\n        conversion\n                get \nagency-id\n \nadvertiser-id\n \nengine-account-id\n \nend-date\n \nrow-count\n \nstart-date\n \nstart-row\n [-p \nv\n]... [-o \nout\n]\n                insert (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                patch \nadvertiser-id\n \nagency-id\n \nend-date\n \nengine-account-id\n \nrow-count\n \nstart-date\n \nstart-row\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update-availability (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        reports\n                generate (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                get \nreport-id\n [-p \nv\n]... [-o \nout\n]\n                get-file \nreport-id\n \nreport-fragment\n [-p \nv\n]... [-o \nout\n]\n                request (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        saved-columns\n                list \nagency-id\n \nadvertiser-id\n [-p \nv\n]... [-o \nout\n]\n  doubleclicksearch2 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ndoubleclicksearch2-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/doubleclicksearch2-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/doubleclicksearch2-secret.json\n, assuming that the required \ndoubleclicksearch\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ndoubleclicksearch2 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#downloads", 
            "text": "You can download the pre-compiled 64bit binaries for the following platforms:     ubuntu    osx   Find the source code  on github .", 
            "title": "Downloads"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  doubleclicksearch  API at revision  20160401 . The CLI is at version  0.3.5 .  doubleclicksearch2 [options]\n        conversion\n                get  agency-id   advertiser-id   engine-account-id   end-date   row-count   start-date   start-row  [-p  v ]... [-o  out ]\n                insert (-r  kv )... [-p  v ]... [-o  out ]\n                patch  advertiser-id   agency-id   end-date   engine-account-id   row-count   start-date   start-row  (-r  kv )... [-p  v ]... [-o  out ]\n                update (-r  kv )... [-p  v ]... [-o  out ]\n                update-availability (-r  kv )... [-p  v ]... [-o  out ]\n        reports\n                generate (-r  kv )... [-p  v ]... [-o  out ]\n                get  report-id  [-p  v ]... [-o  out ]\n                get-file  report-id   report-fragment  [-p  v ]... [-o  out ]\n                request (-r  kv )... [-p  v ]... [-o  out ]\n        saved-columns\n                list  agency-id   advertiser-id  [-p  v ]... [-o  out ]\n  doubleclicksearch2 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  doubleclicksearch2- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/doubleclicksearch2-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/doubleclicksearch2-secret.json , assuming that the required  doubleclicksearch  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  doubleclicksearch2 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/conversion_get/", 
            "text": "Retrieves a list of conversions from a DoubleClick Search engine account.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n conversion get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nagency-id\n \n(string)\n\n\nNumeric ID of the agency.\n\n\n\n\n\n\nadvertiser-id\n \n(string)\n\n\nNumeric ID of the advertiser.\n\n\n\n\n\n\nengine-account-id\n \n(string)\n\n\nNumeric ID of the engine account.\n\n\n\n\n\n\nend-date\n \n(integer)\n\n\nLast date (inclusive) on which to retrieve conversions. Format is yyyymmdd.\n\n\n\n\n\n\nrow-count\n \n(integer)\n\n\nThe number of conversions to return per call.\n\n\n\n\n\n\nstart-date\n \n(integer)\n\n\nFirst date (inclusive) on which to retrieve conversions. Format is yyyymmdd.\n\n\n\n\n\n\nstart-row\n \n(integer)\n\n\nThe 0-based starting index for retrieving conversions results.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p ad-group-id=string\n\n\n\n\nNumeric ID of the ad group.\n\n\n\n\n\n\n\n\n-p criterion-id=string\n\n\n\n\nNumeric ID of the criterion.\n\n\n\n\n\n\n\n\n-p campaign-id=string\n\n\n\n\nNumeric ID of the campaign.\n\n\n\n\n\n\n\n\n-p ad-id=string\n\n\n\n\nNumeric ID of the ad.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/conversion_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  conversion get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/conversion_get/#required-scalar-arguments", 
            "text": "agency-id   (string)  Numeric ID of the agency.    advertiser-id   (string)  Numeric ID of the advertiser.    engine-account-id   (string)  Numeric ID of the engine account.    end-date   (integer)  Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.    row-count   (integer)  The number of conversions to return per call.    start-date   (integer)  First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.    start-row   (integer)  The 0-based starting index for retrieving conversions results.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/conversion_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/conversion_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p ad-group-id=string   Numeric ID of the ad group.     -p criterion-id=string   Numeric ID of the criterion.     -p campaign-id=string   Numeric ID of the campaign.     -p ad-id=string   Numeric ID of the ad.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/conversion_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/conversion_insert/", 
            "text": "Inserts a batch of new conversions into DoubleClick Search.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n conversion insert ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nConversionList:\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    kind=eirmod\n\n\nIdentifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/conversion_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  conversion insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/conversion_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ConversionList:\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    kind=eirmod  Identifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/conversion_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/conversion_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/conversion_patch/", 
            "text": "Updates a batch of conversions in DoubleClick Search. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n conversion patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nadvertiser-id\n \n(string)\n\n\nNumeric ID of the advertiser.\n\n\n\n\n\n\nagency-id\n \n(string)\n\n\nNumeric ID of the agency.\n\n\n\n\n\n\nend-date\n \n(integer)\n\n\nLast date (inclusive) on which to retrieve conversions. Format is yyyymmdd.\n\n\n\n\n\n\nengine-account-id\n \n(string)\n\n\nNumeric ID of the engine account.\n\n\n\n\n\n\nrow-count\n \n(integer)\n\n\nThe number of conversions to return per call.\n\n\n\n\n\n\nstart-date\n \n(integer)\n\n\nFirst date (inclusive) on which to retrieve conversions. Format is yyyymmdd.\n\n\n\n\n\n\nstart-row\n \n(integer)\n\n\nThe 0-based starting index for retrieving conversions results.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nConversionList:\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    kind=sit\n\n\nIdentifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Patch"
        }, 
        {
            "location": "/conversion_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  conversion patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/conversion_patch/#required-scalar-arguments", 
            "text": "advertiser-id   (string)  Numeric ID of the advertiser.    agency-id   (string)  Numeric ID of the agency.    end-date   (integer)  Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.    engine-account-id   (string)  Numeric ID of the engine account.    row-count   (integer)  The number of conversions to return per call.    start-date   (integer)  First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.    start-row   (integer)  The 0-based starting index for retrieving conversions results.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/conversion_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ConversionList:\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    kind=sit  Identifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/conversion_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/conversion_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/conversion_update/", 
            "text": "Updates a batch of conversions in DoubleClick Search.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n conversion update ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nConversionList:\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    kind=stet\n\n\nIdentifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update"
        }, 
        {
            "location": "/conversion_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  conversion update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/conversion_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ConversionList:\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    kind=stet  Identifies this as a ConversionList resource. Value: the fixed string doubleclicksearch#conversionList.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/conversion_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/conversion_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/conversion_update-availability/", 
            "text": "Updates the availabilities of a batch of floodlight activities in DoubleClick Search.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n conversion update-availability ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nUpdateAvailabilityRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update Availability"
        }, 
        {
            "location": "/conversion_update-availability/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  conversion update-availability ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/conversion_update-availability/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  UpdateAvailabilityRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.  About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/conversion_update-availability/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/conversion_update-availability/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/reports_generate/", 
            "text": "Generates and returns a report immediately.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n reports generate ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nReportRequest:\n  download-format: string\n  include-deleted-entities: boolean\n  include-removed-entities: boolean\n  max-rows-per-file: integer\n  report-scope:\n    ad-group-id: string\n    ad-id: string\n    advertiser-id: string\n    agency-id: string\n    campaign-id: string\n    engine-account-id: string\n    keyword-id: string\n  report-type: string\n  row-count: integer\n  start-row: integer\n  statistics-currency: string\n  time-range:\n    changed-attributes-since-timestamp: string\n    changed-metrics-since-timestamp: string\n    end-date: string\n    start-date: string\n  verify-single-time-zone: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    download-format=sed\n\n\nFormat that the report should be returned in. Currently csv or tsv is supported.\n\n\n\n\n\n\ninclude-deleted-entities=false\n\n\nDetermines if removed entities should be included in the report. Defaults to false. Deprecated, please use includeRemovedEntities instead.\n\n\n\n\n\n\ninclude-removed-entities=true\n\n\nDetermines if removed entities should be included in the report. Defaults to false.\n\n\n\n\n\n\nmax-rows-per-file=38\n\n\nAsynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000, inclusive.\n\n\n\n\n\n\nreport-scope    ad-group-id=accusam\n\n\nDS ad group ID.\n\n\n\n\n\n\nad-id=takimata\n\n\nDS ad ID.\n\n\n\n\n\n\nadvertiser-id=justo\n\n\nDS advertiser ID.\n\n\n\n\n\n\nagency-id=amet.\n\n\nDS agency ID.\n\n\n\n\n\n\ncampaign-id=erat\n\n\nDS campaign ID.\n\n\n\n\n\n\nengine-account-id=labore\n\n\nDS engine account ID.\n\n\n\n\n\n\n\n\nkeyword-id=sea\n\n\n\n\nDS keyword ID.\n\n\n\n\n\n\n\n\n..    report-type=nonumy\n\n\n\n\nDetermines the type of rows that are returned in the report. For example, if you specify reportType: keyword, each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type.\n\n\n\n\n\n\nrow-count=82\n\n\nSynchronous report only. The maxinum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000, inclusive. Defaults to 10000.\n\n\n\n\n\n\nstart-row=40\n\n\nSynchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000, inclusive. Defaults to 0.\n\n\n\n\n\n\nstatistics-currency=sadipscing\n\n\nSpecifies the currency in which monetary will be returned. Possible values are: usd, agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower).\n\n\n\n\n\n\ntime-range    changed-attributes-since-timestamp=aliquyam\n\n\nInclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed attribute reports work.\n\n\n\n\n\n\nchanged-metrics-since-timestamp=ea\n\n\nInclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed metrics reports work.\n\n\n\n\n\n\nend-date=no\n\n\nInclusive date in YYYY-MM-DD format.\n\n\n\n\n\n\n\n\nstart-date=justo\n\n\n\n\nInclusive date in YYYY-MM-DD format.\n\n\n\n\n\n\n\n\n..    verify-single-time-zone=true\n\n\n\n\nIf true, the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Generate"
        }, 
        {
            "location": "/reports_generate/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  reports generate ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/reports_generate/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ReportRequest:\n  download-format: string\n  include-deleted-entities: boolean\n  include-removed-entities: boolean\n  max-rows-per-file: integer\n  report-scope:\n    ad-group-id: string\n    ad-id: string\n    advertiser-id: string\n    agency-id: string\n    campaign-id: string\n    engine-account-id: string\n    keyword-id: string\n  report-type: string\n  row-count: integer\n  start-row: integer\n  statistics-currency: string\n  time-range:\n    changed-attributes-since-timestamp: string\n    changed-metrics-since-timestamp: string\n    end-date: string\n    start-date: string\n  verify-single-time-zone: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    download-format=sed  Format that the report should be returned in. Currently csv or tsv is supported.    include-deleted-entities=false  Determines if removed entities should be included in the report. Defaults to false. Deprecated, please use includeRemovedEntities instead.    include-removed-entities=true  Determines if removed entities should be included in the report. Defaults to false.    max-rows-per-file=38  Asynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000, inclusive.    report-scope    ad-group-id=accusam  DS ad group ID.    ad-id=takimata  DS ad ID.    advertiser-id=justo  DS advertiser ID.    agency-id=amet.  DS agency ID.    campaign-id=erat  DS campaign ID.    engine-account-id=labore  DS engine account ID.     keyword-id=sea   DS keyword ID.     ..    report-type=nonumy   Determines the type of rows that are returned in the report. For example, if you specify reportType: keyword, each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type.    row-count=82  Synchronous report only. The maxinum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000, inclusive. Defaults to 10000.    start-row=40  Synchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000, inclusive. Defaults to 0.    statistics-currency=sadipscing  Specifies the currency in which monetary will be returned. Possible values are: usd, agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower).    time-range    changed-attributes-since-timestamp=aliquyam  Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed attribute reports work.    changed-metrics-since-timestamp=ea  Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed metrics reports work.    end-date=no  Inclusive date in YYYY-MM-DD format.     start-date=justo   Inclusive date in YYYY-MM-DD format.     ..    verify-single-time-zone=true   If true, the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/reports_generate/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/reports_generate/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/reports_get/", 
            "text": "Polls for the status of a report request.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n reports get ...\n\n\nRequired Scalar Argument\n\n\n\n\nreport-id\n \n(string)\n\n\nID of the report request being polled.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/reports_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  reports get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/reports_get/#required-scalar-argument", 
            "text": "report-id   (string)  ID of the report request being polled.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/reports_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/reports_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/reports_get-file/", 
            "text": "Downloads a report file encoded in UTF-8.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n reports get-file ...\n\n\nRequired Scalar Arguments\n\n\n\n\nreport-id\n \n(string)\n\n\nID of the report.\n\n\n\n\n\n\nreport-fragment\n \n(integer)\n\n\nThe index of the report fragment to download.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value is a byte stream of the downloadable resource.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a byte stream of the downloadable resource.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get File"
        }, 
        {
            "location": "/reports_get-file/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  reports get-file ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/reports_get-file/#required-scalar-arguments", 
            "text": "report-id   (string)  ID of the report.    report-fragment   (integer)  The index of the report fragment to download.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/reports_get-file/#optional-output-flags", 
            "text": "The method's return value is a byte stream of the downloadable resource.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a byte stream of the downloadable resource.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/reports_get-file/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/reports_request/", 
            "text": "Inserts a report request into the reporting system.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n reports request ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nReportRequest:\n  download-format: string\n  include-deleted-entities: boolean\n  include-removed-entities: boolean\n  max-rows-per-file: integer\n  report-scope:\n    ad-group-id: string\n    ad-id: string\n    advertiser-id: string\n    agency-id: string\n    campaign-id: string\n    engine-account-id: string\n    keyword-id: string\n  report-type: string\n  row-count: integer\n  start-row: integer\n  statistics-currency: string\n  time-range:\n    changed-attributes-since-timestamp: string\n    changed-metrics-since-timestamp: string\n    end-date: string\n    start-date: string\n  verify-single-time-zone: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    download-format=et\n\n\nFormat that the report should be returned in. Currently csv or tsv is supported.\n\n\n\n\n\n\ninclude-deleted-entities=true\n\n\nDetermines if removed entities should be included in the report. Defaults to false. Deprecated, please use includeRemovedEntities instead.\n\n\n\n\n\n\ninclude-removed-entities=true\n\n\nDetermines if removed entities should be included in the report. Defaults to false.\n\n\n\n\n\n\nmax-rows-per-file=46\n\n\nAsynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000, inclusive.\n\n\n\n\n\n\nreport-scope    ad-group-id=lorem\n\n\nDS ad group ID.\n\n\n\n\n\n\nad-id=et\n\n\nDS ad ID.\n\n\n\n\n\n\nadvertiser-id=duo\n\n\nDS advertiser ID.\n\n\n\n\n\n\nagency-id=aliquyam\n\n\nDS agency ID.\n\n\n\n\n\n\ncampaign-id=sea\n\n\nDS campaign ID.\n\n\n\n\n\n\nengine-account-id=lorem\n\n\nDS engine account ID.\n\n\n\n\n\n\n\n\nkeyword-id=eos\n\n\n\n\nDS keyword ID.\n\n\n\n\n\n\n\n\n..    report-type=erat\n\n\n\n\nDetermines the type of rows that are returned in the report. For example, if you specify reportType: keyword, each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type.\n\n\n\n\n\n\nrow-count=6\n\n\nSynchronous report only. The maxinum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000, inclusive. Defaults to 10000.\n\n\n\n\n\n\nstart-row=53\n\n\nSynchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000, inclusive. Defaults to 0.\n\n\n\n\n\n\nstatistics-currency=eirmod\n\n\nSpecifies the currency in which monetary will be returned. Possible values are: usd, agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower).\n\n\n\n\n\n\ntime-range    changed-attributes-since-timestamp=elitr\n\n\nInclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed attribute reports work.\n\n\n\n\n\n\nchanged-metrics-since-timestamp=amet\n\n\nInclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed metrics reports work.\n\n\n\n\n\n\nend-date=no\n\n\nInclusive date in YYYY-MM-DD format.\n\n\n\n\n\n\n\n\nstart-date=labore\n\n\n\n\nInclusive date in YYYY-MM-DD format.\n\n\n\n\n\n\n\n\n..    verify-single-time-zone=true\n\n\n\n\nIf true, the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Request"
        }, 
        {
            "location": "/reports_request/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  reports request ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/reports_request/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ReportRequest:\n  download-format: string\n  include-deleted-entities: boolean\n  include-removed-entities: boolean\n  max-rows-per-file: integer\n  report-scope:\n    ad-group-id: string\n    ad-id: string\n    advertiser-id: string\n    agency-id: string\n    campaign-id: string\n    engine-account-id: string\n    keyword-id: string\n  report-type: string\n  row-count: integer\n  start-row: integer\n  statistics-currency: string\n  time-range:\n    changed-attributes-since-timestamp: string\n    changed-metrics-since-timestamp: string\n    end-date: string\n    start-date: string\n  verify-single-time-zone: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    download-format=et  Format that the report should be returned in. Currently csv or tsv is supported.    include-deleted-entities=true  Determines if removed entities should be included in the report. Defaults to false. Deprecated, please use includeRemovedEntities instead.    include-removed-entities=true  Determines if removed entities should be included in the report. Defaults to false.    max-rows-per-file=46  Asynchronous report only. The maximum number of rows per report file. A large report is split into many files based on this field. Acceptable values are 1000000 to 100000000, inclusive.    report-scope    ad-group-id=lorem  DS ad group ID.    ad-id=et  DS ad ID.    advertiser-id=duo  DS advertiser ID.    agency-id=aliquyam  DS agency ID.    campaign-id=sea  DS campaign ID.    engine-account-id=lorem  DS engine account ID.     keyword-id=eos   DS keyword ID.     ..    report-type=erat   Determines the type of rows that are returned in the report. For example, if you specify reportType: keyword, each row in the report will contain data about a keyword. See the Types of Reports reference for the columns that are available for each type.    row-count=6  Synchronous report only. The maxinum number of rows to return; additional rows are dropped. Acceptable values are 0 to 10000, inclusive. Defaults to 10000.    start-row=53  Synchronous report only. Zero-based index of the first row to return. Acceptable values are 0 to 50000, inclusive. Defaults to 0.    statistics-currency=eirmod  Specifies the currency in which monetary will be returned. Possible values are: usd, agency (valid if the report is scoped to agency or lower), advertiser (valid if the report is scoped to * advertiser or lower), or account (valid if the report is scoped to engine account or lower).    time-range    changed-attributes-since-timestamp=elitr  Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed attribute reports work.    changed-metrics-since-timestamp=amet  Inclusive UTC timestamp in RFC format, e.g., 2013-07-16T10:16:23.555Z. See additional references on how changed metrics reports work.    end-date=no  Inclusive date in YYYY-MM-DD format.     start-date=labore   Inclusive date in YYYY-MM-DD format.     ..    verify-single-time-zone=true   If true, the report would only be created if all the requested stat data are sourced from a single timezone. Defaults to false.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/reports_request/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/reports_request/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/saved-columns_list/", 
            "text": "Retrieve the list of saved columns for a specified advertiser.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/doubleclicksearch\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/doubleclicksearch\n.\nYou can set the scope for this method like this: \ndoubleclicksearch2 --scope \nscope\n saved-columns list ...\n\n\nRequired Scalar Arguments\n\n\n\n\nagency-id\n \n(string)\n\n\nDS ID of the agency.\n\n\n\n\n\n\nadvertiser-id\n \n(string)\n\n\nDS ID of the advertiser.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/saved-columns_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/doubleclicksearch  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/doubleclicksearch .\nYou can set the scope for this method like this:  doubleclicksearch2 --scope  scope  saved-columns list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/saved-columns_list/#required-scalar-arguments", 
            "text": "agency-id   (string)  DS ID of the agency.    advertiser-id   (string)  DS ID of the advertiser.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/saved-columns_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/saved-columns_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}