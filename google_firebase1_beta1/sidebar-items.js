initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"fn":[["remove_json_null_values",""]],"struct":[["AddFirebaseRequest","All fields are required."],["AdminSdkConfig","There is no detailed description."],["AndroidApp","Details of a Firebase App for Android."],["AndroidAppConfig","Configuration metadata of a single Firebase App for Android."],["AvailableProjectListCall","Returns a list of [Google Cloud Platform (GCP) `Projects`] (https://cloud.google.com/resource-manager/reference/rest/v1/projects) that are available to have Firebase resources added to them.  A GCP `Project` will only be returned if:"],["AvailableProjectMethods","A builder providing access to all methods supported on availableProject resources. It is not used directly, but through the `FirebaseManagement` hub."],["Chunk",""],["ContentRange","Implements the Content-Range header, for serialization only"],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DefaultResources","The default resources associated with a `FirebaseProject`."],["DummyNetworkStream",""],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:"],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["FinalizeDefaultLocationRequest","There is no detailed description."],["FirebaseAppInfo","A high-level summary of an App."],["FirebaseManagement","Central instance to access all FirebaseManagement related resource activities"],["FirebaseProject","A `FirebaseProject` is the top-level Firebase entity. It is the container for Firebase Apps, Firebase Hosting sites, storage systems (Firebase Realtime Database, Cloud Firestore, Cloud Storage buckets) and other Firebase and Google Cloud Platform (GCP) resources.  You can create a new `FirebaseProject` in the Firebase console, or you can add Firebase resources to an existing GCP `Project` by calling AddFirebase.  A `FirebaseProject` is actually also a GCP `Project`, so a `FirebaseProject` uses underlying GCP identifiers (most importantly, `projectId`) as its own for easy interop with GCP APIs."],["IosApp","Details of a Firebase App for iOS."],["IosAppConfig","Configuration metadata of a single Firebase App for iOS."],["JsonServerError","A utility type which can decode a server response that indicates error"],["ListAndroidAppsResponse","There is no detailed description."],["ListAvailableLocationsResponse","There is no detailed description."],["ListAvailableProjectsResponse","There is no detailed description."],["ListFirebaseProjectsResponse","There is no detailed description."],["ListIosAppsResponse","There is no detailed description."],["ListShaCertificatesResponse","There is no detailed description."],["ListWebAppsResponse","There is no detailed description."],["Location","A GCP resource location that can be selected for a Project."],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. Note: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Operation","This resource represents a long-running operation that is the result of a network API call."],["OperationGetCall","Gets the latest state of a long-running operation.  Clients can use this method to poll the operation result at intervals as recommended by the API service."],["OperationMethods","A builder providing access to all methods supported on operation resources. It is not used directly, but through the `FirebaseManagement` hub."],["ProjectAddFirebaseCall","Adds Firebase resources to the specified existing [Google Cloud Platform (GCP) `Project`] (https://cloud.google.com/resource-manager/reference/rest/v1/projects).  Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` uses underlying GCP identifiers (most importantly, the `projectId`) as its own for easy interop with GCP APIs.  The result of this call is an `Operation`. Poll the `Operation` to track the provisioning process by calling GetOperation until `done` is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation` succeeded, its `response` is set to a FirebaseProject; if the `Operation` failed, its `error` is set to a google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call DeleteOperation.  This method does not modify any billing account information on the underlying GCP `Project`.  All fields listed in the request body are required.  To call `AddFirebase`, a member must be an Editor or Owner for the existing GCP `Project`. Service accounts cannot call `AddFirebase`."],["ProjectAndroidAppCreateCall","Requests that a new AndroidApp be created.  The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`."],["ProjectAndroidAppGetCall","Gets the AndroidApp identified by the specified resource name."],["ProjectAndroidAppGetConfigCall","Gets the configuration artifact associated with the specified AndroidApp."],["ProjectAndroidAppListCall","Lists each AndroidApp associated with the specified parent Project.  The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`."],["ProjectAndroidAppPatchCall","Updates the attributes of the AndroidApp identified by the specified resource name."],["ProjectAndroidAppShaCreateCall","Adds a SHA certificate to the specified AndroidApp."],["ProjectAndroidAppShaDeleteCall","Removes a SHA certificate from the specified AndroidApp."],["ProjectAndroidAppShaListCall","Returns the list of SHA-1 and SHA-256 certificates for the specified AndroidApp."],["ProjectAvailableLocationListCall","Returns a list of valid Google Cloud Platform (GCP) resource locations for the specified Project (including a FirebaseProject).  The default GCP resource location of a project defines the geographical location where project resources, such as Cloud Firestore, will be provisioned by default.  The returned list are the available GCP resource locations.  This call checks for any location restrictions for the specified Project and, thus, might return a subset of all possible GCP resource locations. To list all GCP resource locations (regardless of any restrictions), call the endpoint without specifying a `projectId` (that is, `/v1beta1/{parent=projects/-}/listAvailableLocations`).  To call `ListAvailableLocations` with a specified project, a member must be at minimum a Viewer of the project. Calls without a specified project do not require any specific project permissions."],["ProjectDefaultLocationFinalizeCall","Sets the default Google Cloud Platform (GCP) resource location for the specified FirebaseProject.  This method creates an App Engine application with a default Cloud Storage bucket, located in the specified `location_id`. This location must be one of the available GCP resource locations.  After the default GCP resource location is finalized, or if it was already set, it cannot be changed. The default GCP resource location for the specified FirebaseProject might already be set because either the GCP `Project` already has an App Engine application or `FinalizeDefaultLocation` was previously called with a specified `location_id`. Any new calls to `FinalizeDefaultLocation` with a different specified `location_id` will return a 409 error.  The result of this call is an `Operation`, which can be used to track the provisioning process. The `response` type of the `Operation` is google.protobuf.Empty.  The `Operation` can be polled by its `name` using GetOperation until `done` is true. When `done` is true, the `Operation` has either succeeded or failed. If the `Operation` has succeeded, its `response` will be set to a google.protobuf.Empty; if the `Operation` has failed, its `error` will be set to a google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call DeleteOperation.  All fields listed in the request body are required.  To call `FinalizeDefaultLocation`, a member must be an Owner of the project."],["ProjectGetAdminSdkConfigCall","Gets the configuration artifact used by servers to simplify initialization.  Typically, this configuration is used with the Firebase Admin SDK initializeApp command."],["ProjectGetCall","Gets the FirebaseProject identified by the specified resource name."],["ProjectInfo","A reference to a Google Cloud Platform (GCP) `Project`."],["ProjectIosAppCreateCall","Requests that a new IosApp be created.  The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`."],["ProjectIosAppGetCall","Gets the IosApp identified by the specified resource name."],["ProjectIosAppGetConfigCall","Gets the configuration artifact associated with the specified IosApp."],["ProjectIosAppListCall","Lists each IosApp associated with the specified parent Project.  The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`."],["ProjectIosAppPatchCall","Updates the attributes of the IosApp identified by the specified resource name."],["ProjectListCall","Lists each FirebaseProject accessible to the caller.  The elements are returned in no particular order, but they will be a consistent view of the Projects when additional requests are made with a `pageToken`.  This method is eventually consistent with Project mutations, which means newly provisioned Projects and recent modifications to existing Projects might not be reflected in the set of Projects. The list will include only ACTIVE Projects.  Use GetFirebaseProject for consistent reads as well as for additional Project details."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `FirebaseManagement` hub."],["ProjectPatchCall","Updates the attributes of the FirebaseProject identified by the specified resource name.  All query parameters are required."],["ProjectSearchAppCall","A convenience method that lists all available Apps for the specified FirebaseProject.  Typically, interaction with an App should be done using the platform-specific service, but some tool use-cases require a summary of all known Apps (such as for App selector interfaces)."],["ProjectWebAppCreateCall","Requests that a new WebApp be created.  The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`."],["ProjectWebAppGetCall","Gets the WebApp identified by the specified resource name."],["ProjectWebAppGetConfigCall","Gets the configuration artifact associated with the specified WebApp."],["ProjectWebAppListCall","Lists each WebApp associated with the specified parent Project.  The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`."],["ProjectWebAppPatchCall","Updates the attributes of the WebApp identified by the specified resource name."],["RangeResponseHeader",""],["ResumableUploadHelper","A utility type to perform a resumable upload from start to end."],["SearchFirebaseAppsResponse","There is no detailed description."],["ServerError",""],["ServerMessage",""],["ShaCertificate","A SHA-1 or SHA-256 certificate associated with the AndroidApp."],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each `Status` message contains three pieces of data: error code, error message, and error details."],["WebApp","Details of a Firebase App for the web."],["WebAppConfig","Configuration metadata of a single Firebase App for the web."],["XUploadContentType","The `X-Upload-Content-Type` header."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a parts string"],["UnusedType","Identifies types which are not actually used by the API This might be a bug within the google API schema."]],"type":[["Result","A universal result type used as return for all calls."]]});