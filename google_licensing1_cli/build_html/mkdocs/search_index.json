{
    "docs": [
        {
            "location": "/", 
            "text": "The \nlicensing1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle licensing\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nlicensing\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-licensing1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nlicensing\n API at revision \n20170213\n. The CLI is at version \n1.0.12\n.\n\n\nlicensing1 [options]\n        license-assignments\n                delete \nproduct-id\n \nsku-id\n \nuser-id\n [-p \nv\n]...\n                get \nproduct-id\n \nsku-id\n \nuser-id\n [-p \nv\n]... [-o \nout\n]\n                insert \nproduct-id\n \nsku-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list-for-product \nproduct-id\n \ncustomer-id\n [-p \nv\n]... [-o \nout\n]\n                list-for-product-and-sku \nproduct-id\n \nsku-id\n \ncustomer-id\n [-p \nv\n]... [-o \nout\n]\n                patch \nproduct-id\n \nsku-id\n \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update \nproduct-id\n \nsku-id\n \nuser-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  licensing1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nlicensing1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/licensing1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/licensing1-secret.json\n, assuming that the required \nlicensing\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nlicensing1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-licensing1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  licensing  API at revision  20170213 . The CLI is at version  1.0.12 .  licensing1 [options]\n        license-assignments\n                delete  product-id   sku-id   user-id  [-p  v ]...\n                get  product-id   sku-id   user-id  [-p  v ]... [-o  out ]\n                insert  product-id   sku-id  (-r  kv )... [-p  v ]... [-o  out ]\n                list-for-product  product-id   customer-id  [-p  v ]... [-o  out ]\n                list-for-product-and-sku  product-id   sku-id   customer-id  [-p  v ]... [-o  out ]\n                patch  product-id   sku-id   user-id  (-r  kv )... [-p  v ]... [-o  out ]\n                update  product-id   sku-id   user-id  (-r  kv )... [-p  v ]... [-o  out ]\n  licensing1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  licensing1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/licensing1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/licensing1-secret.json , assuming that the required  licensing  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  licensing1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/license-assignments_delete/", 
            "text": "Revoke License.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/apps.licensing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/apps.licensing\n.\nYou can set the scope for this method like this: \nlicensing1 --scope \nscope\n license-assignments delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproduct-id\n \n(string)\n\n\nName for product\n\n\n\n\n\n\nsku-id\n \n(string)\n\n\nName for sku\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nemail id or unique Id of the user\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Delete"
        }, 
        {
            "location": "/license-assignments_delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/apps.licensing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/apps.licensing .\nYou can set the scope for this method like this:  licensing1 --scope  scope  license-assignments delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/license-assignments_delete/#required-scalar-arguments", 
            "text": "product-id   (string)  Name for product    sku-id   (string)  Name for sku    user-id   (string)  email id or unique Id of the user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/license-assignments_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/license-assignments_get/", 
            "text": "Get license assignment of a particular product and sku for a user\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/apps.licensing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/apps.licensing\n.\nYou can set the scope for this method like this: \nlicensing1 --scope \nscope\n license-assignments get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproduct-id\n \n(string)\n\n\nName for product\n\n\n\n\n\n\nsku-id\n \n(string)\n\n\nName for sku\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nemail id or unique Id of the user\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Get"
        }, 
        {
            "location": "/license-assignments_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/apps.licensing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/apps.licensing .\nYou can set the scope for this method like this:  licensing1 --scope  scope  license-assignments get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/license-assignments_get/#required-scalar-arguments", 
            "text": "product-id   (string)  Name for product    sku-id   (string)  Name for sku    user-id   (string)  email id or unique Id of the user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/license-assignments_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/license-assignments_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/license-assignments_insert/", 
            "text": "Assign License.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/apps.licensing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/apps.licensing\n.\nYou can set the scope for this method like this: \nlicensing1 --scope \nscope\n license-assignments insert ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproduct-id\n \n(string)\n\n\nName for product\n\n\n\n\n\n\nsku-id\n \n(string)\n\n\nName for sku\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLicenseAssignmentInsert:\n  user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    user-id=eirmod\n\n\nEmail id of the user\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Insert"
        }, 
        {
            "location": "/license-assignments_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/apps.licensing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/apps.licensing .\nYou can set the scope for this method like this:  licensing1 --scope  scope  license-assignments insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/license-assignments_insert/#required-scalar-arguments", 
            "text": "product-id   (string)  Name for product    sku-id   (string)  Name for sku", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/license-assignments_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  LicenseAssignmentInsert:\n  user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    user-id=eirmod  Email id of the user", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/license-assignments_insert/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/license-assignments_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/license-assignments_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/license-assignments_list-for-product/", 
            "text": "List license assignments for given product of the customer.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/apps.licensing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/apps.licensing\n.\nYou can set the scope for this method like this: \nlicensing1 --scope \nscope\n license-assignments list-for-product ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproduct-id\n \n(string)\n\n\nName for product\n\n\n\n\n\n\ncustomer-id\n \n(string)\n\n\nCustomerId represents the customer for whom licenseassignments are queried\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken to fetch the next page.Optional. By default server will return first page\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "List For Product"
        }, 
        {
            "location": "/license-assignments_list-for-product/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/apps.licensing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/apps.licensing .\nYou can set the scope for this method like this:  licensing1 --scope  scope  license-assignments list-for-product ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/license-assignments_list-for-product/#required-scalar-arguments", 
            "text": "product-id   (string)  Name for product    customer-id   (string)  CustomerId represents the customer for whom licenseassignments are queried", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/license-assignments_list-for-product/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/license-assignments_list-for-product/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p max-results=integer   Maximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.     -p page-token=string   Token to fetch the next page.Optional. By default server will return first page", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/license-assignments_list-for-product/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/license-assignments_list-for-product-and-sku/", 
            "text": "List license assignments for given product and sku of the customer.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/apps.licensing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/apps.licensing\n.\nYou can set the scope for this method like this: \nlicensing1 --scope \nscope\n license-assignments list-for-product-and-sku ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproduct-id\n \n(string)\n\n\nName for product\n\n\n\n\n\n\nsku-id\n \n(string)\n\n\nName for sku\n\n\n\n\n\n\ncustomer-id\n \n(string)\n\n\nCustomerId represents the customer for whom licenseassignments are queried\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken to fetch the next page.Optional. By default server will return first page\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "List For Product And Sku"
        }, 
        {
            "location": "/license-assignments_list-for-product-and-sku/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/apps.licensing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/apps.licensing .\nYou can set the scope for this method like this:  licensing1 --scope  scope  license-assignments list-for-product-and-sku ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/license-assignments_list-for-product-and-sku/#required-scalar-arguments", 
            "text": "product-id   (string)  Name for product    sku-id   (string)  Name for sku    customer-id   (string)  CustomerId represents the customer for whom licenseassignments are queried", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/license-assignments_list-for-product-and-sku/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/license-assignments_list-for-product-and-sku/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   Token to fetch the next page.Optional. By default server will return first page     -p max-results=integer   Maximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/license-assignments_list-for-product-and-sku/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/license-assignments_patch/", 
            "text": "Assign License. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/apps.licensing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/apps.licensing\n.\nYou can set the scope for this method like this: \nlicensing1 --scope \nscope\n license-assignments patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproduct-id\n \n(string)\n\n\nName for product\n\n\n\n\n\n\nsku-id\n \n(string)\n\n\nName for sku for which license would be revoked\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nemail id or unique Id of the user\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLicenseAssignment:\n  etags: string\n  kind: string\n  product-id: string\n  product-name: string\n  self-link: string\n  sku-id: string\n  sku-name: string\n  user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    etags=sit\n\n\nETag of the resource.\n\n\n\n\n\n\nkind=stet\n\n\nIdentifies the resource as a LicenseAssignment.\n\n\n\n\n\n\nproduct-id=sed\n\n\nId of the product.\n\n\n\n\n\n\nproduct-name=et\n\n\nDisplay Name of the product.\n\n\n\n\n\n\nself-link=dolores\n\n\nLink to this page.\n\n\n\n\n\n\nsku-id=kasd\n\n\nId of the sku of the product.\n\n\n\n\n\n\nsku-name=accusam\n\n\nDisplay Name of the sku of the product.\n\n\n\n\n\n\nuser-id=takimata\n\n\nEmail id of the user.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Patch"
        }, 
        {
            "location": "/license-assignments_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/apps.licensing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/apps.licensing .\nYou can set the scope for this method like this:  licensing1 --scope  scope  license-assignments patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/license-assignments_patch/#required-scalar-arguments", 
            "text": "product-id   (string)  Name for product    sku-id   (string)  Name for sku for which license would be revoked    user-id   (string)  email id or unique Id of the user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/license-assignments_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  LicenseAssignment:\n  etags: string\n  kind: string\n  product-id: string\n  product-name: string\n  self-link: string\n  sku-id: string\n  sku-name: string\n  user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    etags=sit  ETag of the resource.    kind=stet  Identifies the resource as a LicenseAssignment.    product-id=sed  Id of the product.    product-name=et  Display Name of the product.    self-link=dolores  Link to this page.    sku-id=kasd  Id of the sku of the product.    sku-name=accusam  Display Name of the sku of the product.    user-id=takimata  Email id of the user.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/license-assignments_patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/license-assignments_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/license-assignments_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/license-assignments_update/", 
            "text": "Assign License.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/apps.licensing\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/apps.licensing\n.\nYou can set the scope for this method like this: \nlicensing1 --scope \nscope\n license-assignments update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproduct-id\n \n(string)\n\n\nName for product\n\n\n\n\n\n\nsku-id\n \n(string)\n\n\nName for sku for which license would be revoked\n\n\n\n\n\n\nuser-id\n \n(string)\n\n\nemail id or unique Id of the user\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLicenseAssignment:\n  etags: string\n  kind: string\n  product-id: string\n  product-name: string\n  self-link: string\n  sku-id: string\n  sku-name: string\n  user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    etags=justo\n\n\nETag of the resource.\n\n\n\n\n\n\nkind=amet.\n\n\nIdentifies the resource as a LicenseAssignment.\n\n\n\n\n\n\nproduct-id=erat\n\n\nId of the product.\n\n\n\n\n\n\nproduct-name=labore\n\n\nDisplay Name of the product.\n\n\n\n\n\n\nself-link=sea\n\n\nLink to this page.\n\n\n\n\n\n\nsku-id=nonumy\n\n\nId of the sku of the product.\n\n\n\n\n\n\nsku-name=dolores\n\n\nDisplay Name of the sku of the product.\n\n\n\n\n\n\nuser-id=gubergren\n\n\nEmail id of the user.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Update"
        }, 
        {
            "location": "/license-assignments_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/apps.licensing  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/apps.licensing .\nYou can set the scope for this method like this:  licensing1 --scope  scope  license-assignments update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/license-assignments_update/#required-scalar-arguments", 
            "text": "product-id   (string)  Name for product    sku-id   (string)  Name for sku for which license would be revoked    user-id   (string)  email id or unique Id of the user", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/license-assignments_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  LicenseAssignment:\n  etags: string\n  kind: string\n  product-id: string\n  product-name: string\n  self-link: string\n  sku-id: string\n  sku-name: string\n  user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    etags=justo  ETag of the resource.    kind=amet.  Identifies the resource as a LicenseAssignment.    product-id=erat  Id of the product.    product-name=labore  Display Name of the product.    self-link=sea  Link to this page.    sku-id=nonumy  Id of the sku of the product.    sku-name=dolores  Display Name of the sku of the product.    user-id=gubergren  Email id of the user.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/license-assignments_update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/license-assignments_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/license-assignments_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }
    ]
}