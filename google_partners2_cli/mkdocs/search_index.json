{
    "docs": [
        {
            "location": "/", 
            "text": "The \npartners2\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle partners\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \npartners\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-partners2-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \npartners\n API at revision \n20151009\n. The CLI is at version \n1.0.2\n.\n\n\npartners2 [options]\n        client-messages\n                log (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        companies\n                get \ncompany-id\n [-p \nv\n]... [-o \nout\n]\n                leads-create \ncompany-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n        user-events\n                log (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        user-states\n                list [-p \nv\n]... [-o \nout\n]\n  partners2 --help\n\nConfiguration:\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \npartners2-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/partners2-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/partners2-secret.json\n, assuming that the required \npartners\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \npartners2 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-partners2-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  partners  API at revision  20151009 . The CLI is at version  1.0.2 .  partners2 [options]\n        client-messages\n                log (-r  kv )... [-p  v ]... [-o  out ]\n        companies\n                get  company-id  [-p  v ]... [-o  out ]\n                leads-create  company-id  (-r  kv )... [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n        user-events\n                log (-r  kv )... [-p  v ]... [-o  out ]\n        user-states\n                list [-p  v ]... [-o  out ]\n  partners2 --help\n\nConfiguration:\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  partners2- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/partners2-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/partners2-secret.json , assuming that the required  partners  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  partners2 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/client-messages_log/", 
            "text": "Logs a generic message from the client, such as \nFailed to render component\n, \nProfile page is running slow\n, \nMore than 500 users have accessed this result.\n, etc.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLogMessageRequest:\n  client-info: { string: string }\n  details: string\n  level: string\n  request-metadata:\n    experiment-ids: [string]\n    locale: string\n    partners-session-id: string\n    traffic-source:\n      traffic-source-id: string\n      traffic-sub-id: string\n    user-overrides:\n      ip-address: string\n      user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    client-info=key=eirmod\n\n\nMap of client info, such as URL, browser navigator, browser platform, etc.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\ndetails=sit\n\n\nDetails about the client message.\n\n\n\n\n\n\nlevel=stet\n\n\nMessage level of client message.\n\n\n\n\n\n\nrequest-metadata    experiment-ids=sed\n\n\nExperiment IDs the current request belongs to.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nlocale=et\n\n\nLocale to use for the current request.\n\n\n\n\n\n\npartners-session-id=dolores\n\n\nGoogle Partners session ID.\n\n\n\n\n\n\ntraffic-source    traffic-source-id=kasd\n\n\nIdentifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\ntraffic-sub-id=accusam\n\n\n\n\nSecond level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n..user-overrides    ip-address=takimata\n\n\n\n\nIP address to use instead of the user\ns geo-located IP address.\n\n\n\n\n\n\nuser-id=justo\n\n\nLogged-in user ID to impersonate instead of the user\ns ID.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Log"
        }, 
        {
            "location": "/client-messages_log/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  LogMessageRequest:\n  client-info: { string: string }\n  details: string\n  level: string\n  request-metadata:\n    experiment-ids: [string]\n    locale: string\n    partners-session-id: string\n    traffic-source:\n      traffic-source-id: string\n      traffic-sub-id: string\n    user-overrides:\n      ip-address: string\n      user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    client-info=key=eirmod  Map of client info, such as URL, browser navigator, browser platform, etc.  the value will be associated with the given  key    details=sit  Details about the client message.    level=stet  Message level of client message.    request-metadata    experiment-ids=sed  Experiment IDs the current request belongs to.  Each invocation of this argument appends the given value to the array.    locale=et  Locale to use for the current request.    partners-session-id=dolores  Google Partners session ID.    traffic-source    traffic-source-id=kasd  Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     traffic-sub-id=accusam   Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     ..user-overrides    ip-address=takimata   IP address to use instead of the user s geo-located IP address.    user-id=justo  Logged-in user ID to impersonate instead of the user s ID.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/client-messages_log/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/client-messages_log/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/client-messages_log/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/companies_get/", 
            "text": "Gets a company.\n\n\nRequired Scalar Argument\n\n\n\n\ncompany-id\n \n(string)\n\n\nThe ID of the company to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p request-metadata-locale=string\n\n\n\n\nLocale to use for the current request.\n\n\n\n\n\n\n\n\n-p order-by=string\n\n\n\n\nHow to order addresses within the returned company. Currently, only \naddress\n and \naddress desc\n is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.\n\n\n\n\n\n\n\n\n-p request-metadata-user-overrides-ip-address=string\n\n\n\n\nIP address to use instead of the user\ns geo-located IP address.\n\n\n\n\n\n\n\n\n-p request-metadata-partners-session-id=string\n\n\n\n\nGoogle Partners session ID.\n\n\n\n\n\n\n\n\n-p request-metadata-traffic-source-traffic-source-id=string\n\n\n\n\nIdentifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n-p view=string\n\n\n\n\nThe view of \nCompany\n resource to be returned. This must not be \nCOMPANY_VIEW_UNSPECIFIED\n.\n\n\n\n\n\n\n\n\n-p request-metadata-experiment-ids=string\n\n\n\n\nExperiment IDs the current request belongs to.\n\n\n\n\n\n\n\n\n-p request-metadata-traffic-source-traffic-sub-id=string\n\n\n\n\nSecond level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n-p request-metadata-user-overrides-user-id=string\n\n\n\n\nLogged-in user ID to impersonate instead of the user\ns ID.\n\n\n\n\n\n\n\n\n-p address=string\n\n\n\n\nThe address to use for sorting the company\ns addresses by proximity. If not given, the geo-located address of the request is used. Used when order_by is set.\n\n\n\n\n\n\n\n\n-p currency-code=string\n\n\n\n\nIf the company\ns budget is in a different currency code than this one, then the converted budget is converted to this currency code.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/companies_get/#required-scalar-argument", 
            "text": "company-id   (string)  The ID of the company to retrieve.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/companies_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/companies_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p request-metadata-locale=string   Locale to use for the current request.     -p order-by=string   How to order addresses within the returned company. Currently, only  address  and  address desc  is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.     -p request-metadata-user-overrides-ip-address=string   IP address to use instead of the user s geo-located IP address.     -p request-metadata-partners-session-id=string   Google Partners session ID.     -p request-metadata-traffic-source-traffic-source-id=string   Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     -p view=string   The view of  Company  resource to be returned. This must not be  COMPANY_VIEW_UNSPECIFIED .     -p request-metadata-experiment-ids=string   Experiment IDs the current request belongs to.     -p request-metadata-traffic-source-traffic-sub-id=string   Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     -p request-metadata-user-overrides-user-id=string   Logged-in user ID to impersonate instead of the user s ID.     -p address=string   The address to use for sorting the company s addresses by proximity. If not given, the geo-located address of the request is used. Used when order_by is set.     -p currency-code=string   If the company s budget is in a different currency code than this one, then the converted budget is converted to this currency code.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/companies_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/companies_leads-create/", 
            "text": "Creates an advertiser lead for the given company ID.\n\n\nRequired Scalar Argument\n\n\n\n\ncompany-id\n \n(string)\n\n\nThe ID of the company to contact.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCreateLeadRequest:\n  lead:\n    comments: string\n    email: string\n    family-name: string\n    given-name: string\n    gps-motivations: [string]\n    id: string\n    min-monthly-budget:\n      currency-code: string\n      nanos: integer\n      units: string\n    phone-number: string\n    type: string\n    website-url: string\n  recaptcha-challenge:\n    id: string\n    response: string\n  request-metadata:\n    experiment-ids: [string]\n    locale: string\n    partners-session-id: string\n    traffic-source:\n      traffic-source-id: string\n      traffic-sub-id: string\n    user-overrides:\n      ip-address: string\n      user-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .lead    comments=amet.\n\n\nComments lead source gave.\n\n\n\n\n\n\nemail=erat\n\n\nEmail address of lead source.\n\n\n\n\n\n\nfamily-name=labore\n\n\nLast name of lead source.\n\n\n\n\n\n\ngiven-name=sea\n\n\nFirst name of lead source.\n\n\n\n\n\n\ngps-motivations=nonumy\n\n\nList of reasons for using Google Partner Search and creating a lead.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nid=dolores\n\n\nID of the lead.\n\n\n\n\n\n\nmin-monthly-budget    currency-code=gubergren\n\n\nThe 3-letter currency code defined in ISO 4217.\n\n\n\n\n\n\nnanos=6\n\n\nNumber of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If \nunits\n is positive, \nnanos\n must be positive or zero. If \nunits\n is zero, \nnanos\n can be positive, zero, or negative. If \nunits\n is negative, \nnanos\n must be negative or zero. For example $-1.75 is represented as \nunits\n=-1 and \nnanos\n=-750,000,000.\n\n\n\n\n\n\n\n\nunits=aliquyam\n\n\n\n\nThe whole units of the amount. For example if \ncurrencyCode\n is \n#34;USD\n#34;\n, then 1 unit is one US dollar.\n\n\n\n\n\n\n\n\n..    phone-number=ea\n\n\n\n\nPhone number of lead source.\n\n\n\n\n\n\ntype=no\n\n\nType of lead.\n\n\n\n\n\n\n\n\nwebsite-url=justo\n\n\n\n\nWebsite URL of lead source.\n\n\n\n\n\n\n\n\n..recaptcha-challenge    id=justo\n\n\n\n\nThe ID of the reCaptcha challenge.\n\n\n\n\n\n\n\n\nresponse=et\n\n\n\n\nThe response to the reCaptcha challenge.\n\n\n\n\n\n\n\n\n..request-metadata    experiment-ids=et\n\n\n\n\nExperiment IDs the current request belongs to.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nlocale=diam\n\n\nLocale to use for the current request.\n\n\n\n\n\n\npartners-session-id=ipsum\n\n\nGoogle Partners session ID.\n\n\n\n\n\n\ntraffic-source    traffic-source-id=lorem\n\n\nIdentifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\ntraffic-sub-id=et\n\n\n\n\nSecond level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n..user-overrides    ip-address=duo\n\n\n\n\nIP address to use instead of the user\ns geo-located IP address.\n\n\n\n\n\n\nuser-id=aliquyam\n\n\nLogged-in user ID to impersonate instead of the user\ns ID.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Leads Create"
        }, 
        {
            "location": "/companies_leads-create/#required-scalar-argument", 
            "text": "company-id   (string)  The ID of the company to contact.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/companies_leads-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CreateLeadRequest:\n  lead:\n    comments: string\n    email: string\n    family-name: string\n    given-name: string\n    gps-motivations: [string]\n    id: string\n    min-monthly-budget:\n      currency-code: string\n      nanos: integer\n      units: string\n    phone-number: string\n    type: string\n    website-url: string\n  recaptcha-challenge:\n    id: string\n    response: string\n  request-metadata:\n    experiment-ids: [string]\n    locale: string\n    partners-session-id: string\n    traffic-source:\n      traffic-source-id: string\n      traffic-sub-id: string\n    user-overrides:\n      ip-address: string\n      user-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .lead    comments=amet.  Comments lead source gave.    email=erat  Email address of lead source.    family-name=labore  Last name of lead source.    given-name=sea  First name of lead source.    gps-motivations=nonumy  List of reasons for using Google Partner Search and creating a lead.  Each invocation of this argument appends the given value to the array.    id=dolores  ID of the lead.    min-monthly-budget    currency-code=gubergren  The 3-letter currency code defined in ISO 4217.    nanos=6  Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If  units  is positive,  nanos  must be positive or zero. If  units  is zero,  nanos  can be positive, zero, or negative. If  units  is negative,  nanos  must be negative or zero. For example $-1.75 is represented as  units =-1 and  nanos =-750,000,000.     units=aliquyam   The whole units of the amount. For example if  currencyCode  is  #34;USD #34; , then 1 unit is one US dollar.     ..    phone-number=ea   Phone number of lead source.    type=no  Type of lead.     website-url=justo   Website URL of lead source.     ..recaptcha-challenge    id=justo   The ID of the reCaptcha challenge.     response=et   The response to the reCaptcha challenge.     ..request-metadata    experiment-ids=et   Experiment IDs the current request belongs to.  Each invocation of this argument appends the given value to the array.    locale=diam  Locale to use for the current request.    partners-session-id=ipsum  Google Partners session ID.    traffic-source    traffic-source-id=lorem  Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     traffic-sub-id=et   Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     ..user-overrides    ip-address=duo   IP address to use instead of the user s geo-located IP address.    user-id=aliquyam  Logged-in user ID to impersonate instead of the user s ID.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/companies_leads-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/companies_leads-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/companies_leads-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/companies_list/", 
            "text": "Lists companies.\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p address=string\n\n\n\n\nThe address to use when searching for companies. If not given, the geo-located address of the request is used.\n\n\n\n\n\n\n\n\n-p order-by=string\n\n\n\n\nHow to order addresses within the returned companies. Currently, only \naddress\n and \naddress desc\n is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nRequested page size. Server may return fewer companies than requested. If unspecified, server picks an appropriate default.\n\n\n\n\n\n\n\n\n-p request-metadata-experiment-ids=string\n\n\n\n\nExperiment IDs the current request belongs to.\n\n\n\n\n\n\n\n\n-p request-metadata-user-overrides-user-id=string\n\n\n\n\nLogged-in user ID to impersonate instead of the user\ns ID.\n\n\n\n\n\n\n\n\n-p request-metadata-partners-session-id=string\n\n\n\n\nGoogle Partners session ID.\n\n\n\n\n\n\n\n\n-p language-codes=string\n\n\n\n\nList of language codes that company can support. Only primary language subtags are accepted as defined by BCP 47 (IETF BCP 47, \nTags for Identifying Languages\n).\n\n\n\n\n\n\n\n\n-p max-monthly-budget-currency-code=string\n\n\n\n\nThe 3-letter currency code defined in ISO 4217.\n\n\n\n\n\n\n\n\n-p request-metadata-traffic-source-traffic-source-id=string\n\n\n\n\nIdentifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n-p min-monthly-budget-currency-code=string\n\n\n\n\nThe 3-letter currency code defined in ISO 4217.\n\n\n\n\n\n\n\n\n-p request-metadata-user-overrides-ip-address=string\n\n\n\n\nIP address to use instead of the user\ns geo-located IP address.\n\n\n\n\n\n\n\n\n-p request-metadata-locale=string\n\n\n\n\nLocale to use for the current request.\n\n\n\n\n\n\n\n\n-p max-monthly-budget-nanos=integer\n\n\n\n\nNumber of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If \nunits\n is positive, \nnanos\n must be positive or zero. If \nunits\n is zero, \nnanos\n can be positive, zero, or negative. If \nunits\n is negative, \nnanos\n must be negative or zero. For example $-1.75 is represented as \nunits\n=-1 and \nnanos\n=-750,000,000.\n\n\n\n\n\n\n\n\n-p request-metadata-traffic-source-traffic-sub-id=string\n\n\n\n\nSecond level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n-p min-monthly-budget-nanos=integer\n\n\n\n\nNumber of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If \nunits\n is positive, \nnanos\n must be positive or zero. If \nunits\n is zero, \nnanos\n can be positive, zero, or negative. If \nunits\n is negative, \nnanos\n must be negative or zero. For example $-1.75 is represented as \nunits\n=-1 and \nnanos\n=-750,000,000.\n\n\n\n\n\n\n\n\n-p industries=string\n\n\n\n\nList of industries the company can help with.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA token identifying a page of results that the server returns. Typically, this is the value of \nListCompaniesResponse.next_page_token\n returned from the previous call to ListCompanies.\n\n\n\n\n\n\n\n\n-p services=string\n\n\n\n\nList of services the company can help with.\n\n\n\n\n\n\n\n\n-p min-monthly-budget-units=string\n\n\n\n\nThe whole units of the amount. For example if \ncurrencyCode\n is \n#34;USD\n#34;\n, then 1 unit is one US dollar.\n\n\n\n\n\n\n\n\n-p gps-motivations=string\n\n\n\n\nList of reasons for using Google Partner Search to get companies.\n\n\n\n\n\n\n\n\n-p website-url=string\n\n\n\n\nWebsite URL that will help to find a better matched company. .\n\n\n\n\n\n\n\n\n-p company-name=string\n\n\n\n\nCompany name to search for.\n\n\n\n\n\n\n\n\n-p max-monthly-budget-units=string\n\n\n\n\nThe whole units of the amount. For example if \ncurrencyCode\n is \n#34;USD\n#34;\n, then 1 unit is one US dollar.\n\n\n\n\n\n\n\n\n-p view=string\n\n\n\n\nThe view of the \nCompany\n resource to be returned. This must not be \nCOMPANY_VIEW_UNSPECIFIED\n.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/companies_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/companies_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p address=string   The address to use when searching for companies. If not given, the geo-located address of the request is used.     -p order-by=string   How to order addresses within the returned companies. Currently, only  address  and  address desc  is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.     -p page-size=integer   Requested page size. Server may return fewer companies than requested. If unspecified, server picks an appropriate default.     -p request-metadata-experiment-ids=string   Experiment IDs the current request belongs to.     -p request-metadata-user-overrides-user-id=string   Logged-in user ID to impersonate instead of the user s ID.     -p request-metadata-partners-session-id=string   Google Partners session ID.     -p language-codes=string   List of language codes that company can support. Only primary language subtags are accepted as defined by BCP 47 (IETF BCP 47,  Tags for Identifying Languages ).     -p max-monthly-budget-currency-code=string   The 3-letter currency code defined in ISO 4217.     -p request-metadata-traffic-source-traffic-source-id=string   Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     -p min-monthly-budget-currency-code=string   The 3-letter currency code defined in ISO 4217.     -p request-metadata-user-overrides-ip-address=string   IP address to use instead of the user s geo-located IP address.     -p request-metadata-locale=string   Locale to use for the current request.     -p max-monthly-budget-nanos=integer   Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If  units  is positive,  nanos  must be positive or zero. If  units  is zero,  nanos  can be positive, zero, or negative. If  units  is negative,  nanos  must be negative or zero. For example $-1.75 is represented as  units =-1 and  nanos =-750,000,000.     -p request-metadata-traffic-source-traffic-sub-id=string   Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     -p min-monthly-budget-nanos=integer   Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If  units  is positive,  nanos  must be positive or zero. If  units  is zero,  nanos  can be positive, zero, or negative. If  units  is negative,  nanos  must be negative or zero. For example $-1.75 is represented as  units =-1 and  nanos =-750,000,000.     -p industries=string   List of industries the company can help with.     -p page-token=string   A token identifying a page of results that the server returns. Typically, this is the value of  ListCompaniesResponse.next_page_token  returned from the previous call to ListCompanies.     -p services=string   List of services the company can help with.     -p min-monthly-budget-units=string   The whole units of the amount. For example if  currencyCode  is  #34;USD #34; , then 1 unit is one US dollar.     -p gps-motivations=string   List of reasons for using Google Partner Search to get companies.     -p website-url=string   Website URL that will help to find a better matched company. .     -p company-name=string   Company name to search for.     -p max-monthly-budget-units=string   The whole units of the amount. For example if  currencyCode  is  #34;USD #34; , then 1 unit is one US dollar.     -p view=string   The view of the  Company  resource to be returned. This must not be  COMPANY_VIEW_UNSPECIFIED .", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/companies_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/user-events_log/", 
            "text": "Logs a user event.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nLogUserEventRequest:\n  event-action: string\n  event-category: string\n  event-scope: string\n  lead:\n    comments: string\n    email: string\n    family-name: string\n    given-name: string\n    gps-motivations: [string]\n    id: string\n    min-monthly-budget:\n      currency-code: string\n      nanos: integer\n      units: string\n    phone-number: string\n    type: string\n    website-url: string\n  request-metadata:\n    experiment-ids: [string]\n    locale: string\n    partners-session-id: string\n    traffic-source:\n      traffic-source-id: string\n      traffic-sub-id: string\n    user-overrides:\n      ip-address: string\n      user-id: string\n  url: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    event-action=sea\n\n\nThe action that occurred.\n\n\n\n\n\n\nevent-category=lorem\n\n\nThe category the action belongs to.\n\n\n\n\n\n\nevent-scope=eos\n\n\nThe scope of the event.\n\n\n\n\n\n\nlead    comments=erat\n\n\nComments lead source gave.\n\n\n\n\n\n\nemail=sadipscing\n\n\nEmail address of lead source.\n\n\n\n\n\n\nfamily-name=dolor\n\n\nLast name of lead source.\n\n\n\n\n\n\ngiven-name=eirmod\n\n\nFirst name of lead source.\n\n\n\n\n\n\ngps-motivations=elitr\n\n\nList of reasons for using Google Partner Search and creating a lead.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nid=amet\n\n\nID of the lead.\n\n\n\n\n\n\nmin-monthly-budget    currency-code=no\n\n\nThe 3-letter currency code defined in ISO 4217.\n\n\n\n\n\n\nnanos=65\n\n\nNumber of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If \nunits\n is positive, \nnanos\n must be positive or zero. If \nunits\n is zero, \nnanos\n can be positive, zero, or negative. If \nunits\n is negative, \nnanos\n must be negative or zero. For example $-1.75 is represented as \nunits\n=-1 and \nnanos\n=-750,000,000.\n\n\n\n\n\n\n\n\nunits=eirmod\n\n\n\n\nThe whole units of the amount. For example if \ncurrencyCode\n is \n#34;USD\n#34;\n, then 1 unit is one US dollar.\n\n\n\n\n\n\n\n\n..    phone-number=dolore\n\n\n\n\nPhone number of lead source.\n\n\n\n\n\n\ntype=invidunt\n\n\nType of lead.\n\n\n\n\n\n\n\n\nwebsite-url=aliquyam\n\n\n\n\nWebsite URL of lead source.\n\n\n\n\n\n\n\n\n..request-metadata    experiment-ids=accusam\n\n\n\n\nExperiment IDs the current request belongs to.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nlocale=lorem\n\n\nLocale to use for the current request.\n\n\n\n\n\n\npartners-session-id=sea\n\n\nGoogle Partners session ID.\n\n\n\n\n\n\ntraffic-source    traffic-source-id=et\n\n\nIdentifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\ntraffic-sub-id=duo\n\n\n\n\nSecond level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n..user-overrides    ip-address=et\n\n\n\n\nIP address to use instead of the user\ns geo-located IP address.\n\n\n\n\n\n\n\n\nuser-id=eirmod\n\n\n\n\nLogged-in user ID to impersonate instead of the user\ns ID.\n\n\n\n\n\n\n\n\n...    url=sanctus\n\n\n\n\nThe URL where the event occurred.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Log"
        }, 
        {
            "location": "/user-events_log/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  LogUserEventRequest:\n  event-action: string\n  event-category: string\n  event-scope: string\n  lead:\n    comments: string\n    email: string\n    family-name: string\n    given-name: string\n    gps-motivations: [string]\n    id: string\n    min-monthly-budget:\n      currency-code: string\n      nanos: integer\n      units: string\n    phone-number: string\n    type: string\n    website-url: string\n  request-metadata:\n    experiment-ids: [string]\n    locale: string\n    partners-session-id: string\n    traffic-source:\n      traffic-source-id: string\n      traffic-sub-id: string\n    user-overrides:\n      ip-address: string\n      user-id: string\n  url: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    event-action=sea  The action that occurred.    event-category=lorem  The category the action belongs to.    event-scope=eos  The scope of the event.    lead    comments=erat  Comments lead source gave.    email=sadipscing  Email address of lead source.    family-name=dolor  Last name of lead source.    given-name=eirmod  First name of lead source.    gps-motivations=elitr  List of reasons for using Google Partner Search and creating a lead.  Each invocation of this argument appends the given value to the array.    id=amet  ID of the lead.    min-monthly-budget    currency-code=no  The 3-letter currency code defined in ISO 4217.    nanos=65  Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If  units  is positive,  nanos  must be positive or zero. If  units  is zero,  nanos  can be positive, zero, or negative. If  units  is negative,  nanos  must be negative or zero. For example $-1.75 is represented as  units =-1 and  nanos =-750,000,000.     units=eirmod   The whole units of the amount. For example if  currencyCode  is  #34;USD #34; , then 1 unit is one US dollar.     ..    phone-number=dolore   Phone number of lead source.    type=invidunt  Type of lead.     website-url=aliquyam   Website URL of lead source.     ..request-metadata    experiment-ids=accusam   Experiment IDs the current request belongs to.  Each invocation of this argument appends the given value to the array.    locale=lorem  Locale to use for the current request.    partners-session-id=sea  Google Partners session ID.    traffic-source    traffic-source-id=et  Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     traffic-sub-id=duo   Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     ..user-overrides    ip-address=et   IP address to use instead of the user s geo-located IP address.     user-id=eirmod   Logged-in user ID to impersonate instead of the user s ID.     ...    url=sanctus   The URL where the event occurred.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/user-events_log/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/user-events_log/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/user-events_log/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/user-states_list/", 
            "text": "Lists states for current user.\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p request-metadata-locale=string\n\n\n\n\nLocale to use for the current request.\n\n\n\n\n\n\n\n\n-p request-metadata-traffic-source-traffic-sub-id=string\n\n\n\n\nSecond level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n-p request-metadata-experiment-ids=string\n\n\n\n\nExperiment IDs the current request belongs to.\n\n\n\n\n\n\n\n\n-p request-metadata-partners-session-id=string\n\n\n\n\nGoogle Partners session ID.\n\n\n\n\n\n\n\n\n-p request-metadata-user-overrides-ip-address=string\n\n\n\n\nIP address to use instead of the user\ns geo-located IP address.\n\n\n\n\n\n\n\n\n-p request-metadata-traffic-source-traffic-source-id=string\n\n\n\n\nIdentifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.\n\n\n\n\n\n\n\n\n-p request-metadata-user-overrides-user-id=string\n\n\n\n\nLogged-in user ID to impersonate instead of the user\ns ID.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "List"
        }, 
        {
            "location": "/user-states_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/user-states_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p request-metadata-locale=string   Locale to use for the current request.     -p request-metadata-traffic-source-traffic-sub-id=string   Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     -p request-metadata-experiment-ids=string   Experiment IDs the current request belongs to.     -p request-metadata-partners-session-id=string   Google Partners session ID.     -p request-metadata-user-overrides-ip-address=string   IP address to use instead of the user s geo-located IP address.     -p request-metadata-traffic-source-traffic-source-id=string   Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.     -p request-metadata-user-overrides-user-id=string   Logged-in user ID to impersonate instead of the user s ID.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/user-states_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}