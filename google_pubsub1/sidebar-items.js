initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"fn":[["remove_json_null_values",""]],"struct":[["AcknowledgeRequest","Request for the Acknowledge method."],["Binding","Associates `members` with a `role`."],["Chunk",""],["ContentRange","Implements the Content-Range header, for serialization only"],["CreateSnapshotRequest","Request for the `CreateSnapshot` method."],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["DummyNetworkStream",""],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:"],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["ExpirationPolicy","A policy that specifies the conditions for resource expiration (i.e., automatic resource deletion)."],["Expr","Represents an expression text. Example:"],["JsonServerError","A utility type which can decode a server response that indicates error"],["ListSnapshotsResponse","Response for the `ListSnapshots` method."],["ListSubscriptionsResponse","Response for the `ListSubscriptions` method."],["ListTopicSnapshotsResponse","Response for the `ListTopicSnapshots` method."],["ListTopicSubscriptionsResponse","Response for the `ListTopicSubscriptions` method."],["ListTopicsResponse","Response for the `ListTopics` method."],["MessageStoragePolicy","There is no detailed description."],["MethodInfo","Contains information about an API request."],["ModifyAckDeadlineRequest","Request for the ModifyAckDeadline method."],["ModifyPushConfigRequest","Request for the ModifyPushConfig method."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. Note: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["OidcToken","Contains information needed for generating an OpenID Connect token."],["Policy","Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `Pubsub` hub."],["ProjectSnapshotCreateCall","Creates a snapshot from the requested subscription. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot. If the snapshot already exists, returns `ALREADY_EXISTS`. If the requested subscription doesn't exist, returns `NOT_FOUND`. If the backlog in the subscription is too old -- and the resulting snapshot would expire in less than 1 hour -- then `FAILED_PRECONDITION` is returned. See also the `Snapshot.expire_time` field. If the name is not provided in the request, the server will assign a random name for this snapshot on the same project as the subscription, conforming to the resource name format. The generated name is populated in the returned Snapshot object. Note that for REST API requests, you must specify a name in the request."],["ProjectSnapshotDeleteCall","Removes an existing snapshot. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot. When the snapshot is deleted, all messages retained in the snapshot are immediately dropped. After a snapshot is deleted, a new one may be created with the same name, but the new one has no association with the old snapshot or its subscription, unless the same subscription is specified."],["ProjectSnapshotGetCall","Gets the configuration details of a snapshot. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot."],["ProjectSnapshotGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectSnapshotListCall","Lists the existing snapshots. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot."],["ProjectSnapshotPatchCall","Updates an existing snapshot. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot."],["ProjectSnapshotSetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectSnapshotTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectSubscriptionAcknowledgeCall","Acknowledges the messages associated with the `ack_ids` in the `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages from the subscription."],["ProjectSubscriptionCreateCall","Creates a subscription to a given topic. See the  resource name rules. If the subscription already exists, returns `ALREADY_EXISTS`. If the corresponding topic doesn't exist, returns `NOT_FOUND`."],["ProjectSubscriptionDeleteCall","Deletes an existing subscription. All messages retained in the subscription are immediately dropped. Calls to `Pull` after deletion will return `NOT_FOUND`. After a subscription is deleted, a new one may be created with the same name, but the new one has no association with the old subscription or its topic unless the same topic is specified."],["ProjectSubscriptionGetCall","Gets the configuration details of a subscription."],["ProjectSubscriptionGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectSubscriptionListCall","Lists matching subscriptions."],["ProjectSubscriptionModifyAckDeadlineCall","Modifies the ack deadline for a specific message. This method is useful to indicate that more time is needed to process a message by the subscriber, or to make the message available for redelivery if the processing was interrupted. Note that this does not modify the subscription-level `ackDeadlineSeconds` used for subsequent messages."],["ProjectSubscriptionModifyPushConfigCall","Modifies the `PushConfig` for a specified subscription."],["ProjectSubscriptionPatchCall","Updates an existing subscription. Note that certain properties of a subscription, such as its topic, are not modifiable."],["ProjectSubscriptionPullCall","Pulls messages from the server. The server may return `UNAVAILABLE` if there are too many concurrent pull requests pending for the given subscription."],["ProjectSubscriptionSeekCall","Seeks an existing subscription to a point in time or to a given snapshot, whichever is provided in the request. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot. Note that both the subscription and the snapshot must be on the same topic."],["ProjectSubscriptionSetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectSubscriptionTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["ProjectTopicCreateCall","Creates the given topic with the given name. See the  resource name rules."],["ProjectTopicDeleteCall","Deletes the topic with the given name. Returns `NOT_FOUND` if the topic does not exist. After a topic is deleted, a new topic may be created with the same name; this is an entirely new topic with none of the old configuration or subscriptions. Existing subscriptions to this topic are not deleted, but their `topic` field is set to `_deleted-topic_`."],["ProjectTopicGetCall","Gets the configuration of a topic."],["ProjectTopicGetIamPolicyCall","Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."],["ProjectTopicListCall","Lists matching topics."],["ProjectTopicPatchCall","Updates an existing topic. Note that certain properties of a topic are not modifiable."],["ProjectTopicPublishCall","Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic does not exist."],["ProjectTopicSetIamPolicyCall","Sets the access control policy on the specified resource. Replaces any existing policy."],["ProjectTopicSnapshotListCall","Lists the names of the snapshots on this topic. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot."],["ProjectTopicSubscriptionListCall","Lists the names of the subscriptions on this topic."],["ProjectTopicTestIamPermissionCall","Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error."],["PublishRequest","Request for the Publish method."],["PublishResponse","Response for the `Publish` method."],["Pubsub","Central instance to access all Pubsub related resource activities"],["PubsubMessage","A message that is published by publishers and consumed by subscribers. The message must contain either a non-empty data field or at least one attribute. Note that client libraries represent this object differently depending on the language. See the corresponding client library documentation for more information. See Quotas and limits for more information about message limits."],["PullRequest","Request for the `Pull` method."],["PullResponse","Response for the `Pull` method."],["PushConfig","Configuration for a push delivery endpoint."],["RangeResponseHeader",""],["ReceivedMessage","A message and its corresponding acknowledgment ID."],["ResumableUploadHelper","A utility type to perform a resumable upload from start to end."],["SeekRequest","Request for the `Seek` method."],["SeekResponse","Response for the `Seek` method (this response is empty)."],["ServerError",""],["ServerMessage",""],["SetIamPolicyRequest","Request message for `SetIamPolicy` method."],["Snapshot","A snapshot resource. Snapshots are used in Seek operations, which allow you to manage message acknowledgments in bulk. That is, you can set the acknowledgment state of messages in an existing subscription to the state captured by a snapshot."],["Subscription","A subscription resource."],["TestIamPermissionsRequest","Request message for `TestIamPermissions` method."],["TestIamPermissionsResponse","Response message for `TestIamPermissions` method."],["Topic","A topic resource."],["UpdateSnapshotRequest","Request for the UpdateSnapshot method."],["UpdateSubscriptionRequest","Request for the UpdateSubscription method."],["UpdateTopicRequest","Request for the UpdateTopic method."],["XUploadContentType","The `X-Upload-Content-Type` header."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a parts string"],["UnusedType","Identifies types which are not actually used by the API This might be a bug within the google API schema."]],"type":[["Result","A universal result type used as return for all calls."]]});