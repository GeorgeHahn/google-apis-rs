{
    "docs": [
        {
            "location": "/", 
            "text": "The \ncloudmonitoring2-beta2\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Cloud Monitoring\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nCloud Monitoring\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-cloudmonitoring2_beta2-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nCloud Monitoring\n API at revision \n20161031\n. The CLI is at version \n1.0.4\n.\n\n\ncloudmonitoring2-beta2 [options]\n        metric-descriptors\n                create \nproject\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                delete \nproject\n \nmetric\n [-p \nv\n]... [-o \nout\n]\n                list \nproject\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        timeseries\n                list \nproject\n \nmetric\n \nyoungest\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                write \nproject\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        timeseries-descriptors\n                list \nproject\n \nmetric\n \nyoungest\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  cloudmonitoring2-beta2 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ncloudmonitoring2-beta2-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/cloudmonitoring2-beta2-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/cloudmonitoring2-beta2-secret.json\n, assuming that the required \ncloudmonitoring\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ncloudmonitoring2-beta2 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-cloudmonitoring2_beta2-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Cloud Monitoring  API at revision  20161031 . The CLI is at version  1.0.4 .  cloudmonitoring2-beta2 [options]\n        metric-descriptors\n                create  project  (-r  kv )... [-p  v ]... [-o  out ]\n                delete  project   metric  [-p  v ]... [-o  out ]\n                list  project  (-r  kv )... [-p  v ]... [-o  out ]\n        timeseries\n                list  project   metric   youngest  (-r  kv )... [-p  v ]... [-o  out ]\n                write  project  (-r  kv )... [-p  v ]... [-o  out ]\n        timeseries-descriptors\n                list  project   metric   youngest  (-r  kv )... [-p  v ]... [-o  out ]\n  cloudmonitoring2-beta2 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  cloudmonitoring2-beta2- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/cloudmonitoring2-beta2-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/cloudmonitoring2-beta2-secret.json , assuming that the required  cloudmonitoring  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  cloudmonitoring2-beta2 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/metric-descriptors_create/", 
            "text": "Create a new metric.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudmonitoring2-beta2 --scope \nscope\n metric-descriptors create ...\n\n\nRequired Scalar Argument\n\n\n\n\nproject\n \n(string)\n\n\nThe project id. The value can be the numeric project ID or string-based project name.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nMetricDescriptor:\n  description: string\n  name: string\n  project: string\n  type-descriptor:\n    metric-type: string\n    value-type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    description=eirmod\n\n\nDescription of this metric.\n\n\n\n\n\n\nname=sit\n\n\nThe name of this metric.\n\n\n\n\n\n\nproject=stet\n\n\nThe project ID to which the metric belongs.\n\n\n\n\n\n\ntype-descriptor    metric-type=sed\n\n\nThe method of collecting data for the metric. See Metric types.\n\n\n\n\n\n\nvalue-type=et\n\n\nThe data type of of individual points in the metric\ns time series. See Metric value types.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Create"
        }, 
        {
            "location": "/metric-descriptors_create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudmonitoring2-beta2 --scope  scope  metric-descriptors create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/metric-descriptors_create/#required-scalar-argument", 
            "text": "project   (string)  The project id. The value can be the numeric project ID or string-based project name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/metric-descriptors_create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  MetricDescriptor:\n  description: string\n  name: string\n  project: string\n  type-descriptor:\n    metric-type: string\n    value-type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    description=eirmod  Description of this metric.    name=sit  The name of this metric.    project=stet  The project ID to which the metric belongs.    type-descriptor    metric-type=sed  The method of collecting data for the metric. See Metric types.    value-type=et  The data type of of individual points in the metric s time series. See Metric value types.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/metric-descriptors_create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/metric-descriptors_create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/metric-descriptors_create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/metric-descriptors_delete/", 
            "text": "Delete an existing metric.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudmonitoring2-beta2 --scope \nscope\n metric-descriptors delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproject\n \n(string)\n\n\nThe project ID to which the metric belongs.\n\n\n\n\n\n\nmetric\n \n(string)\n\n\nName of the metric.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Delete"
        }, 
        {
            "location": "/metric-descriptors_delete/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudmonitoring2-beta2 --scope  scope  metric-descriptors delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/metric-descriptors_delete/#required-scalar-arguments", 
            "text": "project   (string)  The project ID to which the metric belongs.    metric   (string)  Name of the metric.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/metric-descriptors_delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/metric-descriptors_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/metric-descriptors_list/", 
            "text": "List metric descriptors that match the query. If the query is not set, then all of the metric descriptors will be returned. Large responses will be paginated, use the nextPageToken returned in the response to request subsequent pages of results by setting the pageToken query parameter to the value of the nextPageToken.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudmonitoring2-beta2 --scope \nscope\n metric-descriptors list ...\n\n\nRequired Scalar Argument\n\n\n\n\nproject\n \n(string)\n\n\nThe project id. The value can be the numeric project ID or string-based project name.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nListMetricDescriptorsRequest:\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    kind=dolores\n\n\nIdentifies what kind of resource this is. Value: the fixed string \ncloudmonitoring#listMetricDescriptorsRequest\n.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.\n\n\n\n\n\n\n\n\n-p query=string\n\n\n\n\nThe query used to search against existing metrics. Separate keywords with a space; the service joins all keywords with AND, meaning that all keywords must match for a metric to be returned. If this field is omitted, all metrics are returned. If an empty string is passed with this field, no metrics are returned.\n\n\n\n\n\n\n\n\n-p count=integer\n\n\n\n\nMaximum number of metric descriptors per page. Used for pagination. If not specified, count = 100.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/metric-descriptors_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudmonitoring2-beta2 --scope  scope  metric-descriptors list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/metric-descriptors_list/#required-scalar-argument", 
            "text": "project   (string)  The project id. The value can be the numeric project ID or string-based project name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/metric-descriptors_list/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ListMetricDescriptorsRequest:\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    kind=dolores  Identifies what kind of resource this is. Value: the fixed string  cloudmonitoring#listMetricDescriptorsRequest .", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/metric-descriptors_list/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/metric-descriptors_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/metric-descriptors_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   The pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.     -p query=string   The query used to search against existing metrics. Separate keywords with a space; the service joins all keywords with AND, meaning that all keywords must match for a metric to be returned. If this field is omitted, all metrics are returned. If an empty string is passed with this field, no metrics are returned.     -p count=integer   Maximum number of metric descriptors per page. Used for pagination. If not specified, count = 100.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/metric-descriptors_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/timeseries_list/", 
            "text": "List the data points of the time series that match the metric and labels values and that have data points in the interval. Large responses are paginated; use the nextPageToken returned in the response to request subsequent pages of results by setting the pageToken query parameter to the value of the nextPageToken.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudmonitoring2-beta2 --scope \nscope\n timeseries list ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproject\n \n(string)\n\n\nThe project ID to which this time series belongs. The value can be the numeric project ID or string-based project name.\n\n\n\n\n\n\nmetric\n \n(string)\n\n\nMetric names are protocol-free URLs as listed in the Supported Metrics page. For example, compute.googleapis.com/instance/disk/read_ops_count.\n\n\n\n\n\n\nyoungest\n \n(string)\n\n\nEnd of the time interval (inclusive), which is expressed as an RFC 3339 timestamp.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nListTimeseriesRequest:\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    kind=kasd\n\n\nIdentifies what kind of resource this is. Value: the fixed string \ncloudmonitoring#listTimeseriesRequest\n.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p labels=string\n\n\n\n\nA collection of labels for the matching time series, which are represented as:  \n\n\nkey==value: key equals the value \n\n\nkey=~value: key regex matches the value \n\n\nkey!=value: key does not equal the value \n\n\nkey!~value: key regex does not match the value  For example, to list all of the time series descriptors for the region us-central1, you could specify:\nlabel=cloud.googleapis.com%2Flocation=~us-central1.*\n\n\n\n\n\n\n\n\n\n\n\n\n-p timespan=string\n\n\n\n\n\n\nLength of the time interval to query, which is an alternative way to declare the interval: (youngest - timespan, youngest]. The timespan and oldest parameters should not be used together. Units:  \n\n\n\n\ns: second \n\n\nm: minute \n\n\nh: hour \n\n\nd: day \n\n\nw: week  Examples: 2s, 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.\n\n\n\n\nIf neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest].\n\n\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.\n\n\n\n\n\n\n\n\n-p count=integer\n\n\n\n\nMaximum number of data points per page, which is used for pagination of results.\n\n\n\n\n\n\n\n\n-p aggregator=string\n\n\n\n\nThe aggregation function that will reduce the data points in each window to a single point. This parameter is only valid for non-cumulative metrics with a value type of INT64 or DOUBLE.\n\n\n\n\n\n\n\n\n-p window=string\n\n\n\n\nThe sampling window. At most one data point will be returned for each window in the requested time interval. This parameter is only valid for non-cumulative metric types. Units:  \n\n\nm: minute \n\n\nh: hour \n\n\nd: day \n\n\nw: week  Examples: 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.\n\n\n\n\n\n\n\n\n\n\n\n\n-p oldest=string\n\n\n\n\nStart of the time interval (exclusive), which is expressed as an RFC 3339 timestamp. If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest]\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/timeseries_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudmonitoring2-beta2 --scope  scope  timeseries list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/timeseries_list/#required-scalar-arguments", 
            "text": "project   (string)  The project ID to which this time series belongs. The value can be the numeric project ID or string-based project name.    metric   (string)  Metric names are protocol-free URLs as listed in the Supported Metrics page. For example, compute.googleapis.com/instance/disk/read_ops_count.    youngest   (string)  End of the time interval (inclusive), which is expressed as an RFC 3339 timestamp.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/timeseries_list/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ListTimeseriesRequest:\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    kind=kasd  Identifies what kind of resource this is. Value: the fixed string  cloudmonitoring#listTimeseriesRequest .", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/timeseries_list/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/timeseries_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/timeseries_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p labels=string   A collection of labels for the matching time series, which are represented as:    key==value: key equals the value   key=~value: key regex matches the value   key!=value: key does not equal the value   key!~value: key regex does not match the value  For example, to list all of the time series descriptors for the region us-central1, you could specify:\nlabel=cloud.googleapis.com%2Flocation=~us-central1.*       -p timespan=string    Length of the time interval to query, which is an alternative way to declare the interval: (youngest - timespan, youngest]. The timespan and oldest parameters should not be used together. Units:     s: second   m: minute   h: hour   d: day   w: week  Examples: 2s, 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.   If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest].      -p page-token=string   The pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.     -p count=integer   Maximum number of data points per page, which is used for pagination of results.     -p aggregator=string   The aggregation function that will reduce the data points in each window to a single point. This parameter is only valid for non-cumulative metrics with a value type of INT64 or DOUBLE.     -p window=string   The sampling window. At most one data point will be returned for each window in the requested time interval. This parameter is only valid for non-cumulative metric types. Units:    m: minute   h: hour   d: day   w: week  Examples: 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.       -p oldest=string   Start of the time interval (exclusive), which is expressed as an RFC 3339 timestamp. If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest]", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/timeseries_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/timeseries_write/", 
            "text": "Put data points to one or more time series for one or more metrics. If a time series does not exist, a new time series will be created. It is not allowed to write a time series point that is older than the existing youngest point of that time series. Points that are older than the existing youngest point of that time series will be discarded silently. Therefore, users should make sure that points of a time series are written sequentially in the order of their end time.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudmonitoring2-beta2 --scope \nscope\n timeseries write ...\n\n\nRequired Scalar Argument\n\n\n\n\nproject\n \n(string)\n\n\nThe project ID. The value can be the numeric project ID or string-based project name.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nWriteTimeseriesRequest:\n  common-labels: { string: string }\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    common-labels=key=accusam\n\n\nThe label\ns name.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Write"
        }, 
        {
            "location": "/timeseries_write/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudmonitoring2-beta2 --scope  scope  timeseries write ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/timeseries_write/#required-scalar-argument", 
            "text": "project   (string)  The project ID. The value can be the numeric project ID or string-based project name.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/timeseries_write/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  WriteTimeseriesRequest:\n  common-labels: { string: string }  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    common-labels=key=accusam  The label s name.  the value will be associated with the given  key", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/timeseries_write/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/timeseries_write/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/timeseries_write/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/timeseries-descriptors_list/", 
            "text": "List the descriptors of the time series that match the metric and labels values and that have data points in the interval. Large responses are paginated; use the nextPageToken returned in the response to request subsequent pages of results by setting the pageToken query parameter to the value of the nextPageToken.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudmonitoring2-beta2 --scope \nscope\n timeseries-descriptors list ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproject\n \n(string)\n\n\nThe project ID to which this time series belongs. The value can be the numeric project ID or string-based project name.\n\n\n\n\n\n\nmetric\n \n(string)\n\n\nMetric names are protocol-free URLs as listed in the Supported Metrics page. For example, compute.googleapis.com/instance/disk/read_ops_count.\n\n\n\n\n\n\nyoungest\n \n(string)\n\n\nEnd of the time interval (inclusive), which is expressed as an RFC 3339 timestamp.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nListTimeseriesDescriptorsRequest:\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    kind=takimata\n\n\nIdentifies what kind of resource this is. Value: the fixed string \ncloudmonitoring#listTimeseriesDescriptorsRequest\n.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p count=integer\n\n\n\n\nMaximum number of time series descriptors per page. Used for pagination. If not specified, count = 100.\n\n\n\n\n\n\n\n\n-p aggregator=string\n\n\n\n\nThe aggregation function that will reduce the data points in each window to a single point. This parameter is only valid for non-cumulative metrics with a value type of INT64 or DOUBLE.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.\n\n\n\n\n\n\n\n\n-p labels=string\n\n\n\n\nA collection of labels for the matching time series, which are represented as:  \n\n\nkey==value: key equals the value \n\n\nkey=~value: key regex matches the value \n\n\nkey!=value: key does not equal the value \n\n\nkey!~value: key regex does not match the value  For example, to list all of the time series descriptors for the region us-central1, you could specify:\nlabel=cloud.googleapis.com%2Flocation=~us-central1.*\n\n\n\n\n\n\n\n\n\n\n\n\n-p window=string\n\n\n\n\nThe sampling window. At most one data point will be returned for each window in the requested time interval. This parameter is only valid for non-cumulative metric types. Units:  \n\n\nm: minute \n\n\nh: hour \n\n\nd: day \n\n\nw: week  Examples: 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.\n\n\n\n\n\n\n\n\n\n\n\n\n-p timespan=string\n\n\n\n\n\n\nLength of the time interval to query, which is an alternative way to declare the interval: (youngest - timespan, youngest]. The timespan and oldest parameters should not be used together. Units:  \n\n\n\n\ns: second \n\n\nm: minute \n\n\nh: hour \n\n\nd: day \n\n\nw: week  Examples: 2s, 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.\n\n\n\n\nIf neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest].\n\n\n\n\n\n\n\n\n\n\n-p oldest=string\n\n\n\n\nStart of the time interval (exclusive), which is expressed as an RFC 3339 timestamp. If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest]\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/timeseries-descriptors_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudmonitoring2-beta2 --scope  scope  timeseries-descriptors list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/timeseries-descriptors_list/#required-scalar-arguments", 
            "text": "project   (string)  The project ID to which this time series belongs. The value can be the numeric project ID or string-based project name.    metric   (string)  Metric names are protocol-free URLs as listed in the Supported Metrics page. For example, compute.googleapis.com/instance/disk/read_ops_count.    youngest   (string)  End of the time interval (inclusive), which is expressed as an RFC 3339 timestamp.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/timeseries-descriptors_list/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ListTimeseriesDescriptorsRequest:\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    kind=takimata  Identifies what kind of resource this is. Value: the fixed string  cloudmonitoring#listTimeseriesDescriptorsRequest .", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/timeseries-descriptors_list/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/timeseries-descriptors_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/timeseries-descriptors_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p count=integer   Maximum number of time series descriptors per page. Used for pagination. If not specified, count = 100.     -p aggregator=string   The aggregation function that will reduce the data points in each window to a single point. This parameter is only valid for non-cumulative metrics with a value type of INT64 or DOUBLE.     -p page-token=string   The pagination token, which is used to page through large result sets. Set this value to the value of the nextPageToken to retrieve the next page of results.     -p labels=string   A collection of labels for the matching time series, which are represented as:    key==value: key equals the value   key=~value: key regex matches the value   key!=value: key does not equal the value   key!~value: key regex does not match the value  For example, to list all of the time series descriptors for the region us-central1, you could specify:\nlabel=cloud.googleapis.com%2Flocation=~us-central1.*       -p window=string   The sampling window. At most one data point will be returned for each window in the requested time interval. This parameter is only valid for non-cumulative metric types. Units:    m: minute   h: hour   d: day   w: week  Examples: 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.       -p timespan=string    Length of the time interval to query, which is an alternative way to declare the interval: (youngest - timespan, youngest]. The timespan and oldest parameters should not be used together. Units:     s: second   m: minute   h: hour   d: day   w: week  Examples: 2s, 3m, 4w. Only one unit is allowed, for example: 2w3d is not allowed; you should use 17d instead.   If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest].      -p oldest=string   Start of the time interval (exclusive), which is expressed as an RFC 3339 timestamp. If neither oldest nor timespan is specified, the default time interval will be (youngest - 4 hours, youngest]", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/timeseries-descriptors_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}