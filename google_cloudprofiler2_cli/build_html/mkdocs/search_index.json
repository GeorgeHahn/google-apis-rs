{
    "docs": [
        {
            "location": "/", 
            "text": "The \ncloudprofiler2\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Cloud Profiler\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nCloud Profiler\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-cloudprofiler2-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nCloud Profiler\n API at revision \n20190629\n. The CLI is at version \n1.0.12\n.\n\n\ncloudprofiler2 [options]\n        projects\n                profiles-create \nparent\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                profiles-create-offline \nparent\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                profiles-patch \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  cloudprofiler2 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ncloudprofiler2-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/cloudprofiler2-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/cloudprofiler2-secret.json\n, assuming that the required \ncloudprofiler\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ncloudprofiler2 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-cloudprofiler2-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Cloud Profiler  API at revision  20190629 . The CLI is at version  1.0.12 .  cloudprofiler2 [options]\n        projects\n                profiles-create  parent  (-r  kv )... [-p  v ]... [-o  out ]\n                profiles-create-offline  parent  (-r  kv )... [-p  v ]... [-o  out ]\n                profiles-patch  name  (-r  kv )... [-p  v ]... [-o  out ]\n  cloudprofiler2 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  cloudprofiler2- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/cloudprofiler2-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/cloudprofiler2-secret.json , assuming that the required  cloudprofiler  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  cloudprofiler2 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/projects_profiles-create/", 
            "text": "CreateProfile creates a new profile resource in the online mode.\n\n\nThe server ensures that the new profiles are created at a constant rate per\ndeployment, so the creation request may hang for some time until the next\nprofile session is available.\n\n\nThe request may fail with ABORTED error if the creation is not available\nwithin ~1m, the response will indicate the duration of the backoff the\nclient should take before attempting creating a profile again. The backoff\nduration is returned in google.rpc.RetryInfo extension on the response\nstatus. To a gRPC client, the extension will be return as a\nbinary-serialized proto in the trailing metadata item named\n\ngoogle.rpc.retryinfo-bin\n.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\nhttps://www.googleapis.com/auth/monitoring.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudprofiler2 --scope \nscope\n projects profiles-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\nParent project to create the profile in.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCreateProfileRequest:\n  deployment:\n    labels: { string: string }\n    project-id: string\n    target: string\n  profile-type: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .deployment    labels=key=eirmod\n\n\n\n\n\n\nLabels identify the deployment within the user universe and same target.\n    Validation regex for label names: \n^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$\n.\n    Value for an individual label must be \n= 512 bytes, the total\n    size of all label names and values must be \n= 1024 bytes.\n\n\nLabel named \nlanguage\n can be used to record the programming language of\nthe profiled deployment. The standard choices for the value include \njava\n,\n\ngo\n, \npython\n, \nruby\n, \nnodejs\n, \nphp\n, \ndotnet\n.\n\n\nFor deployments running on Google Cloud Platform, \nzone\n or \nregion\n label\nshould be present describing the deployment location. An example of a zone\nis \nus-central1-a\n, an example of a region is \nus-central1\n or\n\nus-central\n.\n    - the value will be associated with the given \nkey\n\n* \nproject-id=sit\n\n    - Project ID is the ID of a cloud project.\nValidation regex: \n^a-z{4,61}[a-z0-9]$\n.\n* \ntarget=stet\n\n    - Target is the service name used to group related deployments:\n* Service name for GAE Flex / Standard.\n* Cluster and container name for GKE.\n* User-specified string for direct GCE profiling (e.g. Java).\n* Job name for Dataflow.\nValidation regex: \n^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$\n.\n\n\n\n\n\n\n\n\n\n\n..    profile-type=sed\n\n\n\n\nOne or more profile types that the agent is capable of providing.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Profiles Create"
        }, 
        {
            "location": "/projects_profiles-create/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring  https://www.googleapis.com/auth/monitoring.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudprofiler2 --scope  scope  projects profiles-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_profiles-create/#required-scalar-argument", 
            "text": "parent   (string)  Parent project to create the profile in.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_profiles-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CreateProfileRequest:\n  deployment:\n    labels: { string: string }\n    project-id: string\n    target: string\n  profile-type: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .deployment    labels=key=eirmod    Labels identify the deployment within the user universe and same target.\n    Validation regex for label names:  ^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$ .\n    Value for an individual label must be  = 512 bytes, the total\n    size of all label names and values must be  = 1024 bytes.  Label named  language  can be used to record the programming language of\nthe profiled deployment. The standard choices for the value include  java , go ,  python ,  ruby ,  nodejs ,  php ,  dotnet .  For deployments running on Google Cloud Platform,  zone  or  region  label\nshould be present describing the deployment location. An example of a zone\nis  us-central1-a , an example of a region is  us-central1  or us-central .\n    - the value will be associated with the given  key \n*  project-id=sit \n    - Project ID is the ID of a cloud project.\nValidation regex:  ^a-z{4,61}[a-z0-9]$ .\n*  target=stet \n    - Target is the service name used to group related deployments:\n* Service name for GAE Flex / Standard.\n* Cluster and container name for GKE.\n* User-specified string for direct GCE profiling (e.g. Java).\n* Job name for Dataflow.\nValidation regex:  ^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$ .      ..    profile-type=sed   One or more profile types that the agent is capable of providing.  Each invocation of this argument appends the given value to the array.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_profiles-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_profiles-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_profiles-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_profiles-create-offline/", 
            "text": "CreateOfflineProfile creates a new profile resource in the offline mode.\nThe client provides the profile to create along with the profile bytes, the\nserver records it.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\nhttps://www.googleapis.com/auth/monitoring.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudprofiler2 --scope \nscope\n projects profiles-create-offline ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\nParent project to create the profile in.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nProfile:\n  deployment:\n    labels: { string: string }\n    project-id: string\n    target: string\n  duration: string\n  labels: { string: string }\n  name: string\n  profile-bytes: string\n  profile-type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .deployment    labels=key=et\n\n\n\n\n\n\nLabels identify the deployment within the user universe and same target.\n    Validation regex for label names: \n^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$\n.\n    Value for an individual label must be \n= 512 bytes, the total\n    size of all label names and values must be \n= 1024 bytes.\n\n\nLabel named \nlanguage\n can be used to record the programming language of\nthe profiled deployment. The standard choices for the value include \njava\n,\n\ngo\n, \npython\n, \nruby\n, \nnodejs\n, \nphp\n, \ndotnet\n.\n\n\nFor deployments running on Google Cloud Platform, \nzone\n or \nregion\n label\nshould be present describing the deployment location. An example of a zone\nis \nus-central1-a\n, an example of a region is \nus-central1\n or\n\nus-central\n.\n    - the value will be associated with the given \nkey\n\n* \nproject-id=dolores\n\n    - Project ID is the ID of a cloud project.\nValidation regex: \n^a-z{4,61}[a-z0-9]$\n.\n* \ntarget=kasd\n\n    - Target is the service name used to group related deployments:\n* Service name for GAE Flex / Standard.\n* Cluster and container name for GKE.\n* User-specified string for direct GCE profiling (e.g. Java).\n* Job name for Dataflow.\nValidation regex: \n^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$\n.\n\n\n\n\n\n\n\n\n\n\n..    duration=accusam\n\n\n\n\nDuration of the profiling session.\n    Input (for the offline mode) or output (for the online mode).\n    The field represents requested profiling duration. It may slightly differ\n    from the effective profiling duration, which is recorded in the profile\n    data, in case the profiling can\nt be stopped immediately (e.g. in case\n    stopping the profiling is handled asynchronously).\n\n\n\n\n\n\nlabels=key=takimata\n\n\nInput only. Labels associated to this specific profile. These labels will\n    get merged with the deployment labels for the final data set.  See\n    documentation on deployment labels for validation rules and limits.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\nname=justo\n\n\nOutput only. Opaque, server-assigned, unique ID for this profile.\n\n\n\n\n\n\nprofile-bytes=amet.\n\n\nInput only. Profile bytes, as a gzip compressed serialized proto, the\n    format is https://github.com/google/pprof/blob/master/proto/profile.proto.\n\n\n\n\n\n\nprofile-type=erat\n\n\nType of profile.\n    For offline mode, this must be specified when creating the profile. For\n    online mode it is assigned and returned by the server.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Profiles Create Offline"
        }, 
        {
            "location": "/projects_profiles-create-offline/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring  https://www.googleapis.com/auth/monitoring.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudprofiler2 --scope  scope  projects profiles-create-offline ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_profiles-create-offline/#required-scalar-argument", 
            "text": "parent   (string)  Parent project to create the profile in.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_profiles-create-offline/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Profile:\n  deployment:\n    labels: { string: string }\n    project-id: string\n    target: string\n  duration: string\n  labels: { string: string }\n  name: string\n  profile-bytes: string\n  profile-type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .deployment    labels=key=et    Labels identify the deployment within the user universe and same target.\n    Validation regex for label names:  ^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$ .\n    Value for an individual label must be  = 512 bytes, the total\n    size of all label names and values must be  = 1024 bytes.  Label named  language  can be used to record the programming language of\nthe profiled deployment. The standard choices for the value include  java , go ,  python ,  ruby ,  nodejs ,  php ,  dotnet .  For deployments running on Google Cloud Platform,  zone  or  region  label\nshould be present describing the deployment location. An example of a zone\nis  us-central1-a , an example of a region is  us-central1  or us-central .\n    - the value will be associated with the given  key \n*  project-id=dolores \n    - Project ID is the ID of a cloud project.\nValidation regex:  ^a-z{4,61}[a-z0-9]$ .\n*  target=kasd \n    - Target is the service name used to group related deployments:\n* Service name for GAE Flex / Standard.\n* Cluster and container name for GKE.\n* User-specified string for direct GCE profiling (e.g. Java).\n* Job name for Dataflow.\nValidation regex:  ^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$ .      ..    duration=accusam   Duration of the profiling session.\n    Input (for the offline mode) or output (for the online mode).\n    The field represents requested profiling duration. It may slightly differ\n    from the effective profiling duration, which is recorded in the profile\n    data, in case the profiling can t be stopped immediately (e.g. in case\n    stopping the profiling is handled asynchronously).    labels=key=takimata  Input only. Labels associated to this specific profile. These labels will\n    get merged with the deployment labels for the final data set.  See\n    documentation on deployment labels for validation rules and limits.  the value will be associated with the given  key    name=justo  Output only. Opaque, server-assigned, unique ID for this profile.    profile-bytes=amet.  Input only. Profile bytes, as a gzip compressed serialized proto, the\n    format is https://github.com/google/pprof/blob/master/proto/profile.proto.    profile-type=erat  Type of profile.\n    For offline mode, this must be specified when creating the profile. For\n    online mode it is assigned and returned by the server.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_profiles-create-offline/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_profiles-create-offline/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_profiles-create-offline/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_profiles-patch/", 
            "text": "UpdateProfile updates the profile bytes and labels on the profile resource\ncreated in the online mode. Updating the bytes for profiles created in the\noffline mode is currently not supported: the profile content must be\nprovided at the time of the profile creation.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\nhttps://www.googleapis.com/auth/monitoring\n\n\nhttps://www.googleapis.com/auth/monitoring.write\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudprofiler2 --scope \nscope\n projects profiles-patch ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nOutput only. Opaque, server-assigned, unique ID for this profile.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nProfile:\n  deployment:\n    labels: { string: string }\n    project-id: string\n    target: string\n  duration: string\n  labels: { string: string }\n  name: string\n  profile-bytes: string\n  profile-type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .deployment    labels=key=labore\n\n\n\n\n\n\nLabels identify the deployment within the user universe and same target.\n    Validation regex for label names: \n^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$\n.\n    Value for an individual label must be \n= 512 bytes, the total\n    size of all label names and values must be \n= 1024 bytes.\n\n\nLabel named \nlanguage\n can be used to record the programming language of\nthe profiled deployment. The standard choices for the value include \njava\n,\n\ngo\n, \npython\n, \nruby\n, \nnodejs\n, \nphp\n, \ndotnet\n.\n\n\nFor deployments running on Google Cloud Platform, \nzone\n or \nregion\n label\nshould be present describing the deployment location. An example of a zone\nis \nus-central1-a\n, an example of a region is \nus-central1\n or\n\nus-central\n.\n    - the value will be associated with the given \nkey\n\n* \nproject-id=sea\n\n    - Project ID is the ID of a cloud project.\nValidation regex: \n^a-z{4,61}[a-z0-9]$\n.\n* \ntarget=nonumy\n\n    - Target is the service name used to group related deployments:\n* Service name for GAE Flex / Standard.\n* Cluster and container name for GKE.\n* User-specified string for direct GCE profiling (e.g. Java).\n* Job name for Dataflow.\nValidation regex: \n^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$\n.\n\n\n\n\n\n\n\n\n\n\n..    duration=dolores\n\n\n\n\nDuration of the profiling session.\n    Input (for the offline mode) or output (for the online mode).\n    The field represents requested profiling duration. It may slightly differ\n    from the effective profiling duration, which is recorded in the profile\n    data, in case the profiling can\nt be stopped immediately (e.g. in case\n    stopping the profiling is handled asynchronously).\n\n\n\n\n\n\nlabels=key=gubergren\n\n\nInput only. Labels associated to this specific profile. These labels will\n    get merged with the deployment labels for the final data set.  See\n    documentation on deployment labels for validation rules and limits.\n\n\nthe value will be associated with the given \nkey\n\n\n\n\n\n\nname=sadipscing\n\n\nOutput only. Opaque, server-assigned, unique ID for this profile.\n\n\n\n\n\n\nprofile-bytes=aliquyam\n\n\nInput only. Profile bytes, as a gzip compressed serialized proto, the\n    format is https://github.com/google/pprof/blob/master/proto/profile.proto.\n\n\n\n\n\n\nprofile-type=ea\n\n\nType of profile.\n    For offline mode, this must be specified when creating the profile. For\n    online mode it is assigned and returned by the server.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p update-mask=string\n\n\nField mask used to specify the fields to be overwritten. Currently only\n    profile_bytes and labels fields are supported by UpdateProfile, so only\n    those fields can be specified in the mask. When no mask is provided, all\n    fields are overwritten.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Profiles Patch"
        }, 
        {
            "location": "/projects_profiles-patch/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-platform  https://www.googleapis.com/auth/monitoring  https://www.googleapis.com/auth/monitoring.write   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudprofiler2 --scope  scope  projects profiles-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_profiles-patch/#required-scalar-argument", 
            "text": "name   (string)  Output only. Opaque, server-assigned, unique ID for this profile.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_profiles-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Profile:\n  deployment:\n    labels: { string: string }\n    project-id: string\n    target: string\n  duration: string\n  labels: { string: string }\n  name: string\n  profile-bytes: string\n  profile-type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .deployment    labels=key=labore    Labels identify the deployment within the user universe and same target.\n    Validation regex for label names:  ^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$ .\n    Value for an individual label must be  = 512 bytes, the total\n    size of all label names and values must be  = 1024 bytes.  Label named  language  can be used to record the programming language of\nthe profiled deployment. The standard choices for the value include  java , go ,  python ,  ruby ,  nodejs ,  php ,  dotnet .  For deployments running on Google Cloud Platform,  zone  or  region  label\nshould be present describing the deployment location. An example of a zone\nis  us-central1-a , an example of a region is  us-central1  or us-central .\n    - the value will be associated with the given  key \n*  project-id=sea \n    - Project ID is the ID of a cloud project.\nValidation regex:  ^a-z{4,61}[a-z0-9]$ .\n*  target=nonumy \n    - Target is the service name used to group related deployments:\n* Service name for GAE Flex / Standard.\n* Cluster and container name for GKE.\n* User-specified string for direct GCE profiling (e.g. Java).\n* Job name for Dataflow.\nValidation regex:  ^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$ .      ..    duration=dolores   Duration of the profiling session.\n    Input (for the offline mode) or output (for the online mode).\n    The field represents requested profiling duration. It may slightly differ\n    from the effective profiling duration, which is recorded in the profile\n    data, in case the profiling can t be stopped immediately (e.g. in case\n    stopping the profiling is handled asynchronously).    labels=key=gubergren  Input only. Labels associated to this specific profile. These labels will\n    get merged with the deployment labels for the final data set.  See\n    documentation on deployment labels for validation rules and limits.  the value will be associated with the given  key    name=sadipscing  Output only. Opaque, server-assigned, unique ID for this profile.    profile-bytes=aliquyam  Input only. Profile bytes, as a gzip compressed serialized proto, the\n    format is https://github.com/google/pprof/blob/master/proto/profile.proto.    profile-type=ea  Type of profile.\n    For offline mode, this must be specified when creating the profile. For\n    online mode it is assigned and returned by the server.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_profiles-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_profiles-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_profiles-patch/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p update-mask=string  Field mask used to specify the fields to be overwritten. Currently only\n    profile_bytes and labels fields are supported by UpdateProfile, so only\n    those fields can be specified in the mask. When no mask is provided, all\n    fields are overwritten.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_profiles-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}