{
    "docs": [
        {
            "location": "/", 
            "text": "The \nadexchangebuyer1d4\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Ad Exchange Buyer\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nAd Exchange Buyer\n API can be found at the\n\nofficial documentation site\n.\n\n\nDownloads\n\n\nYou can download the pre-compiled 64bit binaries for the following platforms:\n\n\n\n\n \nubuntu\n\n\n \nosx\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nAd Exchange Buyer\n API at revision \n20160118\n. The CLI is at version \n0.3.3\n.\n\n\nadexchangebuyer1d4 [options]\n        accounts\n                get \nid\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n                patch \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update \nid\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        billing-info\n                get \naccount-id\n [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n        budget\n                get \naccount-id\n \nbilling-id\n [-p \nv\n]... [-o \nout\n]\n                patch \naccount-id\n \nbilling-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update \naccount-id\n \nbilling-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        creatives\n                add-deal \naccount-id\n \nbuyer-creative-id\n \ndeal-id\n [-p \nv\n]...\n                get \naccount-id\n \nbuyer-creative-id\n [-p \nv\n]... [-o \nout\n]\n                insert (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n                remove-deal \naccount-id\n \nbuyer-creative-id\n \ndeal-id\n [-p \nv\n]...\n        marketplacedeals\n                delete \nproposal-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                insert \nproposal-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list \nproposal-id\n [-p \nv\n]... [-o \nout\n]\n                update \nproposal-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        marketplacenotes\n                insert \nproposal-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list \nproposal-id\n [-p \nv\n]... [-o \nout\n]\n        performance-report\n                list \naccount-id\n \nend-date-time\n \nstart-date-time\n [-p \nv\n]... [-o \nout\n]\n        pretargeting-config\n                delete \naccount-id\n \nconfig-id\n [-p \nv\n]...\n                get \naccount-id\n \nconfig-id\n [-p \nv\n]... [-o \nout\n]\n                insert \naccount-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list \naccount-id\n [-p \nv\n]... [-o \nout\n]\n                patch \naccount-id\n \nconfig-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update \naccount-id\n \nconfig-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        products\n                get \nproduct-id\n [-p \nv\n]... [-o \nout\n]\n                search [-p \nv\n]... [-o \nout\n]\n        proposals\n                get \nproposal-id\n [-p \nv\n]... [-o \nout\n]\n                insert (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                patch \nproposal-id\n \nrevision-number\n \nupdate-action\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                search [-p \nv\n]... [-o \nout\n]\n                update \nproposal-id\n \nrevision-number\n \nupdate-action\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  adexchangebuyer1d4 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nadexchangebuyer1d4-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/adexchangebuyer1d4-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/adexchangebuyer1d4-secret.json\n, assuming that the required \nadexchangebuyer\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nadexchangebuyer1d4 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#downloads", 
            "text": "You can download the pre-compiled 64bit binaries for the following platforms:     ubuntu    osx   Find the source code  on github .", 
            "title": "Downloads"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Ad Exchange Buyer  API at revision  20160118 . The CLI is at version  0.3.3 .  adexchangebuyer1d4 [options]\n        accounts\n                get  id  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n                patch  id  (-r  kv )... [-p  v ]... [-o  out ]\n                update  id  (-r  kv )... [-p  v ]... [-o  out ]\n        billing-info\n                get  account-id  [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n        budget\n                get  account-id   billing-id  [-p  v ]... [-o  out ]\n                patch  account-id   billing-id  (-r  kv )... [-p  v ]... [-o  out ]\n                update  account-id   billing-id  (-r  kv )... [-p  v ]... [-o  out ]\n        creatives\n                add-deal  account-id   buyer-creative-id   deal-id  [-p  v ]...\n                get  account-id   buyer-creative-id  [-p  v ]... [-o  out ]\n                insert (-r  kv )... [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n                remove-deal  account-id   buyer-creative-id   deal-id  [-p  v ]...\n        marketplacedeals\n                delete  proposal-id  (-r  kv )... [-p  v ]... [-o  out ]\n                insert  proposal-id  (-r  kv )... [-p  v ]... [-o  out ]\n                list  proposal-id  [-p  v ]... [-o  out ]\n                update  proposal-id  (-r  kv )... [-p  v ]... [-o  out ]\n        marketplacenotes\n                insert  proposal-id  (-r  kv )... [-p  v ]... [-o  out ]\n                list  proposal-id  [-p  v ]... [-o  out ]\n        performance-report\n                list  account-id   end-date-time   start-date-time  [-p  v ]... [-o  out ]\n        pretargeting-config\n                delete  account-id   config-id  [-p  v ]...\n                get  account-id   config-id  [-p  v ]... [-o  out ]\n                insert  account-id  (-r  kv )... [-p  v ]... [-o  out ]\n                list  account-id  [-p  v ]... [-o  out ]\n                patch  account-id   config-id  (-r  kv )... [-p  v ]... [-o  out ]\n                update  account-id   config-id  (-r  kv )... [-p  v ]... [-o  out ]\n        products\n                get  product-id  [-p  v ]... [-o  out ]\n                search [-p  v ]... [-o  out ]\n        proposals\n                get  proposal-id  [-p  v ]... [-o  out ]\n                insert (-r  kv )... [-p  v ]... [-o  out ]\n                patch  proposal-id   revision-number   update-action  (-r  kv )... [-p  v ]... [-o  out ]\n                search [-p  v ]... [-o  out ]\n                update  proposal-id   revision-number   update-action  (-r  kv )... [-p  v ]... [-o  out ]\n  adexchangebuyer1d4 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  adexchangebuyer1d4- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/adexchangebuyer1d4-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/adexchangebuyer1d4-secret.json , assuming that the required  adexchangebuyer  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  adexchangebuyer1d4 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/accounts_get/", 
            "text": "Gets one account by ID.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n accounts get ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(integer)\n\n\nThe account id\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/accounts_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  accounts get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/accounts_get/#required-scalar-argument", 
            "text": "id   (integer)  The account id", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/accounts_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/accounts_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/accounts_list/", 
            "text": "Retrieves the authenticated user\ns list of accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n accounts list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/accounts_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  accounts list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/accounts_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/accounts_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/accounts_patch/", 
            "text": "Updates an existing account. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n accounts patch ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(integer)\n\n\nThe account id\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAccount:\n  cookie-matching-nid: string\n  cookie-matching-url: string\n  id: integer\n  kind: string\n  maximum-active-creatives: integer\n  maximum-total-qps: integer\n  number-active-creatives: integer\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    cookie-matching-nid=eirmod\n\n\nThe nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this.\n\n\n\n\n\n\ncookie-matching-url=sit\n\n\nThe base URL used in cookie match requests.\n\n\n\n\n\n\nid=36\n\n\nAccount id.\n\n\n\n\n\n\nkind=sed\n\n\nResource type.\n\n\n\n\n\n\nmaximum-active-creatives=16\n\n\nThe maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this.\n\n\n\n\n\n\nmaximum-total-qps=83\n\n\nThe sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this.\n\n\n\n\n\n\nnumber-active-creatives=38\n\n\nThe number of creatives that this account inserted or bid with in the last 30 days.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Patch"
        }, 
        {
            "location": "/accounts_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  accounts patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/accounts_patch/#required-scalar-argument", 
            "text": "id   (integer)  The account id", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/accounts_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Account:\n  cookie-matching-nid: string\n  cookie-matching-url: string\n  id: integer\n  kind: string\n  maximum-active-creatives: integer\n  maximum-total-qps: integer\n  number-active-creatives: integer  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    cookie-matching-nid=eirmod  The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this.    cookie-matching-url=sit  The base URL used in cookie match requests.    id=36  Account id.    kind=sed  Resource type.    maximum-active-creatives=16  The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this.    maximum-total-qps=83  The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this.    number-active-creatives=38  The number of creatives that this account inserted or bid with in the last 30 days.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/accounts_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/accounts_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/accounts_update/", 
            "text": "Updates an existing account.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n accounts update ...\n\n\nRequired Scalar Argument\n\n\n\n\nid\n \n(integer)\n\n\nThe account id\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAccount:\n  cookie-matching-nid: string\n  cookie-matching-url: string\n  id: integer\n  kind: string\n  maximum-active-creatives: integer\n  maximum-total-qps: integer\n  number-active-creatives: integer\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    cookie-matching-nid=accusam\n\n\nThe nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this.\n\n\n\n\n\n\ncookie-matching-url=takimata\n\n\nThe base URL used in cookie match requests.\n\n\n\n\n\n\nid=31\n\n\nAccount id.\n\n\n\n\n\n\nkind=amet.\n\n\nResource type.\n\n\n\n\n\n\nmaximum-active-creatives=20\n\n\nThe maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this.\n\n\n\n\n\n\nmaximum-total-qps=66\n\n\nThe sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this.\n\n\n\n\n\n\nnumber-active-creatives=92\n\n\nThe number of creatives that this account inserted or bid with in the last 30 days.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update"
        }, 
        {
            "location": "/accounts_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  accounts update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/accounts_update/#required-scalar-argument", 
            "text": "id   (integer)  The account id", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/accounts_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Account:\n  cookie-matching-nid: string\n  cookie-matching-url: string\n  id: integer\n  kind: string\n  maximum-active-creatives: integer\n  maximum-total-qps: integer\n  number-active-creatives: integer  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    cookie-matching-nid=accusam  The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this.    cookie-matching-url=takimata  The base URL used in cookie match requests.    id=31  Account id.    kind=amet.  Resource type.    maximum-active-creatives=20  The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this.    maximum-total-qps=66  The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this.    number-active-creatives=92  The number of creatives that this account inserted or bid with in the last 30 days.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/accounts_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/accounts_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/billing-info_get/", 
            "text": "Returns the billing information for one account specified by account ID.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n billing-info get ...\n\n\nRequired Scalar Argument\n\n\n\n\naccount-id\n \n(integer)\n\n\nThe account id.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/billing-info_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  billing-info get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/billing-info_get/#required-scalar-argument", 
            "text": "account-id   (integer)  The account id.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/billing-info_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/billing-info_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/billing-info_list/", 
            "text": "Retrieves a list of billing information for all accounts of the authenticated user.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n billing-info list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/billing-info_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  billing-info list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/billing-info_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/billing-info_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/budget_get/", 
            "text": "Returns the budget information for the adgroup specified by the accountId and billingId.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n budget get ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to get the budget information for.\n\n\n\n\n\n\nbilling-id\n \n(string)\n\n\nThe billing id to get the budget information for.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/budget_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  budget get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/budget_get/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id to get the budget information for.    billing-id   (string)  The billing id to get the budget information for.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/budget_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/budget_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/budget_patch/", 
            "text": "Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n budget patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id associated with the budget being updated.\n\n\n\n\n\n\nbilling-id\n \n(string)\n\n\nThe billing id associated with the budget being updated.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBudget:\n  account-id: string\n  billing-id: string\n  budget-amount: string\n  currency-code: string\n  id: string\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    account-id=nonumy\n\n\nThe id of the account. This is required for get and update requests.\n\n\n\n\n\n\nbilling-id=dolores\n\n\nThe billing id to determine which adgroup to provide budget information for. This is required for get and update requests.\n\n\n\n\n\n\nbudget-amount=gubergren\n\n\nThe daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests.\n\n\n\n\n\n\ncurrency-code=sadipscing\n\n\nThe currency code for the buyer. This cannot be altered here.\n\n\n\n\n\n\nid=aliquyam\n\n\nThe unique id that describes this item.\n\n\n\n\n\n\nkind=ea\n\n\nThe kind of the resource, i.e. \nadexchangebuyer#budget\n.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Patch"
        }, 
        {
            "location": "/budget_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  budget patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/budget_patch/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id associated with the budget being updated.    billing-id   (string)  The billing id associated with the budget being updated.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/budget_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Budget:\n  account-id: string\n  billing-id: string\n  budget-amount: string\n  currency-code: string\n  id: string\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    account-id=nonumy  The id of the account. This is required for get and update requests.    billing-id=dolores  The billing id to determine which adgroup to provide budget information for. This is required for get and update requests.    budget-amount=gubergren  The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests.    currency-code=sadipscing  The currency code for the buyer. This cannot be altered here.    id=aliquyam  The unique id that describes this item.    kind=ea  The kind of the resource, i.e.  adexchangebuyer#budget .     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/budget_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/budget_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/budget_update/", 
            "text": "Updates the budget amount for the budget of the adgroup specified by the accountId and billingId, with the budget amount in the request.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n budget update ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id associated with the budget being updated.\n\n\n\n\n\n\nbilling-id\n \n(string)\n\n\nThe billing id associated with the budget being updated.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBudget:\n  account-id: string\n  billing-id: string\n  budget-amount: string\n  currency-code: string\n  id: string\n  kind: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    account-id=no\n\n\nThe id of the account. This is required for get and update requests.\n\n\n\n\n\n\nbilling-id=justo\n\n\nThe billing id to determine which adgroup to provide budget information for. This is required for get and update requests.\n\n\n\n\n\n\nbudget-amount=justo\n\n\nThe daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests.\n\n\n\n\n\n\ncurrency-code=et\n\n\nThe currency code for the buyer. This cannot be altered here.\n\n\n\n\n\n\nid=et\n\n\nThe unique id that describes this item.\n\n\n\n\n\n\nkind=diam\n\n\nThe kind of the resource, i.e. \nadexchangebuyer#budget\n.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update"
        }, 
        {
            "location": "/budget_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  budget update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/budget_update/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id associated with the budget being updated.    billing-id   (string)  The billing id associated with the budget being updated.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/budget_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Budget:\n  account-id: string\n  billing-id: string\n  budget-amount: string\n  currency-code: string\n  id: string\n  kind: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    account-id=no  The id of the account. This is required for get and update requests.    billing-id=justo  The billing id to determine which adgroup to provide budget information for. This is required for get and update requests.    budget-amount=justo  The daily budget amount in unit amount of the account currency to apply for the billingId provided. This is required for update requests.    currency-code=et  The currency code for the buyer. This cannot be altered here.    id=et  The unique id that describes this item.    kind=diam  The kind of the resource, i.e.  adexchangebuyer#budget .     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/budget_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/budget_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/creatives_add-deal/", 
            "text": "Add a deal id association for the creative.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n creatives add-deal ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(integer)\n\n\nThe id for the account that will serve this creative.\n\n\n\n\n\n\nbuyer-creative-id\n \n(string)\n\n\nThe buyer-specific id for this creative.\n\n\n\n\n\n\ndeal-id\n \n(string)\n\n\nThe id of the deal id to associate with this creative.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Add Deal"
        }, 
        {
            "location": "/creatives_add-deal/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  creatives add-deal ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/creatives_add-deal/#required-scalar-arguments", 
            "text": "account-id   (integer)  The id for the account that will serve this creative.    buyer-creative-id   (string)  The buyer-specific id for this creative.    deal-id   (string)  The id of the deal id to associate with this creative.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/creatives_add-deal/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/creatives_get/", 
            "text": "Gets the status for a single creative. A creative will be available 30-40 minutes after submission.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n creatives get ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(integer)\n\n\nThe id for the account that will serve this creative.\n\n\n\n\n\n\nbuyer-creative-id\n \n(string)\n\n\nThe buyer-specific id for this creative.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/creatives_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  creatives get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/creatives_get/#required-scalar-arguments", 
            "text": "account-id   (integer)  The id for the account that will serve this creative.    buyer-creative-id   (string)  The buyer-specific id for this creative.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/creatives_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/creatives_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/creatives_insert/", 
            "text": "Submit a new creative.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n creatives insert ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCreative:\n  html-snippet: string\n  account-id: integer\n  advertiser-id: [string]\n  advertiser-name: string\n  agency-id: string\n  api-upload-timestamp: string\n  attribute: [integer]\n  buyer-creative-id: string\n  click-through-url: [string]\n  deals-status: string\n  filtering-reasons:\n    date: string\n  height: integer\n  impression-tracking-url: [string]\n  kind: string\n  native-ad:\n    advertiser: string\n    app-icon:\n      height: integer\n      url: string\n      width: integer\n    body: string\n    call-to-action: string\n    click-tracking-url: string\n    headline: string\n    image:\n      height: integer\n      url: string\n      width: integer\n    impression-tracking-url: [string]\n    logo:\n      height: integer\n      url: string\n      width: integer\n    price: string\n    star-rating: number\n    store: string\n  open-auction-status: string\n  product-categories: [integer]\n  restricted-categories: [integer]\n  sensitive-categories: [integer]\n  vendor-type: [integer]\n  version: integer\n  video-url: string\n  width: integer\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    html-snippet=ipsum\n\n\nThe HTML snippet that displays the ad when inserted in the web page. If set, videoURL should not be set.\n\n\n\n\n\n\naccount-id=96\n\n\nAccount id.\n\n\n\n\n\n\nadvertiser-id=et\n\n\nDetected advertiser id, if any. Read-only. This field should not be set in requests.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nadvertiser-name=duo\n\n\nThe name of the company being advertised in the creative.\n\n\n\n\n\n\nagency-id=aliquyam\n\n\nThe agency id for this creative.\n\n\n\n\n\n\napi-upload-timestamp=sea\n\n\nThe last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp).\n\n\n\n\n\n\nattribute=46\n\n\nAll attributes for the ads that may be shown from this snippet.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nbuyer-creative-id=eos\n\n\nA buyer-specific id identifying the creative in this ad.\n\n\n\n\n\n\nclick-through-url=erat\n\n\nThe set of destination urls for the snippet.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\ndeals-status=sadipscing\n\n\nTop-level deals status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=DIRECT_DEALS (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from servingRestrictions directly.\n\n\n\n\n\n\n\n\nfiltering-reasons    date=dolor\n\n\n\n\nThe date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.\n\n\n\n\n\n\n\n\n..    height=62\n\n\n\n\nAd height.\n\n\n\n\n\n\nimpression-tracking-url=elitr\n\n\nThe set of urls to be called to record an impression.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nkind=amet\n\n\nResource type.\n\n\n\n\n\n\nnative-ad    advertiser=no\n\n\nNo description provided.\n\n\n\n\n\n\napp-icon    height=65\n\n\nNo description provided.\n\n\n\n\n\n\nurl=eirmod\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nwidth=68\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    body=invidunt\n\n\n\n\nA long description of the ad.\n\n\n\n\n\n\ncall-to-action=aliquyam\n\n\nA label for the button that the user is supposed to click.\n\n\n\n\n\n\nclick-tracking-url=accusam\n\n\nThe URL to use for click tracking.\n\n\n\n\n\n\nheadline=lorem\n\n\nA short title for the ad.\n\n\n\n\n\n\nimage    height=92\n\n\nNo description provided.\n\n\n\n\n\n\nurl=et\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nwidth=31\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    impression-tracking-url=et\n\n\n\n\nThe URLs are called when the impression is rendered.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nlogo    height=61\n\n\nNo description provided.\n\n\n\n\n\n\nurl=sanctus\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nwidth=79\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    price=amet\n\n\n\n\nThe price of the promoted app including the currency info.\n\n\n\n\n\n\nstar-rating=0.77599682643\n\n\nThe app rating in the app store. Must be in the range [0-5].\n\n\n\n\n\n\n\n\nstore=consetetur\n\n\n\n\nThe URL to the app store to purchase/download the promoted app.\n\n\n\n\n\n\n\n\n..    open-auction-status=ut\n\n\n\n\nTop-level open auction status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=OPEN_AUCTION (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from ServingRestrictions directly.\n\n\n\n\n\n\nproduct-categories=85\n\n\nDetected product categories, if any. Read-only. This field should not be set in requests.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nrestricted-categories=21\n\n\nAll restricted categories for the ads that may be shown from this snippet.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nsensitive-categories=98\n\n\nDetected sensitive categories, if any. Read-only. This field should not be set in requests.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nvendor-type=53\n\n\nAll vendor types for the ads that may be shown from this snippet.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nversion=53\n\n\nThe version for this creative. Read-only. This field should not be set in requests.\n\n\n\n\n\n\nvideo-url=et\n\n\nThe url to fetch a video ad. If set, HTMLSnippet should not be set.\n\n\n\n\n\n\nwidth=5\n\n\nAd width.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/creatives_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  creatives insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/creatives_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Creative:\n  html-snippet: string\n  account-id: integer\n  advertiser-id: [string]\n  advertiser-name: string\n  agency-id: string\n  api-upload-timestamp: string\n  attribute: [integer]\n  buyer-creative-id: string\n  click-through-url: [string]\n  deals-status: string\n  filtering-reasons:\n    date: string\n  height: integer\n  impression-tracking-url: [string]\n  kind: string\n  native-ad:\n    advertiser: string\n    app-icon:\n      height: integer\n      url: string\n      width: integer\n    body: string\n    call-to-action: string\n    click-tracking-url: string\n    headline: string\n    image:\n      height: integer\n      url: string\n      width: integer\n    impression-tracking-url: [string]\n    logo:\n      height: integer\n      url: string\n      width: integer\n    price: string\n    star-rating: number\n    store: string\n  open-auction-status: string\n  product-categories: [integer]\n  restricted-categories: [integer]\n  sensitive-categories: [integer]\n  vendor-type: [integer]\n  version: integer\n  video-url: string\n  width: integer  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    html-snippet=ipsum  The HTML snippet that displays the ad when inserted in the web page. If set, videoURL should not be set.    account-id=96  Account id.    advertiser-id=et  Detected advertiser id, if any. Read-only. This field should not be set in requests.  Each invocation of this argument appends the given value to the array.    advertiser-name=duo  The name of the company being advertised in the creative.    agency-id=aliquyam  The agency id for this creative.    api-upload-timestamp=sea  The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp).    attribute=46  All attributes for the ads that may be shown from this snippet.  Each invocation of this argument appends the given value to the array.    buyer-creative-id=eos  A buyer-specific id identifying the creative in this ad.    click-through-url=erat  The set of destination urls for the snippet.  Each invocation of this argument appends the given value to the array.    deals-status=sadipscing  Top-level deals status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=DIRECT_DEALS (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from servingRestrictions directly.     filtering-reasons    date=dolor   The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.     ..    height=62   Ad height.    impression-tracking-url=elitr  The set of urls to be called to record an impression.  Each invocation of this argument appends the given value to the array.    kind=amet  Resource type.    native-ad    advertiser=no  No description provided.    app-icon    height=65  No description provided.    url=eirmod  No description provided.     width=68   No description provided.     ..    body=invidunt   A long description of the ad.    call-to-action=aliquyam  A label for the button that the user is supposed to click.    click-tracking-url=accusam  The URL to use for click tracking.    headline=lorem  A short title for the ad.    image    height=92  No description provided.    url=et  No description provided.     width=31   No description provided.     ..    impression-tracking-url=et   The URLs are called when the impression is rendered.  Each invocation of this argument appends the given value to the array.    logo    height=61  No description provided.    url=sanctus  No description provided.     width=79   No description provided.     ..    price=amet   The price of the promoted app including the currency info.    star-rating=0.77599682643  The app rating in the app store. Must be in the range [0-5].     store=consetetur   The URL to the app store to purchase/download the promoted app.     ..    open-auction-status=ut   Top-level open auction status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=OPEN_AUCTION (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from ServingRestrictions directly.    product-categories=85  Detected product categories, if any. Read-only. This field should not be set in requests.  Each invocation of this argument appends the given value to the array.    restricted-categories=21  All restricted categories for the ads that may be shown from this snippet.  Each invocation of this argument appends the given value to the array.    sensitive-categories=98  Detected sensitive categories, if any. Read-only. This field should not be set in requests.  Each invocation of this argument appends the given value to the array.    vendor-type=53  All vendor types for the ads that may be shown from this snippet.  Each invocation of this argument appends the given value to the array.    version=53  The version for this creative. Read-only. This field should not be set in requests.    video-url=et  The url to fetch a video ad. If set, HTMLSnippet should not be set.    width=5  Ad width.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/creatives_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/creatives_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/creatives_list/", 
            "text": "Retrieves a list of the authenticated user\ns active creatives. A creative will be available 30-40 minutes after submission.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n creatives list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p buyer-creative-id=string\n\n\n\n\nWhen specified, only creatives for the given buyer creative ids are returned.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of \nnextPageToken\n from the previous response. Optional.\n\n\n\n\n\n\n\n\n-p account-id=integer\n\n\n\n\nWhen specified, only creatives for the given account ids are returned.\n\n\n\n\n\n\n\n\n-p open-auction-status-filter=string\n\n\n\n\nWhen specified, only creatives having the given open auction status are returned.\n\n\n\n\n\n\n\n\n-p deals-status-filter=string\n\n\n\n\nWhen specified, only creatives having the given deals status are returned.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of entries returned on one result page. If not set, the default is 100. Optional.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/creatives_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  creatives list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/creatives_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/creatives_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p buyer-creative-id=string   When specified, only creatives for the given buyer creative ids are returned.     -p page-token=string   A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of  nextPageToken  from the previous response. Optional.     -p account-id=integer   When specified, only creatives for the given account ids are returned.     -p open-auction-status-filter=string   When specified, only creatives having the given open auction status are returned.     -p deals-status-filter=string   When specified, only creatives having the given deals status are returned.     -p max-results=integer   Maximum number of entries returned on one result page. If not set, the default is 100. Optional.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/creatives_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/creatives_remove-deal/", 
            "text": "Remove a deal id associated with the creative.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n creatives remove-deal ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(integer)\n\n\nThe id for the account that will serve this creative.\n\n\n\n\n\n\nbuyer-creative-id\n \n(string)\n\n\nThe buyer-specific id for this creative.\n\n\n\n\n\n\ndeal-id\n \n(string)\n\n\nThe id of the deal id to disassociate with this creative.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Remove Deal"
        }, 
        {
            "location": "/creatives_remove-deal/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  creatives remove-deal ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/creatives_remove-deal/#required-scalar-arguments", 
            "text": "account-id   (integer)  The id for the account that will serve this creative.    buyer-creative-id   (string)  The buyer-specific id for this creative.    deal-id   (string)  The id of the deal id to disassociate with this creative.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/creatives_remove-deal/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/marketplacedeals_delete/", 
            "text": "Delete the specified deals from the proposal\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n marketplacedeals delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nproposal-id\n \n(string)\n\n\nThe proposalId to delete deals from.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nDeleteOrderDealsRequest:\n  deal-ids: [string]\n  proposal-revision-number: string\n  update-action: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    deal-ids=amet.\n\n\nList of deals to delete for a given proposal\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nproposal-revision-number=voluptua.\n\n\nThe last known proposal revision number.\n\n\n\n\n\n\nupdate-action=lorem\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Delete"
        }, 
        {
            "location": "/marketplacedeals_delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  marketplacedeals delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/marketplacedeals_delete/#required-scalar-argument", 
            "text": "proposal-id   (string)  The proposalId to delete deals from.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/marketplacedeals_delete/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  DeleteOrderDealsRequest:\n  deal-ids: [string]\n  proposal-revision-number: string\n  update-action: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    deal-ids=amet.  List of deals to delete for a given proposal  Each invocation of this argument appends the given value to the array.    proposal-revision-number=voluptua.  The last known proposal revision number.    update-action=lorem  No description provided.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/marketplacedeals_delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/marketplacedeals_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/marketplacedeals_insert/", 
            "text": "Add new deals for the specified proposal\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n marketplacedeals insert ...\n\n\nRequired Scalar Argument\n\n\n\n\nproposal-id\n \n(string)\n\n\nproposalId for which deals need to be added.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAddOrderDealsRequest:\n  proposal-revision-number: string\n  update-action: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    proposal-revision-number=gubergren\n\n\nThe last known proposal revision number.\n\n\n\n\n\n\nupdate-action=justo\n\n\nIndicates an optional action to take on the proposal\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/marketplacedeals_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  marketplacedeals insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/marketplacedeals_insert/#required-scalar-argument", 
            "text": "proposal-id   (string)  proposalId for which deals need to be added.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/marketplacedeals_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AddOrderDealsRequest:\n  proposal-revision-number: string\n  update-action: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    proposal-revision-number=gubergren  The last known proposal revision number.    update-action=justo  Indicates an optional action to take on the proposal     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/marketplacedeals_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/marketplacedeals_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/marketplacedeals_list/", 
            "text": "List all the deals for a given proposal\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n marketplacedeals list ...\n\n\nRequired Scalar Argument\n\n\n\n\nproposal-id\n \n(string)\n\n\nThe proposalId to get deals for.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/marketplacedeals_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  marketplacedeals list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/marketplacedeals_list/#required-scalar-argument", 
            "text": "proposal-id   (string)  The proposalId to get deals for.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/marketplacedeals_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/marketplacedeals_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/marketplacedeals_update/", 
            "text": "Replaces all the deals in the proposal with the passed in deals\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n marketplacedeals update ...\n\n\nRequired Scalar Argument\n\n\n\n\nproposal-id\n \n(string)\n\n\nThe proposalId to edit deals on.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nEditAllOrderDealsRequest:\n  proposal:\n    billed-buyer:\n      account-id: string\n    buyer:\n      account-id: string\n    buyer-private-data:\n      reference-id: string\n      reference-payload: string\n    has-buyer-signed-off: boolean\n    has-seller-signed-off: boolean\n    inventory-source: string\n    is-renegotiating: boolean\n    is-setup-complete: boolean\n    kind: string\n    last-updater-or-commentor-role: string\n    last-updater-role: string\n    name: string\n    originator-role: string\n    proposal-id: string\n    proposal-state: string\n    revision-number: string\n    revision-time-ms: string\n    seller:\n      account-id: string\n      sub-account-id: string\n  proposal-revision-number: string\n  update-action: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .proposal.billed-buyer    account-id=sit\n\n\n\n\nAdx account id of the buyer.\n\n\n\n\n\n\n\n\n..buyer    account-id=vero\n\n\n\n\nAdx account id of the buyer.\n\n\n\n\n\n\n\n\n..buyer-private-data    reference-id=diam\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nreference-payload=rebum.\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    has-buyer-signed-off=true\n\n\n\n\nWhen an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)\n\n\n\n\n\n\nhas-seller-signed-off=true\n\n\nWhen an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)\n\n\n\n\n\n\ninventory-source=vero\n\n\nWhat exchange will provide this inventory (readonly, except on create).\n\n\n\n\n\n\nis-renegotiating=false\n\n\nTrue if the proposal is being renegotiated (readonly).\n\n\n\n\n\n\nis-setup-complete=false\n\n\nTrue, if the buyside inventory setup is complete for this proposal. (readonly)\n\n\n\n\n\n\nkind=consetetur\n\n\nIdentifies what kind of resource this is. Value: the fixed string \nadexchangebuyer#proposal\n.\n\n\n\n\n\n\nlast-updater-or-commentor-role=dolore\n\n\nThe role of the last user that either updated the proposal or left a comment. (readonly)\n\n\n\n\n\n\nlast-updater-role=duo\n\n\nNo description provided.\n\n\n\n\n\n\nname=aliquyam\n\n\nThe name for the proposal (updatable)\n\n\n\n\n\n\noriginator-role=lorem\n\n\nIndicates whether the buyer/seller created the proposal.(readonly)\n\n\n\n\n\n\nproposal-id=et\n\n\nThe unique id of the proposal. (readonly).\n\n\n\n\n\n\nproposal-state=clita\n\n\nThe current state of the proposal. (readonly)\n\n\n\n\n\n\nrevision-number=consetetur\n\n\nThe revision number for the proposal (readonly).\n\n\n\n\n\n\nrevision-time-ms=takimata\n\n\nThe time (ms since epoch) when the proposal was last revised (readonly).\n\n\n\n\n\n\nseller    account-id=nonumy\n\n\nThe unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.\n\n\n\n\n\n\n\n\nsub-account-id=kasd\n\n\n\n\nOptional sub-account id for the seller.\n\n\n\n\n\n\n\n\n...    proposal-revision-number=sanctus\n\n\n\n\nThe last known revision number for the proposal.\n\n\n\n\n\n\nupdate-action=takimata\n\n\nIndicates an optional action to take on the proposal\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update"
        }, 
        {
            "location": "/marketplacedeals_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  marketplacedeals update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/marketplacedeals_update/#required-scalar-argument", 
            "text": "proposal-id   (string)  The proposalId to edit deals on.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/marketplacedeals_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  EditAllOrderDealsRequest:\n  proposal:\n    billed-buyer:\n      account-id: string\n    buyer:\n      account-id: string\n    buyer-private-data:\n      reference-id: string\n      reference-payload: string\n    has-buyer-signed-off: boolean\n    has-seller-signed-off: boolean\n    inventory-source: string\n    is-renegotiating: boolean\n    is-setup-complete: boolean\n    kind: string\n    last-updater-or-commentor-role: string\n    last-updater-role: string\n    name: string\n    originator-role: string\n    proposal-id: string\n    proposal-state: string\n    revision-number: string\n    revision-time-ms: string\n    seller:\n      account-id: string\n      sub-account-id: string\n  proposal-revision-number: string\n  update-action: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .proposal.billed-buyer    account-id=sit   Adx account id of the buyer.     ..buyer    account-id=vero   Adx account id of the buyer.     ..buyer-private-data    reference-id=diam   No description provided.     reference-payload=rebum.   No description provided.     ..    has-buyer-signed-off=true   When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)    has-seller-signed-off=true  When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)    inventory-source=vero  What exchange will provide this inventory (readonly, except on create).    is-renegotiating=false  True if the proposal is being renegotiated (readonly).    is-setup-complete=false  True, if the buyside inventory setup is complete for this proposal. (readonly)    kind=consetetur  Identifies what kind of resource this is. Value: the fixed string  adexchangebuyer#proposal .    last-updater-or-commentor-role=dolore  The role of the last user that either updated the proposal or left a comment. (readonly)    last-updater-role=duo  No description provided.    name=aliquyam  The name for the proposal (updatable)    originator-role=lorem  Indicates whether the buyer/seller created the proposal.(readonly)    proposal-id=et  The unique id of the proposal. (readonly).    proposal-state=clita  The current state of the proposal. (readonly)    revision-number=consetetur  The revision number for the proposal (readonly).    revision-time-ms=takimata  The time (ms since epoch) when the proposal was last revised (readonly).    seller    account-id=nonumy  The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.     sub-account-id=kasd   Optional sub-account id for the seller.     ...    proposal-revision-number=sanctus   The last known revision number for the proposal.    update-action=takimata  Indicates an optional action to take on the proposal     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/marketplacedeals_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/marketplacedeals_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/marketplacenotes_insert/", 
            "text": "Add notes to the proposal\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n marketplacenotes insert ...\n\n\nRequired Scalar Argument\n\n\n\n\nproposal-id\n \n(string)\n\n\nThe proposalId to add notes for.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAddOrderNotesRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/marketplacenotes_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  marketplacenotes insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/marketplacenotes_insert/#required-scalar-argument", 
            "text": "proposal-id   (string)  The proposalId to add notes for.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/marketplacenotes_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AddOrderNotesRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.  About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/marketplacenotes_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/marketplacenotes_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/marketplacenotes_list/", 
            "text": "Get all the notes associated with a proposal\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n marketplacenotes list ...\n\n\nRequired Scalar Argument\n\n\n\n\nproposal-id\n \n(string)\n\n\nThe proposalId to get notes for.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/marketplacenotes_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  marketplacenotes list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/marketplacenotes_list/#required-scalar-argument", 
            "text": "proposal-id   (string)  The proposalId to get notes for.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/marketplacenotes_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/marketplacenotes_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/performance-report_list/", 
            "text": "Retrieves the authenticated user\ns list of performance metrics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n performance-report list ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to get the reports.\n\n\n\n\n\n\nend-date-time\n \n(string)\n\n\nThe end time of the report in ISO 8601 timestamp format using UTC.\n\n\n\n\n\n\nstart-date-time\n \n(string)\n\n\nThe start time of the report in ISO 8601 timestamp format using UTC.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nMaximum number of entries returned on one result page. If not set, the default is 100. Optional.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA continuation token, used to page through performance reports. To retrieve the next page, set this parameter to the value of \nnextPageToken\n from the previous response. Optional.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/performance-report_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  performance-report list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/performance-report_list/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id to get the reports.    end-date-time   (string)  The end time of the report in ISO 8601 timestamp format using UTC.    start-date-time   (string)  The start time of the report in ISO 8601 timestamp format using UTC.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/performance-report_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/performance-report_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p max-results=integer   Maximum number of entries returned on one result page. If not set, the default is 100. Optional.     -p page-token=string   A continuation token, used to page through performance reports. To retrieve the next page, set this parameter to the value of  nextPageToken  from the previous response. Optional.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/performance-report_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/pretargeting-config_delete/", 
            "text": "Deletes an existing pretargeting config.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n pretargeting-config delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to delete the pretargeting config for.\n\n\n\n\n\n\nconfig-id\n \n(string)\n\n\nThe specific id of the configuration to delete.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Delete"
        }, 
        {
            "location": "/pretargeting-config_delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  pretargeting-config delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/pretargeting-config_delete/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id to delete the pretargeting config for.    config-id   (string)  The specific id of the configuration to delete.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/pretargeting-config_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/pretargeting-config_get/", 
            "text": "Gets a specific pretargeting configuration\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n pretargeting-config get ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to get the pretargeting config for.\n\n\n\n\n\n\nconfig-id\n \n(string)\n\n\nThe specific id of the configuration to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/pretargeting-config_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  pretargeting-config get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/pretargeting-config_get/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id to get the pretargeting config for.    config-id   (string)  The specific id of the configuration to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/pretargeting-config_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/pretargeting-config_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/pretargeting-config_insert/", 
            "text": "Inserts a new pretargeting configuration.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n pretargeting-config insert ...\n\n\nRequired Scalar Argument\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to insert the pretargeting config for.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPretargetingConfig:\n  billing-id: string\n  config-id: string\n  config-name: string\n  creative-type: [string]\n  excluded-content-labels: [string]\n  excluded-geo-criteria-ids: [string]\n  excluded-user-lists: [string]\n  excluded-verticals: [string]\n  geo-criteria-ids: [string]\n  is-active: boolean\n  kind: string\n  languages: [string]\n  mobile-carriers: [string]\n  mobile-devices: [string]\n  mobile-operating-system-versions: [string]\n  platforms: [string]\n  supported-creative-attributes: [string]\n  user-lists: [string]\n  vendor-types: [string]\n  verticals: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    billing-id=at\n\n\nThe id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.\n\n\n\n\n\n\nconfig-id=labore\n\n\nThe config id; generated automatically. Leave this field blank for insert requests.\n\n\n\n\n\n\nconfig-name=invidunt\n\n\nThe name of the config. Must be unique. Required for all requests.\n\n\n\n\n\n\ncreative-type=ea\n\n\nList must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-content-labels=sadipscing\n\n\nRequests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-geo-criteria-ids=rebum.\n\n\nRequests containing any of these geo criteria ids will not match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-user-lists=dolore\n\n\nRequests containing any of these users list ids will not match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-verticals=nonumy\n\n\nRequests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\ngeo-criteria-ids=sed\n\n\nRequests containing any of these geo criteria ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nis-active=false\n\n\nWhether this config is active. Required for all requests.\n\n\n\n\n\n\nkind=sit\n\n\nThe kind of the resource, i.e. \nadexchangebuyer#pretargetingConfig\n.\n\n\n\n\n\n\nlanguages=eirmod\n\n\nRequest containing any of these language codes will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-carriers=consetetur\n\n\nRequests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-devices=labore\n\n\nRequests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-operating-system-versions=sed\n\n\nRequests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nplatforms=ea\n\n\nRequests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nsupported-creative-attributes=gubergren\n\n\nCreative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nuser-lists=aliquyam\n\n\nRequests containing any of these user list ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nvendor-types=eos\n\n\nRequests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nverticals=tempor\n\n\nRequests containing any of these vertical ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/pretargeting-config_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  pretargeting-config insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/pretargeting-config_insert/#required-scalar-argument", 
            "text": "account-id   (string)  The account id to insert the pretargeting config for.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/pretargeting-config_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PretargetingConfig:\n  billing-id: string\n  config-id: string\n  config-name: string\n  creative-type: [string]\n  excluded-content-labels: [string]\n  excluded-geo-criteria-ids: [string]\n  excluded-user-lists: [string]\n  excluded-verticals: [string]\n  geo-criteria-ids: [string]\n  is-active: boolean\n  kind: string\n  languages: [string]\n  mobile-carriers: [string]\n  mobile-devices: [string]\n  mobile-operating-system-versions: [string]\n  platforms: [string]\n  supported-creative-attributes: [string]\n  user-lists: [string]\n  vendor-types: [string]\n  verticals: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    billing-id=at  The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.    config-id=labore  The config id; generated automatically. Leave this field blank for insert requests.    config-name=invidunt  The name of the config. Must be unique. Required for all requests.    creative-type=ea  List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.  Each invocation of this argument appends the given value to the array.    excluded-content-labels=sadipscing  Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    excluded-geo-criteria-ids=rebum.  Requests containing any of these geo criteria ids will not match.  Each invocation of this argument appends the given value to the array.    excluded-user-lists=dolore  Requests containing any of these users list ids will not match.  Each invocation of this argument appends the given value to the array.    excluded-verticals=nonumy  Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.  Each invocation of this argument appends the given value to the array.    geo-criteria-ids=sed  Requests containing any of these geo criteria ids will match.  Each invocation of this argument appends the given value to the array.    is-active=false  Whether this config is active. Required for all requests.    kind=sit  The kind of the resource, i.e.  adexchangebuyer#pretargetingConfig .    languages=eirmod  Request containing any of these language codes will match.  Each invocation of this argument appends the given value to the array.    mobile-carriers=consetetur  Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    mobile-devices=labore  Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    mobile-operating-system-versions=sed  Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    platforms=ea  Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.  Each invocation of this argument appends the given value to the array.    supported-creative-attributes=gubergren  Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    user-lists=aliquyam  Requests containing any of these user list ids will match.  Each invocation of this argument appends the given value to the array.    vendor-types=eos  Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    verticals=tempor  Requests containing any of these vertical ids will match.  Each invocation of this argument appends the given value to the array.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/pretargeting-config_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/pretargeting-config_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/pretargeting-config_list/", 
            "text": "Retrieves a list of the authenticated user\ns pretargeting configurations.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n pretargeting-config list ...\n\n\nRequired Scalar Argument\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to get the pretargeting configs for.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/pretargeting-config_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  pretargeting-config list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/pretargeting-config_list/#required-scalar-argument", 
            "text": "account-id   (string)  The account id to get the pretargeting configs for.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/pretargeting-config_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/pretargeting-config_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/pretargeting-config_patch/", 
            "text": "Updates an existing pretargeting config. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n pretargeting-config patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to update the pretargeting config for.\n\n\n\n\n\n\nconfig-id\n \n(string)\n\n\nThe specific id of the configuration to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPretargetingConfig:\n  billing-id: string\n  config-id: string\n  config-name: string\n  creative-type: [string]\n  excluded-content-labels: [string]\n  excluded-geo-criteria-ids: [string]\n  excluded-user-lists: [string]\n  excluded-verticals: [string]\n  geo-criteria-ids: [string]\n  is-active: boolean\n  kind: string\n  languages: [string]\n  mobile-carriers: [string]\n  mobile-devices: [string]\n  mobile-operating-system-versions: [string]\n  platforms: [string]\n  supported-creative-attributes: [string]\n  user-lists: [string]\n  vendor-types: [string]\n  verticals: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    billing-id=sea\n\n\nThe id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.\n\n\n\n\n\n\nconfig-id=labore\n\n\nThe config id; generated automatically. Leave this field blank for insert requests.\n\n\n\n\n\n\nconfig-name=ipsum\n\n\nThe name of the config. Must be unique. Required for all requests.\n\n\n\n\n\n\ncreative-type=aliquyam\n\n\nList must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-content-labels=dolores\n\n\nRequests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-geo-criteria-ids=sit\n\n\nRequests containing any of these geo criteria ids will not match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-user-lists=diam\n\n\nRequests containing any of these users list ids will not match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-verticals=ut\n\n\nRequests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\ngeo-criteria-ids=justo\n\n\nRequests containing any of these geo criteria ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nis-active=true\n\n\nWhether this config is active. Required for all requests.\n\n\n\n\n\n\nkind=amet\n\n\nThe kind of the resource, i.e. \nadexchangebuyer#pretargetingConfig\n.\n\n\n\n\n\n\nlanguages=accusam\n\n\nRequest containing any of these language codes will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-carriers=clita\n\n\nRequests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-devices=diam\n\n\nRequests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-operating-system-versions=justo\n\n\nRequests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nplatforms=est\n\n\nRequests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nsupported-creative-attributes=clita\n\n\nCreative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nuser-lists=invidunt\n\n\nRequests containing any of these user list ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nvendor-types=ut\n\n\nRequests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nverticals=dolores\n\n\nRequests containing any of these vertical ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Patch"
        }, 
        {
            "location": "/pretargeting-config_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  pretargeting-config patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/pretargeting-config_patch/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id to update the pretargeting config for.    config-id   (string)  The specific id of the configuration to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/pretargeting-config_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PretargetingConfig:\n  billing-id: string\n  config-id: string\n  config-name: string\n  creative-type: [string]\n  excluded-content-labels: [string]\n  excluded-geo-criteria-ids: [string]\n  excluded-user-lists: [string]\n  excluded-verticals: [string]\n  geo-criteria-ids: [string]\n  is-active: boolean\n  kind: string\n  languages: [string]\n  mobile-carriers: [string]\n  mobile-devices: [string]\n  mobile-operating-system-versions: [string]\n  platforms: [string]\n  supported-creative-attributes: [string]\n  user-lists: [string]\n  vendor-types: [string]\n  verticals: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    billing-id=sea  The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.    config-id=labore  The config id; generated automatically. Leave this field blank for insert requests.    config-name=ipsum  The name of the config. Must be unique. Required for all requests.    creative-type=aliquyam  List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.  Each invocation of this argument appends the given value to the array.    excluded-content-labels=dolores  Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    excluded-geo-criteria-ids=sit  Requests containing any of these geo criteria ids will not match.  Each invocation of this argument appends the given value to the array.    excluded-user-lists=diam  Requests containing any of these users list ids will not match.  Each invocation of this argument appends the given value to the array.    excluded-verticals=ut  Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.  Each invocation of this argument appends the given value to the array.    geo-criteria-ids=justo  Requests containing any of these geo criteria ids will match.  Each invocation of this argument appends the given value to the array.    is-active=true  Whether this config is active. Required for all requests.    kind=amet  The kind of the resource, i.e.  adexchangebuyer#pretargetingConfig .    languages=accusam  Request containing any of these language codes will match.  Each invocation of this argument appends the given value to the array.    mobile-carriers=clita  Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    mobile-devices=diam  Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    mobile-operating-system-versions=justo  Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    platforms=est  Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.  Each invocation of this argument appends the given value to the array.    supported-creative-attributes=clita  Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    user-lists=invidunt  Requests containing any of these user list ids will match.  Each invocation of this argument appends the given value to the array.    vendor-types=ut  Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    verticals=dolores  Requests containing any of these vertical ids will match.  Each invocation of this argument appends the given value to the array.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/pretargeting-config_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/pretargeting-config_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/pretargeting-config_update/", 
            "text": "Updates an existing pretargeting config.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n pretargeting-config update ...\n\n\nRequired Scalar Arguments\n\n\n\n\naccount-id\n \n(string)\n\n\nThe account id to update the pretargeting config for.\n\n\n\n\n\n\nconfig-id\n \n(string)\n\n\nThe specific id of the configuration to update.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPretargetingConfig:\n  billing-id: string\n  config-id: string\n  config-name: string\n  creative-type: [string]\n  excluded-content-labels: [string]\n  excluded-geo-criteria-ids: [string]\n  excluded-user-lists: [string]\n  excluded-verticals: [string]\n  geo-criteria-ids: [string]\n  is-active: boolean\n  kind: string\n  languages: [string]\n  mobile-carriers: [string]\n  mobile-devices: [string]\n  mobile-operating-system-versions: [string]\n  platforms: [string]\n  supported-creative-attributes: [string]\n  user-lists: [string]\n  vendor-types: [string]\n  verticals: [string]\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    billing-id=eos\n\n\nThe id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.\n\n\n\n\n\n\nconfig-id=voluptua.\n\n\nThe config id; generated automatically. Leave this field blank for insert requests.\n\n\n\n\n\n\nconfig-name=duo\n\n\nThe name of the config. Must be unique. Required for all requests.\n\n\n\n\n\n\ncreative-type=sed\n\n\nList must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-content-labels=aliquyam\n\n\nRequests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-geo-criteria-ids=ea\n\n\nRequests containing any of these geo criteria ids will not match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-user-lists=ea\n\n\nRequests containing any of these users list ids will not match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nexcluded-verticals=et\n\n\nRequests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\ngeo-criteria-ids=dolor\n\n\nRequests containing any of these geo criteria ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nis-active=true\n\n\nWhether this config is active. Required for all requests.\n\n\n\n\n\n\nkind=kasd\n\n\nThe kind of the resource, i.e. \nadexchangebuyer#pretargetingConfig\n.\n\n\n\n\n\n\nlanguages=invidunt\n\n\nRequest containing any of these language codes will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-carriers=rebum.\n\n\nRequests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-devices=lorem\n\n\nRequests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nmobile-operating-system-versions=clita\n\n\nRequests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nplatforms=invidunt\n\n\nRequests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nsupported-creative-attributes=eirmod\n\n\nCreative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nuser-lists=at\n\n\nRequests containing any of these user list ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nvendor-types=consetetur\n\n\nRequests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\nverticals=et\n\n\nRequests containing any of these vertical ids will match.\n\n\nEach invocation of this argument appends the given value to the array.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update"
        }, 
        {
            "location": "/pretargeting-config_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  pretargeting-config update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/pretargeting-config_update/#required-scalar-arguments", 
            "text": "account-id   (string)  The account id to update the pretargeting config for.    config-id   (string)  The specific id of the configuration to update.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/pretargeting-config_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PretargetingConfig:\n  billing-id: string\n  config-id: string\n  config-name: string\n  creative-type: [string]\n  excluded-content-labels: [string]\n  excluded-geo-criteria-ids: [string]\n  excluded-user-lists: [string]\n  excluded-verticals: [string]\n  geo-criteria-ids: [string]\n  is-active: boolean\n  kind: string\n  languages: [string]\n  mobile-carriers: [string]\n  mobile-devices: [string]\n  mobile-operating-system-versions: [string]\n  platforms: [string]\n  supported-creative-attributes: [string]\n  user-lists: [string]\n  vendor-types: [string]\n  verticals: [string]  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    billing-id=eos  The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.    config-id=voluptua.  The config id; generated automatically. Leave this field blank for insert requests.    config-name=duo  The name of the config. Must be unique. Required for all requests.    creative-type=sed  List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.  Each invocation of this argument appends the given value to the array.    excluded-content-labels=aliquyam  Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    excluded-geo-criteria-ids=ea  Requests containing any of these geo criteria ids will not match.  Each invocation of this argument appends the given value to the array.    excluded-user-lists=ea  Requests containing any of these users list ids will not match.  Each invocation of this argument appends the given value to the array.    excluded-verticals=et  Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.  Each invocation of this argument appends the given value to the array.    geo-criteria-ids=dolor  Requests containing any of these geo criteria ids will match.  Each invocation of this argument appends the given value to the array.    is-active=true  Whether this config is active. Required for all requests.    kind=kasd  The kind of the resource, i.e.  adexchangebuyer#pretargetingConfig .    languages=invidunt  Request containing any of these language codes will match.  Each invocation of this argument appends the given value to the array.    mobile-carriers=rebum.  Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    mobile-devices=lorem  Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    mobile-operating-system-versions=clita  Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.  Each invocation of this argument appends the given value to the array.    platforms=invidunt  Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.  Each invocation of this argument appends the given value to the array.    supported-creative-attributes=eirmod  Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    user-lists=at  Requests containing any of these user list ids will match.  Each invocation of this argument appends the given value to the array.    vendor-types=consetetur  Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.  Each invocation of this argument appends the given value to the array.    verticals=et  Requests containing any of these vertical ids will match.  Each invocation of this argument appends the given value to the array.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/pretargeting-config_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/pretargeting-config_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/products_get/", 
            "text": "Gets the requested product by id.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n products get ...\n\n\nRequired Scalar Argument\n\n\n\n\nproduct-id\n \n(string)\n\n\nThe id for the product to get the head revision for.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/products_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  products get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/products_get/#required-scalar-argument", 
            "text": "product-id   (string)  The id for the product to get the head revision for.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/products_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/products_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/products_search/", 
            "text": "Gets the requested product.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n products search ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p pql-query=string\n\n\nThe pql query used to query for products.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Search"
        }, 
        {
            "location": "/products_search/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  products search ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/products_search/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/products_search/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p pql-query=string  The pql query used to query for products.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/products_search/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/proposals_get/", 
            "text": "Get a proposal given its id\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n proposals get ...\n\n\nRequired Scalar Argument\n\n\n\n\nproposal-id\n \n(string)\n\n\nId of the proposal to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/proposals_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  proposals get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/proposals_get/#required-scalar-argument", 
            "text": "proposal-id   (string)  Id of the proposal to retrieve.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/proposals_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/proposals_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/proposals_insert/", 
            "text": "Create the given list of proposals\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n proposals insert ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nCreateOrdersRequest:\n  web-property-code: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    web-property-code=sed\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Insert"
        }, 
        {
            "location": "/proposals_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  proposals insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/proposals_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  CreateOrdersRequest:\n  web-property-code: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    web-property-code=sed  No description provided.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/proposals_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/proposals_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/proposals_patch/", 
            "text": "Update the given proposal. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n proposals patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproposal-id\n \n(string)\n\n\nThe proposal id to update.\n\n\n\n\n\n\nrevision-number\n \n(string)\n\n\nThe last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision.\n\n\n\n\n\n\nupdate-action\n \n(string)\n\n\nThe proposed action to take on the proposal.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nProposal:\n  billed-buyer:\n    account-id: string\n  buyer:\n    account-id: string\n  buyer-private-data:\n    reference-id: string\n    reference-payload: string\n  has-buyer-signed-off: boolean\n  has-seller-signed-off: boolean\n  inventory-source: string\n  is-renegotiating: boolean\n  is-setup-complete: boolean\n  kind: string\n  last-updater-or-commentor-role: string\n  last-updater-role: string\n  name: string\n  originator-role: string\n  proposal-id: string\n  proposal-state: string\n  revision-number: string\n  revision-time-ms: string\n  seller:\n    account-id: string\n    sub-account-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .billed-buyer    account-id=sit\n\n\n\n\nAdx account id of the buyer.\n\n\n\n\n\n\n\n\n..buyer    account-id=takimata\n\n\n\n\nAdx account id of the buyer.\n\n\n\n\n\n\n\n\n..buyer-private-data    reference-id=elitr\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nreference-payload=nonumy\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    has-buyer-signed-off=true\n\n\n\n\nWhen an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)\n\n\n\n\n\n\nhas-seller-signed-off=true\n\n\nWhen an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)\n\n\n\n\n\n\ninventory-source=lorem\n\n\nWhat exchange will provide this inventory (readonly, except on create).\n\n\n\n\n\n\nis-renegotiating=true\n\n\nTrue if the proposal is being renegotiated (readonly).\n\n\n\n\n\n\nis-setup-complete=true\n\n\nTrue, if the buyside inventory setup is complete for this proposal. (readonly)\n\n\n\n\n\n\nkind=ut\n\n\nIdentifies what kind of resource this is. Value: the fixed string \nadexchangebuyer#proposal\n.\n\n\n\n\n\n\nlast-updater-or-commentor-role=amet.\n\n\nThe role of the last user that either updated the proposal or left a comment. (readonly)\n\n\n\n\n\n\nlast-updater-role=ipsum\n\n\nNo description provided.\n\n\n\n\n\n\nname=ut\n\n\nThe name for the proposal (updatable)\n\n\n\n\n\n\noriginator-role=dolor\n\n\nIndicates whether the buyer/seller created the proposal.(readonly)\n\n\n\n\n\n\nproposal-id=sea\n\n\nThe unique id of the proposal. (readonly).\n\n\n\n\n\n\nproposal-state=ut\n\n\nThe current state of the proposal. (readonly)\n\n\n\n\n\n\nrevision-number=eirmod\n\n\nThe revision number for the proposal (readonly).\n\n\n\n\n\n\nrevision-time-ms=sanctus\n\n\nThe time (ms since epoch) when the proposal was last revised (readonly).\n\n\n\n\n\n\nseller    account-id=voluptua.\n\n\nThe unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.\n\n\n\n\n\n\nsub-account-id=dolor\n\n\nOptional sub-account id for the seller.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Patch"
        }, 
        {
            "location": "/proposals_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  proposals patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/proposals_patch/#required-scalar-arguments", 
            "text": "proposal-id   (string)  The proposal id to update.    revision-number   (string)  The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision.    update-action   (string)  The proposed action to take on the proposal.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/proposals_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Proposal:\n  billed-buyer:\n    account-id: string\n  buyer:\n    account-id: string\n  buyer-private-data:\n    reference-id: string\n    reference-payload: string\n  has-buyer-signed-off: boolean\n  has-seller-signed-off: boolean\n  inventory-source: string\n  is-renegotiating: boolean\n  is-setup-complete: boolean\n  kind: string\n  last-updater-or-commentor-role: string\n  last-updater-role: string\n  name: string\n  originator-role: string\n  proposal-id: string\n  proposal-state: string\n  revision-number: string\n  revision-time-ms: string\n  seller:\n    account-id: string\n    sub-account-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .billed-buyer    account-id=sit   Adx account id of the buyer.     ..buyer    account-id=takimata   Adx account id of the buyer.     ..buyer-private-data    reference-id=elitr   No description provided.     reference-payload=nonumy   No description provided.     ..    has-buyer-signed-off=true   When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)    has-seller-signed-off=true  When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)    inventory-source=lorem  What exchange will provide this inventory (readonly, except on create).    is-renegotiating=true  True if the proposal is being renegotiated (readonly).    is-setup-complete=true  True, if the buyside inventory setup is complete for this proposal. (readonly)    kind=ut  Identifies what kind of resource this is. Value: the fixed string  adexchangebuyer#proposal .    last-updater-or-commentor-role=amet.  The role of the last user that either updated the proposal or left a comment. (readonly)    last-updater-role=ipsum  No description provided.    name=ut  The name for the proposal (updatable)    originator-role=dolor  Indicates whether the buyer/seller created the proposal.(readonly)    proposal-id=sea  The unique id of the proposal. (readonly).    proposal-state=ut  The current state of the proposal. (readonly)    revision-number=eirmod  The revision number for the proposal (readonly).    revision-time-ms=sanctus  The time (ms since epoch) when the proposal was last revised (readonly).    seller    account-id=voluptua.  The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.    sub-account-id=dolor  Optional sub-account id for the seller.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/proposals_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/proposals_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/proposals_search/", 
            "text": "Search for proposals using pql query\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n proposals search ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p pql-query=string\n\n\nQuery string to retrieve specific proposals.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Search"
        }, 
        {
            "location": "/proposals_search/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  proposals search ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/proposals_search/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/proposals_search/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p pql-query=string  Query string to retrieve specific proposals.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/proposals_search/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/proposals_update/", 
            "text": "Update the given proposal\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/adexchange.buyer\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/adexchange.buyer\n.\nYou can set the scope for this method like this: \nadexchangebuyer1d4 --scope \nscope\n proposals update ...\n\n\nRequired Scalar Arguments\n\n\n\n\nproposal-id\n \n(string)\n\n\nThe proposal id to update.\n\n\n\n\n\n\nrevision-number\n \n(string)\n\n\nThe last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision.\n\n\n\n\n\n\nupdate-action\n \n(string)\n\n\nThe proposed action to take on the proposal.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nProposal:\n  billed-buyer:\n    account-id: string\n  buyer:\n    account-id: string\n  buyer-private-data:\n    reference-id: string\n    reference-payload: string\n  has-buyer-signed-off: boolean\n  has-seller-signed-off: boolean\n  inventory-source: string\n  is-renegotiating: boolean\n  is-setup-complete: boolean\n  kind: string\n  last-updater-or-commentor-role: string\n  last-updater-role: string\n  name: string\n  originator-role: string\n  proposal-id: string\n  proposal-state: string\n  revision-number: string\n  revision-time-ms: string\n  seller:\n    account-id: string\n    sub-account-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .billed-buyer    account-id=et\n\n\n\n\nAdx account id of the buyer.\n\n\n\n\n\n\n\n\n..buyer    account-id=et\n\n\n\n\nAdx account id of the buyer.\n\n\n\n\n\n\n\n\n..buyer-private-data    reference-id=vero\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\nreference-payload=ut\n\n\n\n\nNo description provided.\n\n\n\n\n\n\n\n\n..    has-buyer-signed-off=true\n\n\n\n\nWhen an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)\n\n\n\n\n\n\nhas-seller-signed-off=true\n\n\nWhen an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)\n\n\n\n\n\n\ninventory-source=ipsum\n\n\nWhat exchange will provide this inventory (readonly, except on create).\n\n\n\n\n\n\nis-renegotiating=true\n\n\nTrue if the proposal is being renegotiated (readonly).\n\n\n\n\n\n\nis-setup-complete=true\n\n\nTrue, if the buyside inventory setup is complete for this proposal. (readonly)\n\n\n\n\n\n\nkind=vero\n\n\nIdentifies what kind of resource this is. Value: the fixed string \nadexchangebuyer#proposal\n.\n\n\n\n\n\n\nlast-updater-or-commentor-role=dolor\n\n\nThe role of the last user that either updated the proposal or left a comment. (readonly)\n\n\n\n\n\n\nlast-updater-role=takimata\n\n\nNo description provided.\n\n\n\n\n\n\nname=et\n\n\nThe name for the proposal (updatable)\n\n\n\n\n\n\noriginator-role=nonumy\n\n\nIndicates whether the buyer/seller created the proposal.(readonly)\n\n\n\n\n\n\nproposal-id=et\n\n\nThe unique id of the proposal. (readonly).\n\n\n\n\n\n\nproposal-state=sed\n\n\nThe current state of the proposal. (readonly)\n\n\n\n\n\n\nrevision-number=no\n\n\nThe revision number for the proposal (readonly).\n\n\n\n\n\n\nrevision-time-ms=invidunt\n\n\nThe time (ms since epoch) when the proposal was last revised (readonly).\n\n\n\n\n\n\nseller    account-id=rebum.\n\n\nThe unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.\n\n\n\n\n\n\nsub-account-id=labore\n\n\nOptional sub-account id for the seller.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Update"
        }, 
        {
            "location": "/proposals_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/adexchange.buyer  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/adexchange.buyer .\nYou can set the scope for this method like this:  adexchangebuyer1d4 --scope  scope  proposals update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/proposals_update/#required-scalar-arguments", 
            "text": "proposal-id   (string)  The proposal id to update.    revision-number   (string)  The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision.    update-action   (string)  The proposed action to take on the proposal.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/proposals_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Proposal:\n  billed-buyer:\n    account-id: string\n  buyer:\n    account-id: string\n  buyer-private-data:\n    reference-id: string\n    reference-payload: string\n  has-buyer-signed-off: boolean\n  has-seller-signed-off: boolean\n  inventory-source: string\n  is-renegotiating: boolean\n  is-setup-complete: boolean\n  kind: string\n  last-updater-or-commentor-role: string\n  last-updater-role: string\n  name: string\n  originator-role: string\n  proposal-id: string\n  proposal-state: string\n  revision-number: string\n  revision-time-ms: string\n  seller:\n    account-id: string\n    sub-account-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .billed-buyer    account-id=et   Adx account id of the buyer.     ..buyer    account-id=et   Adx account id of the buyer.     ..buyer-private-data    reference-id=vero   No description provided.     reference-payload=ut   No description provided.     ..    has-buyer-signed-off=true   When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)    has-seller-signed-off=true  When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)    inventory-source=ipsum  What exchange will provide this inventory (readonly, except on create).    is-renegotiating=true  True if the proposal is being renegotiated (readonly).    is-setup-complete=true  True, if the buyside inventory setup is complete for this proposal. (readonly)    kind=vero  Identifies what kind of resource this is. Value: the fixed string  adexchangebuyer#proposal .    last-updater-or-commentor-role=dolor  The role of the last user that either updated the proposal or left a comment. (readonly)    last-updater-role=takimata  No description provided.    name=et  The name for the proposal (updatable)    originator-role=nonumy  Indicates whether the buyer/seller created the proposal.(readonly)    proposal-id=et  The unique id of the proposal. (readonly).    proposal-state=sed  The current state of the proposal. (readonly)    revision-number=no  The revision number for the proposal (readonly).    revision-time-ms=invidunt  The time (ms since epoch) when the proposal was last revised (readonly).    seller    account-id=rebum.  The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.    sub-account-id=labore  Optional sub-account id for the seller.     About Cursors  The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/proposals_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/proposals_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}