{
    "docs": [
        {
            "location": "/", 
            "text": "The \ntasks1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle tasks\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \ntasks\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-tasks1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \ntasks\n API at revision \n20141121\n. The CLI is at version \n1.0.8\n.\n\n\ntasks1 [options]\n        tasklists\n                delete \ntasklist\n [-p \nv\n]...\n                get \ntasklist\n [-p \nv\n]... [-o \nout\n]\n                insert (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list [-p \nv\n]... [-o \nout\n]\n                patch \ntasklist\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update \ntasklist\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        tasks\n                clear \ntasklist\n [-p \nv\n]...\n                delete \ntasklist\n \ntask\n [-p \nv\n]...\n                get \ntasklist\n \ntask\n [-p \nv\n]... [-o \nout\n]\n                insert \ntasklist\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                list \ntasklist\n [-p \nv\n]... [-o \nout\n]\n                move \ntasklist\n \ntask\n [-p \nv\n]... [-o \nout\n]\n                patch \ntasklist\n \ntask\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                update \ntasklist\n \ntask\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  tasks1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ntasks1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/tasks1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/tasks1-secret.json\n, assuming that the required \ntasks\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ntasks1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-tasks1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  tasks  API at revision  20141121 . The CLI is at version  1.0.8 .  tasks1 [options]\n        tasklists\n                delete  tasklist  [-p  v ]...\n                get  tasklist  [-p  v ]... [-o  out ]\n                insert (-r  kv )... [-p  v ]... [-o  out ]\n                list [-p  v ]... [-o  out ]\n                patch  tasklist  (-r  kv )... [-p  v ]... [-o  out ]\n                update  tasklist  (-r  kv )... [-p  v ]... [-o  out ]\n        tasks\n                clear  tasklist  [-p  v ]...\n                delete  tasklist   task  [-p  v ]...\n                get  tasklist   task  [-p  v ]... [-o  out ]\n                insert  tasklist  (-r  kv )... [-p  v ]... [-o  out ]\n                list  tasklist  [-p  v ]... [-o  out ]\n                move  tasklist   task  [-p  v ]... [-o  out ]\n                patch  tasklist   task  (-r  kv )... [-p  v ]... [-o  out ]\n                update  tasklist   task  (-r  kv )... [-p  v ]... [-o  out ]\n  tasks1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  tasks1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/tasks1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/tasks1-secret.json , assuming that the required  tasks  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  tasks1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/tasklists_delete/", 
            "text": "Deletes the authenticated user\ns specified task list.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasklists delete ...\n\n\nRequired Scalar Argument\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Delete"
        }, 
        {
            "location": "/tasklists_delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasklists delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasklists_delete/#required-scalar-argument", 
            "text": "tasklist   (string)  Task list identifier.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/tasklists_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasklists_get/", 
            "text": "Returns the authenticated user\ns specified task list.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/tasks\n\n\nhttps://www.googleapis.com/auth/tasks.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks.readonly\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasklists get ...\n\n\nRequired Scalar Argument\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Get"
        }, 
        {
            "location": "/tasklists_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/tasks  https://www.googleapis.com/auth/tasks.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks.readonly .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasklists get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasklists_get/#required-scalar-argument", 
            "text": "tasklist   (string)  Task list identifier.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/tasklists_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasklists_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasklists_insert/", 
            "text": "Creates a new task list and adds it to the authenticated user\ns task lists.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasklists insert ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTaskList:\n  etag: string\n  id: string\n  kind: string\n  self-link: string\n  title: string\n  updated: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    etag=eirmod\n\n\nETag of the resource.\n\n\n\n\n\n\nid=sit\n\n\nTask list identifier.\n\n\n\n\n\n\nkind=stet\n\n\nType of the resource. This is always \ntasks#taskList\n.\n\n\n\n\n\n\nself-link=sed\n\n\nURL pointing to this task list. Used to retrieve, update, or delete this task list.\n\n\n\n\n\n\ntitle=et\n\n\nTitle of the task list.\n\n\n\n\n\n\nupdated=dolores\n\n\nLast modification time of the task list (as a RFC 3339 timestamp).\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Insert"
        }, 
        {
            "location": "/tasklists_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasklists insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasklists_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  TaskList:\n  etag: string\n  id: string\n  kind: string\n  self-link: string\n  title: string\n  updated: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    etag=eirmod  ETag of the resource.    id=sit  Task list identifier.    kind=stet  Type of the resource. This is always  tasks#taskList .    self-link=sed  URL pointing to this task list. Used to retrieve, update, or delete this task list.    title=et  Title of the task list.    updated=dolores  Last modification time of the task list (as a RFC 3339 timestamp).", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/tasklists_insert/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/tasklists_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasklists_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasklists_list/", 
            "text": "Returns all the authenticated user\ns task lists.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/tasks\n\n\nhttps://www.googleapis.com/auth/tasks.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks.readonly\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasklists list ...\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p max-results=string\n\n\n\n\nMaximum number of task lists returned on one page. Optional. The default is 100.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken specifying the result page to return. Optional.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "List"
        }, 
        {
            "location": "/tasklists_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/tasks  https://www.googleapis.com/auth/tasks.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks.readonly .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasklists list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasklists_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasklists_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p max-results=string   Maximum number of task lists returned on one page. Optional. The default is 100.     -p page-token=string   Token specifying the result page to return. Optional.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/tasklists_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasklists_patch/", 
            "text": "Updates the authenticated user\ns specified task list. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasklists patch ...\n\n\nRequired Scalar Argument\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTaskList:\n  etag: string\n  id: string\n  kind: string\n  self-link: string\n  title: string\n  updated: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    etag=kasd\n\n\nETag of the resource.\n\n\n\n\n\n\nid=accusam\n\n\nTask list identifier.\n\n\n\n\n\n\nkind=takimata\n\n\nType of the resource. This is always \ntasks#taskList\n.\n\n\n\n\n\n\nself-link=justo\n\n\nURL pointing to this task list. Used to retrieve, update, or delete this task list.\n\n\n\n\n\n\ntitle=amet.\n\n\nTitle of the task list.\n\n\n\n\n\n\nupdated=erat\n\n\nLast modification time of the task list (as a RFC 3339 timestamp).\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Patch"
        }, 
        {
            "location": "/tasklists_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasklists patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasklists_patch/#required-scalar-argument", 
            "text": "tasklist   (string)  Task list identifier.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/tasklists_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  TaskList:\n  etag: string\n  id: string\n  kind: string\n  self-link: string\n  title: string\n  updated: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    etag=kasd  ETag of the resource.    id=accusam  Task list identifier.    kind=takimata  Type of the resource. This is always  tasks#taskList .    self-link=justo  URL pointing to this task list. Used to retrieve, update, or delete this task list.    title=amet.  Title of the task list.    updated=erat  Last modification time of the task list (as a RFC 3339 timestamp).", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/tasklists_patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/tasklists_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasklists_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasklists_update/", 
            "text": "Updates the authenticated user\ns specified task list.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasklists update ...\n\n\nRequired Scalar Argument\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTaskList:\n  etag: string\n  id: string\n  kind: string\n  self-link: string\n  title: string\n  updated: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    etag=labore\n\n\nETag of the resource.\n\n\n\n\n\n\nid=sea\n\n\nTask list identifier.\n\n\n\n\n\n\nkind=nonumy\n\n\nType of the resource. This is always \ntasks#taskList\n.\n\n\n\n\n\n\nself-link=dolores\n\n\nURL pointing to this task list. Used to retrieve, update, or delete this task list.\n\n\n\n\n\n\ntitle=gubergren\n\n\nTitle of the task list.\n\n\n\n\n\n\nupdated=sadipscing\n\n\nLast modification time of the task list (as a RFC 3339 timestamp).\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Update"
        }, 
        {
            "location": "/tasklists_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasklists update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasklists_update/#required-scalar-argument", 
            "text": "tasklist   (string)  Task list identifier.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/tasklists_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  TaskList:\n  etag: string\n  id: string\n  kind: string\n  self-link: string\n  title: string\n  updated: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    etag=labore  ETag of the resource.    id=sea  Task list identifier.    kind=nonumy  Type of the resource. This is always  tasks#taskList .    self-link=dolores  URL pointing to this task list. Used to retrieve, update, or delete this task list.    title=gubergren  Title of the task list.    updated=sadipscing  Last modification time of the task list (as a RFC 3339 timestamp).", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/tasklists_update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/tasklists_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasklists_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_clear/", 
            "text": "Clears all completed tasks from the specified task list. The affected tasks will be marked as \nhidden\n and no longer be returned by default when retrieving all tasks for a task list.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks clear ...\n\n\nRequired Scalar Argument\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Clear"
        }, 
        {
            "location": "/tasks_clear/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks clear ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_clear/#required-scalar-argument", 
            "text": "tasklist   (string)  Task list identifier.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/tasks_clear/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_delete/", 
            "text": "Deletes the specified task from the task list.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks delete ...\n\n\nRequired Scalar Arguments\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\ntask\n \n(string)\n\n\nTask identifier.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Delete"
        }, 
        {
            "location": "/tasks_delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_delete/#required-scalar-arguments", 
            "text": "tasklist   (string)  Task list identifier.    task   (string)  Task identifier.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/tasks_delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_get/", 
            "text": "Returns the specified task.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/tasks\n\n\nhttps://www.googleapis.com/auth/tasks.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks.readonly\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks get ...\n\n\nRequired Scalar Arguments\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\ntask\n \n(string)\n\n\nTask identifier.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Get"
        }, 
        {
            "location": "/tasks_get/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/tasks  https://www.googleapis.com/auth/tasks.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks.readonly .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_get/#required-scalar-arguments", 
            "text": "tasklist   (string)  Task list identifier.    task   (string)  Task identifier.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/tasks_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasks_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_insert/", 
            "text": "Creates a new task on the specified task list.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks insert ...\n\n\nRequired Scalar Argument\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTask:\n  completed: string\n  deleted: boolean\n  due: string\n  etag: string\n  hidden: boolean\n  id: string\n  kind: string\n  notes: string\n  parent: string\n  position: string\n  self-link: string\n  status: string\n  title: string\n  updated: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    completed=aliquyam\n\n\nCompletion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.\n\n\n\n\n\n\ndeleted=false\n\n\nFlag indicating whether the task has been deleted. The default if False.\n\n\n\n\n\n\ndue=no\n\n\nDue date of the task (as a RFC 3339 timestamp). Optional.\n\n\n\n\n\n\netag=justo\n\n\nETag of the resource.\n\n\n\n\n\n\nhidden=true\n\n\nFlag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.\n\n\n\n\n\n\nid=et\n\n\nTask identifier.\n\n\n\n\n\n\nkind=et\n\n\nType of the resource. This is always \ntasks#task\n.\n\n\n\n\n\n\nnotes=diam\n\n\nNotes describing the task. Optional.\n\n\n\n\n\n\nparent=ipsum\n\n\nParent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the \nmove\n method to move the task under a different parent or to the top level.\n\n\n\n\n\n\nposition=lorem\n\n\nString indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task\ns corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the \nmove\n method to move the task to another position.\n\n\n\n\n\n\nself-link=et\n\n\nURL pointing to this task. Used to retrieve, update, or delete this task.\n\n\n\n\n\n\nstatus=duo\n\n\nStatus of the task. This is either \nneedsAction\n or \ncompleted\n.\n\n\n\n\n\n\ntitle=aliquyam\n\n\nTitle of the task.\n\n\n\n\n\n\nupdated=sea\n\n\nLast modification time of the task (as a RFC 3339 timestamp).\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p previous=string\n\n\n\n\nPrevious sibling task identifier. If the task is created at the first position among its siblings, this parameter is omitted. Optional.\n\n\n\n\n\n\n\n\n-p parent=string\n\n\n\n\nParent task identifier. If the task is created at the top level, this parameter is omitted. Optional.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Insert"
        }, 
        {
            "location": "/tasks_insert/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks insert ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_insert/#required-scalar-argument", 
            "text": "tasklist   (string)  Task list identifier.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/tasks_insert/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Task:\n  completed: string\n  deleted: boolean\n  due: string\n  etag: string\n  hidden: boolean\n  id: string\n  kind: string\n  notes: string\n  parent: string\n  position: string\n  self-link: string\n  status: string\n  title: string\n  updated: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    completed=aliquyam  Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.    deleted=false  Flag indicating whether the task has been deleted. The default if False.    due=no  Due date of the task (as a RFC 3339 timestamp). Optional.    etag=justo  ETag of the resource.    hidden=true  Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.    id=et  Task identifier.    kind=et  Type of the resource. This is always  tasks#task .    notes=diam  Notes describing the task. Optional.    parent=ipsum  Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the  move  method to move the task under a different parent or to the top level.    position=lorem  String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task s corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the  move  method to move the task to another position.    self-link=et  URL pointing to this task. Used to retrieve, update, or delete this task.    status=duo  Status of the task. This is either  needsAction  or  completed .    title=aliquyam  Title of the task.    updated=sea  Last modification time of the task (as a RFC 3339 timestamp).", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/tasks_insert/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/tasks_insert/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasks_insert/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p previous=string   Previous sibling task identifier. If the task is created at the first position among its siblings, this parameter is omitted. Optional.     -p parent=string   Parent task identifier. If the task is created at the top level, this parameter is omitted. Optional.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/tasks_insert/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_list/", 
            "text": "Returns all tasks in the specified task list.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/tasks\n\n\nhttps://www.googleapis.com/auth/tasks.readonly\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks.readonly\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks list ...\n\n\nRequired Scalar Argument\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p due-max=string\n\n\n\n\nUpper bound for a task\ns due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.\n\n\n\n\n\n\n\n\n-p updated-min=string\n\n\n\n\nLower bound for a task\ns last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nToken specifying the result page to return. Optional.\n\n\n\n\n\n\n\n\n-p show-completed=boolean\n\n\n\n\nFlag indicating whether completed tasks are returned in the result. Optional. The default is True.\n\n\n\n\n\n\n\n\n-p show-deleted=boolean\n\n\n\n\nFlag indicating whether deleted tasks are returned in the result. Optional. The default is False.\n\n\n\n\n\n\n\n\n-p show-hidden=boolean\n\n\n\n\nFlag indicating whether hidden tasks are returned in the result. Optional. The default is False.\n\n\n\n\n\n\n\n\n-p max-results=string\n\n\n\n\nMaximum number of task lists returned on one page. Optional. The default is 100.\n\n\n\n\n\n\n\n\n-p completed-min=string\n\n\n\n\nLower bound for a task\ns completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.\n\n\n\n\n\n\n\n\n-p completed-max=string\n\n\n\n\nUpper bound for a task\ns completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.\n\n\n\n\n\n\n\n\n-p due-min=string\n\n\n\n\nLower bound for a task\ns due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "List"
        }, 
        {
            "location": "/tasks_list/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/tasks  https://www.googleapis.com/auth/tasks.readonly   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks.readonly .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_list/#required-scalar-argument", 
            "text": "tasklist   (string)  Task list identifier.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/tasks_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasks_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p due-max=string   Upper bound for a task s due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.     -p updated-min=string   Lower bound for a task s last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.     -p page-token=string   Token specifying the result page to return. Optional.     -p show-completed=boolean   Flag indicating whether completed tasks are returned in the result. Optional. The default is True.     -p show-deleted=boolean   Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.     -p show-hidden=boolean   Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.     -p max-results=string   Maximum number of task lists returned on one page. Optional. The default is 100.     -p completed-min=string   Lower bound for a task s completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.     -p completed-max=string   Upper bound for a task s completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.     -p due-min=string   Lower bound for a task s due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/tasks_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_move/", 
            "text": "Moves the specified task to another position in the task list. This can include putting it as a child task under a new parent and/or move it to a different position among its sibling tasks.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks move ...\n\n\nRequired Scalar Arguments\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\ntask\n \n(string)\n\n\nTask identifier.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p previous=string\n\n\n\n\nNew previous sibling task identifier. If the task is moved to the first position among its siblings, this parameter is omitted. Optional.\n\n\n\n\n\n\n\n\n-p parent=string\n\n\n\n\nNew parent task identifier. If the task is moved to the top level, this parameter is omitted. Optional.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Move"
        }, 
        {
            "location": "/tasks_move/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks move ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_move/#required-scalar-arguments", 
            "text": "tasklist   (string)  Task list identifier.    task   (string)  Task identifier.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/tasks_move/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasks_move/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p previous=string   New previous sibling task identifier. If the task is moved to the first position among its siblings, this parameter is omitted. Optional.     -p parent=string   New parent task identifier. If the task is moved to the top level, this parameter is omitted. Optional.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/tasks_move/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_patch/", 
            "text": "Updates the specified task. This method supports patch semantics.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks patch ...\n\n\nRequired Scalar Arguments\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\ntask\n \n(string)\n\n\nTask identifier.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTask:\n  completed: string\n  deleted: boolean\n  due: string\n  etag: string\n  hidden: boolean\n  id: string\n  kind: string\n  notes: string\n  parent: string\n  position: string\n  self-link: string\n  status: string\n  title: string\n  updated: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    completed=lorem\n\n\nCompletion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.\n\n\n\n\n\n\ndeleted=false\n\n\nFlag indicating whether the task has been deleted. The default if False.\n\n\n\n\n\n\ndue=erat\n\n\nDue date of the task (as a RFC 3339 timestamp). Optional.\n\n\n\n\n\n\netag=sadipscing\n\n\nETag of the resource.\n\n\n\n\n\n\nhidden=true\n\n\nFlag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.\n\n\n\n\n\n\nid=eirmod\n\n\nTask identifier.\n\n\n\n\n\n\nkind=elitr\n\n\nType of the resource. This is always \ntasks#task\n.\n\n\n\n\n\n\nnotes=amet\n\n\nNotes describing the task. Optional.\n\n\n\n\n\n\nparent=no\n\n\nParent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the \nmove\n method to move the task under a different parent or to the top level.\n\n\n\n\n\n\nposition=labore\n\n\nString indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task\ns corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the \nmove\n method to move the task to another position.\n\n\n\n\n\n\nself-link=eirmod\n\n\nURL pointing to this task. Used to retrieve, update, or delete this task.\n\n\n\n\n\n\nstatus=dolore\n\n\nStatus of the task. This is either \nneedsAction\n or \ncompleted\n.\n\n\n\n\n\n\ntitle=invidunt\n\n\nTitle of the task.\n\n\n\n\n\n\nupdated=aliquyam\n\n\nLast modification time of the task (as a RFC 3339 timestamp).\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Patch"
        }, 
        {
            "location": "/tasks_patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_patch/#required-scalar-arguments", 
            "text": "tasklist   (string)  Task list identifier.    task   (string)  Task identifier.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/tasks_patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Task:\n  completed: string\n  deleted: boolean\n  due: string\n  etag: string\n  hidden: boolean\n  id: string\n  kind: string\n  notes: string\n  parent: string\n  position: string\n  self-link: string\n  status: string\n  title: string\n  updated: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    completed=lorem  Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.    deleted=false  Flag indicating whether the task has been deleted. The default if False.    due=erat  Due date of the task (as a RFC 3339 timestamp). Optional.    etag=sadipscing  ETag of the resource.    hidden=true  Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.    id=eirmod  Task identifier.    kind=elitr  Type of the resource. This is always  tasks#task .    notes=amet  Notes describing the task. Optional.    parent=no  Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the  move  method to move the task under a different parent or to the top level.    position=labore  String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task s corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the  move  method to move the task to another position.    self-link=eirmod  URL pointing to this task. Used to retrieve, update, or delete this task.    status=dolore  Status of the task. This is either  needsAction  or  completed .    title=invidunt  Title of the task.    updated=aliquyam  Last modification time of the task (as a RFC 3339 timestamp).", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/tasks_patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/tasks_patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasks_patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/tasks_update/", 
            "text": "Updates the specified task.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/tasks\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/tasks\n.\nYou can set the scope for this method like this: \ntasks1 --scope \nscope\n tasks update ...\n\n\nRequired Scalar Arguments\n\n\n\n\ntasklist\n \n(string)\n\n\nTask list identifier.\n\n\n\n\n\n\ntask\n \n(string)\n\n\nTask identifier.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nTask:\n  completed: string\n  deleted: boolean\n  due: string\n  etag: string\n  hidden: boolean\n  id: string\n  kind: string\n  notes: string\n  parent: string\n  position: string\n  self-link: string\n  status: string\n  title: string\n  updated: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    completed=accusam\n\n\nCompletion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.\n\n\n\n\n\n\ndeleted=false\n\n\nFlag indicating whether the task has been deleted. The default if False.\n\n\n\n\n\n\ndue=sea\n\n\nDue date of the task (as a RFC 3339 timestamp). Optional.\n\n\n\n\n\n\netag=et\n\n\nETag of the resource.\n\n\n\n\n\n\nhidden=false\n\n\nFlag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.\n\n\n\n\n\n\nid=et\n\n\nTask identifier.\n\n\n\n\n\n\nkind=eirmod\n\n\nType of the resource. This is always \ntasks#task\n.\n\n\n\n\n\n\nnotes=sanctus\n\n\nNotes describing the task. Optional.\n\n\n\n\n\n\nparent=et\n\n\nParent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the \nmove\n method to move the task under a different parent or to the top level.\n\n\n\n\n\n\nposition=amet\n\n\nString indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task\ns corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the \nmove\n method to move the task to another position.\n\n\n\n\n\n\nself-link=et\n\n\nURL pointing to this task. Used to retrieve, update, or delete this task.\n\n\n\n\n\n\nstatus=consetetur\n\n\nStatus of the task. This is either \nneedsAction\n or \ncompleted\n.\n\n\n\n\n\n\ntitle=ut\n\n\nTitle of the task.\n\n\n\n\n\n\nupdated=ea\n\n\nLast modification time of the task (as a RFC 3339 timestamp).\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAn opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nDeprecated. Please use quotaUser instead.", 
            "title": "Update"
        }, 
        {
            "location": "/tasks_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/tasks  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/tasks .\nYou can set the scope for this method like this:  tasks1 --scope  scope  tasks update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/tasks_update/#required-scalar-arguments", 
            "text": "tasklist   (string)  Task list identifier.    task   (string)  Task identifier.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/tasks_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Task:\n  completed: string\n  deleted: boolean\n  due: string\n  etag: string\n  hidden: boolean\n  id: string\n  kind: string\n  notes: string\n  parent: string\n  position: string\n  self-link: string\n  status: string\n  title: string\n  updated: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    completed=accusam  Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.    deleted=false  Flag indicating whether the task has been deleted. The default if False.    due=sea  Due date of the task (as a RFC 3339 timestamp). Optional.    etag=et  ETag of the resource.    hidden=false  Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.    id=et  Task identifier.    kind=eirmod  Type of the resource. This is always  tasks#task .    notes=sanctus  Notes describing the task. Optional.    parent=et  Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the  move  method to move the task under a different parent or to the top level.    position=amet  String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task s corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the  move  method to move the task to another position.    self-link=et  URL pointing to this task. Used to retrieve, update, or delete this task.    status=consetetur  Status of the task. This is either  needsAction  or  completed .    title=ut  Title of the task.    updated=ea  Last modification time of the task (as a RFC 3339 timestamp).", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/tasks_update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/tasks_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/tasks_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   An opaque string that represents a user for quota purposes. Must not exceed 40 characters.     -p user-ip=string   Deprecated. Please use quotaUser instead.", 
            "title": "Optional General Properties"
        }
    ]
}