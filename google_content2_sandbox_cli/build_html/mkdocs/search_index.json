{
    "docs": [
        {
            "location": "/", 
            "text": "The \ncontent2-sandbox\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Shopping Content\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nShopping Content\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-content2_sandbox-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nShopping Content\n API at revision \n20161205\n. The CLI is at version \n1.0.0\n.\n\n\ncontent2-sandbox [options]\n        orders\n                acknowledge \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                advancetestorder \nmerchant-id\n \norder-id\n [-p \nv\n]... [-o \nout\n]\n                cancel \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                cancellineitem \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                createtestorder \nmerchant-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                custombatch (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                get \nmerchant-id\n \norder-id\n [-p \nv\n]... [-o \nout\n]\n                getbymerchantorderid \nmerchant-id\n \nmerchant-order-id\n [-p \nv\n]... [-o \nout\n]\n                gettestordertemplate \nmerchant-id\n \ntemplate-name\n [-p \nv\n]... [-o \nout\n]\n                list \nmerchant-id\n [-p \nv\n]... [-o \nout\n]\n                refund \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                returnlineitem \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                shiplineitems \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                updatemerchantorderid \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                updateshipment \nmerchant-id\n \norder-id\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  content2-sandbox --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ncontent2-sandbox-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/content2-sandbox-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/content2-sandbox-secret.json\n, assuming that the required \ncontent\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ncontent2-sandbox --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-content2_sandbox-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Shopping Content  API at revision  20161205 . The CLI is at version  1.0.0 .  content2-sandbox [options]\n        orders\n                acknowledge  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n                advancetestorder  merchant-id   order-id  [-p  v ]... [-o  out ]\n                cancel  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n                cancellineitem  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n                createtestorder  merchant-id  (-r  kv )... [-p  v ]... [-o  out ]\n                custombatch (-r  kv )... [-p  v ]... [-o  out ]\n                get  merchant-id   order-id  [-p  v ]... [-o  out ]\n                getbymerchantorderid  merchant-id   merchant-order-id  [-p  v ]... [-o  out ]\n                gettestordertemplate  merchant-id   template-name  [-p  v ]... [-o  out ]\n                list  merchant-id  [-p  v ]... [-o  out ]\n                refund  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n                returnlineitem  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n                shiplineitems  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n                updatemerchantorderid  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n                updateshipment  merchant-id   order-id  (-r  kv )... [-p  v ]... [-o  out ]\n  content2-sandbox --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  content2-sandbox- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/content2-sandbox-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/content2-sandbox-secret.json , assuming that the required  content  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  content2-sandbox --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/orders_acknowledge/", 
            "text": "Marks an order as acknowledged. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders acknowledge ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersAcknowledgeRequest:\n  operation-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    operation-id=eirmod\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Acknowledge"
        }, 
        {
            "location": "/orders_acknowledge/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders acknowledge ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_acknowledge/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_acknowledge/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersAcknowledgeRequest:\n  operation-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    operation-id=eirmod  The ID of the operation. Unique across all operations for a given order.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_acknowledge/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_acknowledge/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_acknowledge/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_advancetestorder/", 
            "text": "Sandbox only. Moves a test order from state \ninProgress\n to state \npendingShipment\n. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders advancetestorder ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the test order to modify.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Advancetestorder"
        }, 
        {
            "location": "/orders_advancetestorder/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders advancetestorder ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_advancetestorder/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the test order to modify.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_advancetestorder/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_advancetestorder/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_cancel/", 
            "text": "Cancels all line items in an order. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders cancel ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order to cancel.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersCancelRequest:\n  operation-id: string\n  reason: string\n  reason-text: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    operation-id=sit\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\nreason=stet\n\n\nThe reason for the cancellation.\n\n\n\n\n\n\nreason-text=sed\n\n\nThe explanation of the reason.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Cancel"
        }, 
        {
            "location": "/orders_cancel/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders cancel ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_cancel/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order to cancel.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_cancel/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersCancelRequest:\n  operation-id: string\n  reason: string\n  reason-text: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    operation-id=sit  The ID of the operation. Unique across all operations for a given order.    reason=stet  The reason for the cancellation.    reason-text=sed  The explanation of the reason.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_cancel/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_cancel/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_cancel/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_cancellineitem/", 
            "text": "Cancels a line item. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders cancellineitem ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersCancelLineItemRequest:\n  amount:\n    currency: string\n    value: string\n  line-item-id: string\n  operation-id: string\n  quantity: integer\n  reason: string\n  reason-text: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .amount    currency=et\n\n\nThe currency of the price.\n\n\n\n\n\n\n\n\nvalue=dolores\n\n\n\n\nThe price represented as a number.\n\n\n\n\n\n\n\n\n..    line-item-id=kasd\n\n\n\n\nThe ID of the line item to cancel.\n\n\n\n\n\n\noperation-id=accusam\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\nquantity=93\n\n\nThe quantity to cancel.\n\n\n\n\n\n\nreason=justo\n\n\nThe reason for the cancellation.\n\n\n\n\n\n\nreason-text=amet.\n\n\nThe explanation of the reason.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Cancellineitem"
        }, 
        {
            "location": "/orders_cancellineitem/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders cancellineitem ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_cancellineitem/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_cancellineitem/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersCancelLineItemRequest:\n  amount:\n    currency: string\n    value: string\n  line-item-id: string\n  operation-id: string\n  quantity: integer\n  reason: string\n  reason-text: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .amount    currency=et  The currency of the price.     value=dolores   The price represented as a number.     ..    line-item-id=kasd   The ID of the line item to cancel.    operation-id=accusam  The ID of the operation. Unique across all operations for a given order.    quantity=93  The quantity to cancel.    reason=justo  The reason for the cancellation.    reason-text=amet.  The explanation of the reason.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_cancellineitem/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_cancellineitem/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_cancellineitem/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_createtestorder/", 
            "text": "Sandbox only. Creates a test order. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders createtestorder ...\n\n\nRequired Scalar Argument\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersCreateTestOrderRequest:\n  template-name: string\n  test-order:\n    customer:\n      email: string\n      explicit-marketing-preference: boolean\n      full-name: string\n    kind: string\n    payment-method:\n      expiration-month: integer\n      expiration-year: integer\n      last-four-digits: string\n      predefined-billing-address: string\n      type: string\n    predefined-delivery-address: string\n    shipping-cost:\n      currency: string\n      value: string\n    shipping-cost-tax:\n      currency: string\n      value: string\n    shipping-option: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    template-name=erat\n\n\nThe test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template.\n\n\n\n\n\n\ntest-order.customer    email=labore\n\n\nEmail address of the customer.\n\n\n\n\n\n\nexplicit-marketing-preference=true\n\n\nIf set, this indicates the user explicitly chose to opt in or out of providing marketing rights to the merchant. If unset, this indicates the user has already made this choice in a previous purchase, and was thus not shown the marketing right opt in/out checkbox during the checkout flow. Optional.\n\n\n\n\n\n\n\n\nfull-name=nonumy\n\n\n\n\nFull name of the customer.\n\n\n\n\n\n\n\n\n..    kind=dolores\n\n\n\n\nIdentifies what kind of resource this is. Value: the fixed string \ncontent#testOrder\n.\n\n\n\n\n\n\npayment-method    expiration-month=40\n\n\nThe card expiration month (January = 1, February = 2 etc.).\n\n\n\n\n\n\nexpiration-year=6\n\n\nThe card expiration year (4-digit, e.g. 2015).\n\n\n\n\n\n\nlast-four-digits=aliquyam\n\n\nThe last four digits of the card number.\n\n\n\n\n\n\npredefined-billing-address=ea\n\n\nThe billing address.\n\n\n\n\n\n\n\n\ntype=no\n\n\n\n\nThe type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder.\n\n\n\n\n\n\n\n\n..    predefined-delivery-address=justo\n\n\n\n\nIdentifier of one of the predefined delivery addresses for the delivery.\n\n\n\n\n\n\nshipping-cost    currency=justo\n\n\nThe currency of the price.\n\n\n\n\n\n\n\n\nvalue=et\n\n\n\n\nThe price represented as a number.\n\n\n\n\n\n\n\n\n..shipping-cost-tax    currency=et\n\n\n\n\nThe currency of the price.\n\n\n\n\n\n\n\n\nvalue=diam\n\n\n\n\nThe price represented as a number.\n\n\n\n\n\n\n\n\n..    shipping-option=ipsum\n\n\n\n\nThe requested shipping option.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Createtestorder"
        }, 
        {
            "location": "/orders_createtestorder/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders createtestorder ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_createtestorder/#required-scalar-argument", 
            "text": "merchant-id   (string)  The ID of the managing account.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/orders_createtestorder/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersCreateTestOrderRequest:\n  template-name: string\n  test-order:\n    customer:\n      email: string\n      explicit-marketing-preference: boolean\n      full-name: string\n    kind: string\n    payment-method:\n      expiration-month: integer\n      expiration-year: integer\n      last-four-digits: string\n      predefined-billing-address: string\n      type: string\n    predefined-delivery-address: string\n    shipping-cost:\n      currency: string\n      value: string\n    shipping-cost-tax:\n      currency: string\n      value: string\n    shipping-option: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    template-name=erat  The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template.    test-order.customer    email=labore  Email address of the customer.    explicit-marketing-preference=true  If set, this indicates the user explicitly chose to opt in or out of providing marketing rights to the merchant. If unset, this indicates the user has already made this choice in a previous purchase, and was thus not shown the marketing right opt in/out checkbox during the checkout flow. Optional.     full-name=nonumy   Full name of the customer.     ..    kind=dolores   Identifies what kind of resource this is. Value: the fixed string  content#testOrder .    payment-method    expiration-month=40  The card expiration month (January = 1, February = 2 etc.).    expiration-year=6  The card expiration year (4-digit, e.g. 2015).    last-four-digits=aliquyam  The last four digits of the card number.    predefined-billing-address=ea  The billing address.     type=no   The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder.     ..    predefined-delivery-address=justo   Identifier of one of the predefined delivery addresses for the delivery.    shipping-cost    currency=justo  The currency of the price.     value=et   The price represented as a number.     ..shipping-cost-tax    currency=et   The currency of the price.     value=diam   The price represented as a number.     ..    shipping-option=ipsum   The requested shipping option.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_createtestorder/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_createtestorder/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_createtestorder/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_custombatch/", 
            "text": "Retrieves or modifies multiple orders in a single request. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders custombatch ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersCustomBatchRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Custombatch"
        }, 
        {
            "location": "/orders_custombatch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders custombatch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_custombatch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersCustomBatchRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_custombatch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_custombatch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_custombatch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_get/", 
            "text": "Retrieves an order from your Merchant Center account. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders get ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get"
        }, 
        {
            "location": "/orders_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_get/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_getbymerchantorderid/", 
            "text": "Retrieves an order using merchant order id. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders getbymerchantorderid ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\nmerchant-order-id\n \n(string)\n\n\nThe merchant order id to be looked for.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Getbymerchantorderid"
        }, 
        {
            "location": "/orders_getbymerchantorderid/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders getbymerchantorderid ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_getbymerchantorderid/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    merchant-order-id   (string)  The merchant order id to be looked for.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_getbymerchantorderid/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_getbymerchantorderid/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_gettestordertemplate/", 
            "text": "Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders gettestordertemplate ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\ntemplate-name\n \n(string)\n\n\nThe name of the template to retrieve.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Gettestordertemplate"
        }, 
        {
            "location": "/orders_gettestordertemplate/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders gettestordertemplate ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_gettestordertemplate/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    template-name   (string)  The name of the template to retrieve.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_gettestordertemplate/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_gettestordertemplate/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_list/", 
            "text": "Lists the orders in your Merchant Center account. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders list ...\n\n\nRequired Scalar Argument\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p order-by=string\n\n\n\n\nThe ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date. \nplacedDate desc\n stands for listing orders by placement date, from oldest to most recent. \nplacedDate asc\n stands for listing orders by placement date, from most recent to oldest. In future releases we\nll support other sorting criteria.\n\n\n\n\n\n\n\n\n-p acknowledged=boolean\n\n\n\n\nObtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged.\n    We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.\n\n\n\n\n\n\n\n\n-p statuses=string\n\n\n\n\nObtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled.\n\n\n\n\n\n\n\n\n-p placed-date-end=string\n\n\n\n\nObtains orders placed before this date (exclusively), in ISO 8601 format.\n\n\n\n\n\n\n\n\n-p placed-date-start=string\n\n\n\n\nObtains orders placed after this date (inclusively), in ISO 8601 format.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe token returned by the previous request.\n\n\n\n\n\n\n\n\n-p max-results=integer\n\n\n\n\nThe maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.\n    Known issue: All List calls will return all Orders without limit regardless of the value of this field.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "List"
        }, 
        {
            "location": "/orders_list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_list/#required-scalar-argument", 
            "text": "merchant-id   (string)  The ID of the managing account.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/orders_list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p order-by=string   The ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date.  placedDate desc  stands for listing orders by placement date, from oldest to most recent.  placedDate asc  stands for listing orders by placement date, from most recent to oldest. In future releases we ll support other sorting criteria.     -p acknowledged=boolean   Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged.\n    We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.     -p statuses=string   Obtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled.     -p placed-date-end=string   Obtains orders placed before this date (exclusively), in ISO 8601 format.     -p placed-date-start=string   Obtains orders placed after this date (inclusively), in ISO 8601 format.     -p page-token=string   The token returned by the previous request.     -p max-results=integer   The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.\n    Known issue: All List calls will return all Orders without limit regardless of the value of this field.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/orders_list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_refund/", 
            "text": "Refund a portion of the order, up to the full amount paid. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders refund ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order to refund.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersRefundRequest:\n  amount:\n    currency: string\n    value: string\n  operation-id: string\n  reason: string\n  reason-text: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .amount    currency=lorem\n\n\nThe currency of the price.\n\n\n\n\n\n\n\n\nvalue=et\n\n\n\n\nThe price represented as a number.\n\n\n\n\n\n\n\n\n..    operation-id=duo\n\n\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\nreason=aliquyam\n\n\nThe reason for the refund.\n\n\n\n\n\n\nreason-text=sea\n\n\nThe explanation of the reason.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Refund"
        }, 
        {
            "location": "/orders_refund/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders refund ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_refund/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order to refund.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_refund/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersRefundRequest:\n  amount:\n    currency: string\n    value: string\n  operation-id: string\n  reason: string\n  reason-text: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .amount    currency=lorem  The currency of the price.     value=et   The price represented as a number.     ..    operation-id=duo   The ID of the operation. Unique across all operations for a given order.    reason=aliquyam  The reason for the refund.    reason-text=sea  The explanation of the reason.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_refund/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_refund/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_refund/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_returnlineitem/", 
            "text": "Returns a line item. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders returnlineitem ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersReturnLineItemRequest:\n  line-item-id: string\n  operation-id: string\n  quantity: integer\n  reason: string\n  reason-text: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    line-item-id=lorem\n\n\nThe ID of the line item to return.\n\n\n\n\n\n\noperation-id=eos\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\nquantity=20\n\n\nThe quantity to return.\n\n\n\n\n\n\nreason=sadipscing\n\n\nThe reason for the return.\n\n\n\n\n\n\nreason-text=dolor\n\n\nThe explanation of the reason.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Returnlineitem"
        }, 
        {
            "location": "/orders_returnlineitem/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders returnlineitem ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_returnlineitem/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_returnlineitem/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersReturnLineItemRequest:\n  line-item-id: string\n  operation-id: string\n  quantity: integer\n  reason: string\n  reason-text: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    line-item-id=lorem  The ID of the line item to return.    operation-id=eos  The ID of the operation. Unique across all operations for a given order.    quantity=20  The quantity to return.    reason=sadipscing  The reason for the return.    reason-text=dolor  The explanation of the reason.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_returnlineitem/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_returnlineitem/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_returnlineitem/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_shiplineitems/", 
            "text": "Marks line item(s) as shipped. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders shiplineitems ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersShipLineItemsRequest:\n  carrier: string\n  operation-id: string\n  shipment-id: string\n  tracking-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    carrier=eirmod\n\n\nThe carrier handling the shipment.\n\n\n\n\n\n\noperation-id=elitr\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\nshipment-id=amet\n\n\nThe ID of the shipment.\n\n\n\n\n\n\ntracking-id=no\n\n\nThe tracking id for the shipment.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Shiplineitems"
        }, 
        {
            "location": "/orders_shiplineitems/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders shiplineitems ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_shiplineitems/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_shiplineitems/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersShipLineItemsRequest:\n  carrier: string\n  operation-id: string\n  shipment-id: string\n  tracking-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    carrier=eirmod  The carrier handling the shipment.    operation-id=elitr  The ID of the operation. Unique across all operations for a given order.    shipment-id=amet  The ID of the shipment.    tracking-id=no  The tracking id for the shipment.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_shiplineitems/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_shiplineitems/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_shiplineitems/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_updatemerchantorderid/", 
            "text": "Updates the merchant order ID for a given order. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders updatemerchantorderid ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersUpdateMerchantOrderIdRequest:\n  merchant-order-id: string\n  operation-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    merchant-order-id=labore\n\n\nThe merchant order id to be assigned to the order. Must be unique per merchant.\n\n\n\n\n\n\noperation-id=eirmod\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Updatemerchantorderid"
        }, 
        {
            "location": "/orders_updatemerchantorderid/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders updatemerchantorderid ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_updatemerchantorderid/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_updatemerchantorderid/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersUpdateMerchantOrderIdRequest:\n  merchant-order-id: string\n  operation-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    merchant-order-id=labore  The merchant order id to be assigned to the order. Must be unique per merchant.    operation-id=eirmod  The ID of the operation. Unique across all operations for a given order.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_updatemerchantorderid/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_updatemerchantorderid/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_updatemerchantorderid/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/orders_updateshipment/", 
            "text": "Updates a shipment\ns status, carrier, and/or tracking ID. This method can only be called for non-multi-client accounts.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/content\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/content\n.\nYou can set the scope for this method like this: \ncontent2-sandbox --scope \nscope\n orders updateshipment ...\n\n\nRequired Scalar Arguments\n\n\n\n\nmerchant-id\n \n(string)\n\n\nThe ID of the managing account.\n\n\n\n\n\n\norder-id\n \n(string)\n\n\nThe ID of the order.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nOrdersUpdateShipmentRequest:\n  carrier: string\n  operation-id: string\n  shipment-id: string\n  status: string\n  tracking-id: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    carrier=dolore\n\n\nThe carrier handling the shipment. Not updated if missing.\n\n\n\n\n\n\noperation-id=invidunt\n\n\nThe ID of the operation. Unique across all operations for a given order.\n\n\n\n\n\n\nshipment-id=aliquyam\n\n\nThe ID of the shipment.\n\n\n\n\n\n\nstatus=accusam\n\n\nNew status for the shipment. Not updated if missing.\n\n\n\n\n\n\ntracking-id=lorem\n\n\nThe tracking id for the shipment. Not updated if missing.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Updateshipment"
        }, 
        {
            "location": "/orders_updateshipment/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/content  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/content .\nYou can set the scope for this method like this:  content2-sandbox --scope  scope  orders updateshipment ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/orders_updateshipment/#required-scalar-arguments", 
            "text": "merchant-id   (string)  The ID of the managing account.    order-id   (string)  The ID of the order.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/orders_updateshipment/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  OrdersUpdateShipmentRequest:\n  carrier: string\n  operation-id: string\n  shipment-id: string\n  status: string\n  tracking-id: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    carrier=dolore  The carrier handling the shipment. Not updated if missing.    operation-id=invidunt  The ID of the operation. Unique across all operations for a given order.    shipment-id=aliquyam  The ID of the shipment.    status=accusam  New status for the shipment. Not updated if missing.    tracking-id=lorem  The tracking id for the shipment. Not updated if missing.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/orders_updateshipment/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/orders_updateshipment/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/orders_updateshipment/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}