{
    "docs": [
        {
            "location": "/", 
            "text": "The \nlanguage1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Cloud Natural Language\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nCloud Natural Language\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-language1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nCloud Natural Language\n API at revision \n20171204\n. The CLI is at version \n1.0.7\n.\n\n\nlanguage1 [options]\n        documents\n                analyze-entities (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                analyze-entity-sentiment (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                analyze-sentiment (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                analyze-syntax (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                annotate-text (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                classify-text (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  language1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nlanguage1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/language1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/language1-secret.json\n, assuming that the required \nlanguage\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nlanguage1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-language1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Cloud Natural Language  API at revision  20171204 . The CLI is at version  1.0.7 .  language1 [options]\n        documents\n                analyze-entities (-r  kv )... [-p  v ]... [-o  out ]\n                analyze-entity-sentiment (-r  kv )... [-p  v ]... [-o  out ]\n                analyze-sentiment (-r  kv )... [-p  v ]... [-o  out ]\n                analyze-syntax (-r  kv )... [-p  v ]... [-o  out ]\n                annotate-text (-r  kv )... [-p  v ]... [-o  out ]\n                classify-text (-r  kv )... [-p  v ]... [-o  out ]\n  language1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  language1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/language1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/language1-secret.json , assuming that the required  language  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  language1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/documents_analyze-entities/", 
            "text": "Finds named entities (currently proper names and common nouns) in the text\nalong with entity types, salience, mentions for each entity, and\nother properties.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-language\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-language\n.\nYou can set the scope for this method like this: \nlanguage1 --scope \nscope\n documents analyze-entities ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAnalyzeEntitiesRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .document    content=eirmod\n\n\nThe content of the input in string format.\n\n\n\n\n\n\ngcs-content-uri=sit\n\n\nThe Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.\n\n\n\n\n\n\nlanguage=stet\n\n\nThe language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted.\nbr\n\n    \nLanguage Support\n\n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an \nINVALID_ARGUMENT\n error\n    is returned.\n\n\n\n\n\n\n\n\ntype=sed\n\n\n\n\nRequired. If the type is not set or is \nTYPE_UNSPECIFIED\n,\n    returns an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\n\n\n..    encoding-type=et\n\n\n\n\nThe encoding type used by the API to calculate offsets.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Analyze Entities"
        }, 
        {
            "location": "/documents_analyze-entities/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-language  https://www.googleapis.com/auth/cloud-platform   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-language .\nYou can set the scope for this method like this:  language1 --scope  scope  documents analyze-entities ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/documents_analyze-entities/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AnalyzeEntitiesRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .document    content=eirmod  The content of the input in string format.    gcs-content-uri=sit  The Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.    language=stet  The language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted. br \n     Language Support \n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an  INVALID_ARGUMENT  error\n    is returned.     type=sed   Required. If the type is not set or is  TYPE_UNSPECIFIED ,\n    returns an  INVALID_ARGUMENT  error.     ..    encoding-type=et   The encoding type used by the API to calculate offsets.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/documents_analyze-entities/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/documents_analyze-entities/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/documents_analyze-entities/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/documents_analyze-entity-sentiment/", 
            "text": "Finds entities, similar to AnalyzeEntities in the text and analyzes\nsentiment associated with each entity and its mentions.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-language\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-language\n.\nYou can set the scope for this method like this: \nlanguage1 --scope \nscope\n documents analyze-entity-sentiment ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAnalyzeEntitySentimentRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .document    content=dolores\n\n\nThe content of the input in string format.\n\n\n\n\n\n\ngcs-content-uri=kasd\n\n\nThe Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.\n\n\n\n\n\n\nlanguage=accusam\n\n\nThe language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted.\nbr\n\n    \nLanguage Support\n\n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an \nINVALID_ARGUMENT\n error\n    is returned.\n\n\n\n\n\n\n\n\ntype=takimata\n\n\n\n\nRequired. If the type is not set or is \nTYPE_UNSPECIFIED\n,\n    returns an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\n\n\n..    encoding-type=justo\n\n\n\n\nThe encoding type used by the API to calculate offsets.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Analyze Entity Sentiment"
        }, 
        {
            "location": "/documents_analyze-entity-sentiment/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-language  https://www.googleapis.com/auth/cloud-platform   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-language .\nYou can set the scope for this method like this:  language1 --scope  scope  documents analyze-entity-sentiment ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/documents_analyze-entity-sentiment/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AnalyzeEntitySentimentRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .document    content=dolores  The content of the input in string format.    gcs-content-uri=kasd  The Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.    language=accusam  The language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted. br \n     Language Support \n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an  INVALID_ARGUMENT  error\n    is returned.     type=takimata   Required. If the type is not set or is  TYPE_UNSPECIFIED ,\n    returns an  INVALID_ARGUMENT  error.     ..    encoding-type=justo   The encoding type used by the API to calculate offsets.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/documents_analyze-entity-sentiment/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/documents_analyze-entity-sentiment/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/documents_analyze-entity-sentiment/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/documents_analyze-sentiment/", 
            "text": "Analyzes the sentiment of the provided text.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-language\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-language\n.\nYou can set the scope for this method like this: \nlanguage1 --scope \nscope\n documents analyze-sentiment ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAnalyzeSentimentRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .document    content=amet.\n\n\nThe content of the input in string format.\n\n\n\n\n\n\ngcs-content-uri=erat\n\n\nThe Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.\n\n\n\n\n\n\nlanguage=labore\n\n\nThe language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted.\nbr\n\n    \nLanguage Support\n\n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an \nINVALID_ARGUMENT\n error\n    is returned.\n\n\n\n\n\n\n\n\ntype=sea\n\n\n\n\nRequired. If the type is not set or is \nTYPE_UNSPECIFIED\n,\n    returns an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\n\n\n..    encoding-type=nonumy\n\n\n\n\nThe encoding type used by the API to calculate sentence offsets.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Analyze Sentiment"
        }, 
        {
            "location": "/documents_analyze-sentiment/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-language  https://www.googleapis.com/auth/cloud-platform   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-language .\nYou can set the scope for this method like this:  language1 --scope  scope  documents analyze-sentiment ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/documents_analyze-sentiment/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AnalyzeSentimentRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .document    content=amet.  The content of the input in string format.    gcs-content-uri=erat  The Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.    language=labore  The language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted. br \n     Language Support \n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an  INVALID_ARGUMENT  error\n    is returned.     type=sea   Required. If the type is not set or is  TYPE_UNSPECIFIED ,\n    returns an  INVALID_ARGUMENT  error.     ..    encoding-type=nonumy   The encoding type used by the API to calculate sentence offsets.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/documents_analyze-sentiment/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/documents_analyze-sentiment/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/documents_analyze-sentiment/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/documents_analyze-syntax/", 
            "text": "Analyzes the syntax of the text and provides sentence boundaries and\ntokenization along with part of speech tags, dependency trees, and other\nproperties.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-language\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-language\n.\nYou can set the scope for this method like this: \nlanguage1 --scope \nscope\n documents analyze-syntax ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAnalyzeSyntaxRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .document    content=dolores\n\n\nThe content of the input in string format.\n\n\n\n\n\n\ngcs-content-uri=gubergren\n\n\nThe Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.\n\n\n\n\n\n\nlanguage=sadipscing\n\n\nThe language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted.\nbr\n\n    \nLanguage Support\n\n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an \nINVALID_ARGUMENT\n error\n    is returned.\n\n\n\n\n\n\n\n\ntype=aliquyam\n\n\n\n\nRequired. If the type is not set or is \nTYPE_UNSPECIFIED\n,\n    returns an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\n\n\n..    encoding-type=ea\n\n\n\n\nThe encoding type used by the API to calculate offsets.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Analyze Syntax"
        }, 
        {
            "location": "/documents_analyze-syntax/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-language  https://www.googleapis.com/auth/cloud-platform   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-language .\nYou can set the scope for this method like this:  language1 --scope  scope  documents analyze-syntax ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/documents_analyze-syntax/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AnalyzeSyntaxRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .document    content=dolores  The content of the input in string format.    gcs-content-uri=gubergren  The Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.    language=sadipscing  The language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted. br \n     Language Support \n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an  INVALID_ARGUMENT  error\n    is returned.     type=aliquyam   Required. If the type is not set or is  TYPE_UNSPECIFIED ,\n    returns an  INVALID_ARGUMENT  error.     ..    encoding-type=ea   The encoding type used by the API to calculate offsets.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/documents_analyze-syntax/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/documents_analyze-syntax/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/documents_analyze-syntax/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/documents_annotate-text/", 
            "text": "A convenience method that provides all the features that analyzeSentiment,\nanalyzeEntities, and analyzeSyntax provide in one call.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-language\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-language\n.\nYou can set the scope for this method like this: \nlanguage1 --scope \nscope\n documents annotate-text ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nAnnotateTextRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string\n  features:\n    classify-text: boolean\n    extract-document-sentiment: boolean\n    extract-entities: boolean\n    extract-entity-sentiment: boolean\n    extract-syntax: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .document    content=no\n\n\nThe content of the input in string format.\n\n\n\n\n\n\ngcs-content-uri=justo\n\n\nThe Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.\n\n\n\n\n\n\nlanguage=justo\n\n\nThe language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted.\nbr\n\n    \nLanguage Support\n\n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an \nINVALID_ARGUMENT\n error\n    is returned.\n\n\n\n\n\n\n\n\ntype=et\n\n\n\n\nRequired. If the type is not set or is \nTYPE_UNSPECIFIED\n,\n    returns an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\n\n\n..    encoding-type=et\n\n\n\n\nThe encoding type used by the API to calculate offsets.\n\n\n\n\n\n\nfeatures    classify-text=true\n\n\nClassify the full document into categories.\n\n\n\n\n\n\nextract-document-sentiment=false\n\n\nExtract document-level sentiment.\n\n\n\n\n\n\nextract-entities=true\n\n\nExtract entities.\n\n\n\n\n\n\nextract-entity-sentiment=true\n\n\nExtract entities and their associated sentiment.\n\n\n\n\n\n\nextract-syntax=false\n\n\nExtract syntax information.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Annotate Text"
        }, 
        {
            "location": "/documents_annotate-text/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-language  https://www.googleapis.com/auth/cloud-platform   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-language .\nYou can set the scope for this method like this:  language1 --scope  scope  documents annotate-text ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/documents_annotate-text/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  AnnotateTextRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n  encoding-type: string\n  features:\n    classify-text: boolean\n    extract-document-sentiment: boolean\n    extract-entities: boolean\n    extract-entity-sentiment: boolean\n    extract-syntax: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .document    content=no  The content of the input in string format.    gcs-content-uri=justo  The Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.    language=justo  The language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted. br \n     Language Support \n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an  INVALID_ARGUMENT  error\n    is returned.     type=et   Required. If the type is not set or is  TYPE_UNSPECIFIED ,\n    returns an  INVALID_ARGUMENT  error.     ..    encoding-type=et   The encoding type used by the API to calculate offsets.    features    classify-text=true  Classify the full document into categories.    extract-document-sentiment=false  Extract document-level sentiment.    extract-entities=true  Extract entities.    extract-entity-sentiment=true  Extract entities and their associated sentiment.    extract-syntax=false  Extract syntax information.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/documents_annotate-text/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/documents_annotate-text/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/documents_annotate-text/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/documents_classify-text/", 
            "text": "Classifies a document into categories.\n\n\nScopes\n\n\nYou will need authorization for at least one of the following scopes to make a valid call:\n\n\n\n\nhttps://www.googleapis.com/auth/cloud-language\n\n\nhttps://www.googleapis.com/auth/cloud-platform\n\n\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-language\n.\nYou can set the scope for this method like this: \nlanguage1 --scope \nscope\n documents classify-text ...\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nClassifyTextRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .document    content=aliquyam\n\n\nThe content of the input in string format.\n\n\n\n\n\n\ngcs-content-uri=sea\n\n\nThe Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.\n\n\n\n\n\n\nlanguage=lorem\n\n\nThe language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted.\nbr\n\n    \nLanguage Support\n\n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an \nINVALID_ARGUMENT\n error\n    is returned.\n\n\n\n\n\n\ntype=eos\n\n\nRequired. If the type is not set or is \nTYPE_UNSPECIFIED\n,\n    returns an \nINVALID_ARGUMENT\n error.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p bearer-token=string\n\n\n\n\nOAuth bearer token.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pp=boolean\n\n\n\n\nPretty-print response.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Classify Text"
        }, 
        {
            "location": "/documents_classify-text/#scopes", 
            "text": "You will need authorization for at least one of the following scopes to make a valid call:   https://www.googleapis.com/auth/cloud-language  https://www.googleapis.com/auth/cloud-platform   If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-language .\nYou can set the scope for this method like this:  language1 --scope  scope  documents classify-text ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/documents_classify-text/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ClassifyTextRequest:\n  document:\n    content: string\n    gcs-content-uri: string\n    language: string\n    type: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .document    content=aliquyam  The content of the input in string format.    gcs-content-uri=sea  The Google Cloud Storage URI where the file content is located.\n    This URI must be of the form: gs://bucket_name/object_name. For more\n    details, see https://cloud.google.com/storage/docs/reference-uris.\n    NOTE: Cloud Storage object versioning is not supported.    language=lorem  The language of the document (if not specified, the language is\n    automatically detected). Both ISO and BCP-47 language codes are\n    accepted. br \n     Language Support \n    lists currently supported languages for each API method.\n    If the language (either specified by the caller or automatically detected)\n    is not supported by the called API method, an  INVALID_ARGUMENT  error\n    is returned.    type=eos  Required. If the type is not set or is  TYPE_UNSPECIFIED ,\n    returns an  INVALID_ARGUMENT  error.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/documents_classify-text/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/documents_classify-text/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/documents_classify-text/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p bearer-token=string   OAuth bearer token.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pp=boolean   Pretty-print response.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}