initSidebarItems({"enum":[["Error",""],["Scope","Identifies the an OAuth2 authorization scope. A scope is needed when requesting an authorization token."]],"fn":[["remove_json_null_values",""]],"struct":[["AliasContext","An alias to a repo revision."],["Artifact","Artifact describes a build product."],["Attestation","Occurrence that represents a single \"attestation\". The authenticity of an attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the authority to which this attestation is attached is primarily useful for look-up (how to find this attestation if you already know the authority and artifact to be verified) and intent (which authority was this attestation intended to sign for)."],["AuditConfig","Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs."],["AuditLogConfig","Provides the configuration for logging a type of permissions. Example:"],["Authority","Note kind that represents a logical attestation \"role\" or \"authority\". For example, an organization might have one `Authority` for \"QA\" and one for \"build\". This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don't all live in the same project."],["Basis","Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via:   FROM <Basis.resource_url> Or an equivalent reference, e.g. a tag of the resource_url."],["BatchCreateNotesRequest","Request to create notes in batch."],["BatchCreateNotesResponse","Response for creating notes in batch."],["BatchCreateOccurrencesRequest","Request to create occurrences in batch."],["BatchCreateOccurrencesResponse","Response for creating occurrences in batch."],["Binding","Associates `members` with a `role`."],["Build","Note holding the version of the provider's builder and the signature of the provenance message in the build details occurrence."],["BuildProvenance","Provenance of a build. Contains all information needed to verify the full details about the build from source to completion."],["BuildSignature","Message encapsulating the signature of the verified build."],["CVSSv3","Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document"],["Chunk",""],["CloudRepoSourceContext","A CloudRepoSourceContext denotes a particular revision in a Google Cloud Source Repo."],["Command","Command describes a step performed as part of the build pipeline."],["ContainerAnalysis","Central instance to access all ContainerAnalysis related resource activities"],["ContentRange","Implements the Content-Range header, for serialization only"],["DefaultDelegate","A delegate with a conservative default implementation, which is used if no other delegate is set."],["Deployable","An artifact that can be deployed in some runtime."],["Deployment","The period during which some deployable was active in a runtime."],["Derived","Derived describes the derived image portion (Occurrence) of the DockerImage relationship. This image would be produced from a Dockerfile with FROM <DockerImage.Basis in attached Note>."],["Detail","Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2"],["Details","Details of an attestation occurrence."],["Discovered","Provides information about the analysis status of a discovered resource."],["Discovery","A note that indicates a type of analysis a provider would perform. This note exists in a provider's project. A `Discovery` occurrence is created in a consumer's project at the start of analysis."],["Distribution","This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror."],["DummyNetworkStream",""],["Empty","A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:"],["ErrorResponse","A utility to represent detailed errors we might see in case there are BadRequests. The latter happen if the sent parameters or request structures are unsound"],["Expr","Represents an expression text. Example:"],["FileHashes","Container message for hashes of byte content of files, used in source messages to verify integrity of source input to the build."],["Fingerprint","A set of properties that uniquely identify a given Docker image."],["FixableTotalByDigest","Per resource and severity counts of fixable and total vulnerabilities."],["GenericSignedAttestation","An attestation wrapper that uses the Grafeas `Signature` message. This attestation must define the `serialized_payload` that the `signatures` verify and any metadata necessary to interpret that plaintext.  The signatures should always be over the `serialized_payload` bytestring."],["GerritSourceContext","A SourceContext referring to a Gerrit project."],["GetIamPolicyRequest","Request message for `GetIamPolicy` method."],["GitSourceContext","A GitSourceContext denotes a particular revision in a third party Git repository (e.g., GitHub)."],["GrafeasV1beta1BuildDetails","Details of a build occurrence."],["GrafeasV1beta1DeploymentDetails","Details of a deployment occurrence."],["GrafeasV1beta1DiscoveryDetails","Details of a discovery occurrence."],["GrafeasV1beta1ImageDetails","Details of an image occurrence."],["GrafeasV1beta1PackageDetails","Details of a package occurrence."],["GrafeasV1beta1VulnerabilityDetails","Details of a vulnerability Occurrence."],["Hash","Container message for hash values."],["Hint","This submessage provides human-readable hints about the purpose of the authority. Because the name of a note acts as its resource reference, it is important to disambiguate the canonical name of the Note (which might be a UUID for security purposes) from \"readable\" names more suitable for debug output. Note that these hints should not be used to look up authorities in security sensitive contexts, such as when looking up attestations to verify."],["Installation","This represents how a particular software package may be installed on a system."],["JsonServerError","A utility type which can decode a server response that indicates error"],["KnowledgeBase","There is no detailed description."],["Layer","Layer holds metadata specific to a layer of a Docker image."],["ListNoteOccurrencesResponse","Response for listing occurrences for a note."],["ListNotesResponse","Response for listing notes."],["ListOccurrencesResponse","Response for listing occurrences."],["ListScanConfigsResponse","Response for listing scan configurations."],["Location","An occurrence of a particular package installation found within a system's filesystem. E.g., glibc was found in `/var/lib/dpkg/status`."],["MethodInfo","Contains information about an API request."],["MultiPartReader","Provides a `Read` interface that converts multiple parts into the protocol identified by RFC2387. Note: This implementation is just as rich as it needs to be to perform uploads to google APIs, and might not be a fully-featured implementation."],["Note","A type of analysis that can be done for a resource."],["Occurrence","An instance of an analysis type that has been found on a resource."],["Package","This represents a particular package that is distributed over various channels. E.g., glibc (aka libc6) is distributed by many, at various versions."],["PackageIssue","This message wraps a location affected by a vulnerability and its associated fix (if one is available)."],["PgpSignedAttestation","An attestation wrapper with a PGP-compatible signature. This message only supports `ATTACHED` signatures, where the payload that is signed is included alongside the signature itself in the same file."],["Policy","Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources."],["ProjectMethods","A builder providing access to all methods supported on project resources. It is not used directly, but through the `ContainerAnalysis` hub."],["ProjectNoteBatchCreateCall","Creates new notes in batch."],["ProjectNoteCreateCall","Creates a new note."],["ProjectNoteDeleteCall","Deletes the specified note."],["ProjectNoteGetCall","Gets the specified note."],["ProjectNoteGetIamPolicyCall","Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively."],["ProjectNoteListCall","Lists notes for the specified project."],["ProjectNoteOccurrenceListCall","Lists occurrences referencing the specified note. Provider projects can use this method to get all occurrences across consumer projects referencing the specified note."],["ProjectNotePatchCall","Updates the specified note."],["ProjectNoteSetIamPolicyCall","Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively."],["ProjectNoteTestIamPermissionCall","Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`)."],["ProjectOccurrenceBatchCreateCall","Creates new occurrences in batch."],["ProjectOccurrenceCreateCall","Creates a new occurrence."],["ProjectOccurrenceDeleteCall","Deletes the specified occurrence. For example, use this method to delete an occurrence when the occurrence is no longer applicable for the given resource."],["ProjectOccurrenceGetCall","Gets the specified occurrence."],["ProjectOccurrenceGetIamPolicyCall","Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively."],["ProjectOccurrenceGetNoteCall","Gets the note attached to the specified occurrence. Consumer projects can use this method to get a note that belongs to a provider project."],["ProjectOccurrenceGetVulnerabilitySummaryCall","Gets a summary of the number and severity of occurrences."],["ProjectOccurrenceListCall","Lists occurrences for the specified project."],["ProjectOccurrencePatchCall","Updates the specified occurrence."],["ProjectOccurrenceSetIamPolicyCall","Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively."],["ProjectOccurrenceTestIamPermissionCall","Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`)."],["ProjectRepoId","Selects a repo using a Google Cloud Platform project ID (e.g., winged-cargo-31) and a repo name within that project."],["ProjectScanConfigGetCall","Gets the specified scan configuration."],["ProjectScanConfigListCall","Lists scan configurations for the specified project."],["ProjectScanConfigUpdateCall","Updates the specified scan configuration."],["RangeResponseHeader",""],["RelatedUrl","Metadata for any related URL information."],["RepoId","A unique identifier for a Cloud Repo."],["ResourceType","An entity that can have metadata. For example, a Docker image."],["ResumableUploadHelper","A utility type to perform a resumable upload from start to end."],["ScanConfig","A scan configuration specifies whether Cloud components in a project have a particular type of analysis being run. For example, it can configure whether vulnerability scanning is being done on Docker images or not."],["ServerError",""],["ServerMessage",""],["SetIamPolicyRequest","Request message for `SetIamPolicy` method."],["Signature","Verifiers (e.g. Kritis implementations) MUST verify signatures with respect to the trust anchors defined in policy (e.g. a Kritis policy). Typically this means that the verifier has been configured with a map from `public_key_id` to public key material (and any required parameters, e.g. signing algorithm)."],["Source","Source describes the location of the source used for the build."],["SourceContext","A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory."],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. Each `Status` message contains three pieces of data: error code, error message, and error details."],["TestIamPermissionsRequest","Request message for `TestIamPermissions` method."],["TestIamPermissionsResponse","Response message for `TestIamPermissions` method."],["Version","Version contains structured information about the version of a package."],["Vulnerability","Vulnerability provides metadata about a security vulnerability in a Note."],["VulnerabilityLocation","The location of the vulnerability."],["VulnerabilityOccurrencesSummary","A summary of how many vulnerability occurrences there are per resource and severity type."],["WindowsDetail","There is no detailed description."],["XUploadContentType","The `X-Upload-Content-Type` header."]],"trait":[["CallBuilder","Identifies types which represent builders for a particular resource method"],["Delegate","A trait specifying functionality to help controlling any request performed by the API. The trait has a conservative default implementation."],["Hub","Identifies the Hub. There is only one per library, this trait is supposed to make intended use more explicit. The hub allows to access all resource methods more easily."],["MethodsBuilder","Identifies types for building methods of a particular resource type"],["NestedType","Identifies types which are only used by other types internally. They have no special meaning, this trait just marks them for completeness."],["Part","Identifies types which are only used as part of other types, which usually are carrying the `Resource` trait."],["ReadSeek","A utility to specify reader types which provide seeking capabilities too"],["RequestValue","Identifies types which are used in API requests."],["Resource","Identifies types which can be inserted and deleted. Types with this trait are most commonly used by clients of this API."],["ResponseResult","Identifies types which are used in API responses."],["ToParts","A trait for all types that can convert themselves into a parts string"],["UnusedType","Identifies types which are not actually used by the API This might be a bug within the google API schema."]],"type":[["Result","A universal result type used as return for all calls."]]});