{
    "docs": [
        {
            "location": "/", 
            "text": "The \ncloudscheduler1\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Cloud Scheduler\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nCloud Scheduler\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-cloudscheduler1-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nCloud Scheduler\n API at revision \n20190617\n. The CLI is at version \n1.0.10\n.\n\n\ncloudscheduler1 [options]\n        projects\n                locations-get \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-jobs-create \nparent\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-jobs-delete \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-jobs-get \nname\n [-p \nv\n]... [-o \nout\n]\n                locations-jobs-list \nparent\n [-p \nv\n]... [-o \nout\n]\n                locations-jobs-patch \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-jobs-pause \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-jobs-resume \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-jobs-run \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                locations-list \nname\n [-p \nv\n]... [-o \nout\n]\n  cloudscheduler1 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \ncloudscheduler1-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/cloudscheduler1-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/cloudscheduler1-secret.json\n, assuming that the required \ncloudscheduler\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \ncloudscheduler1 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-cloudscheduler1-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Cloud Scheduler  API at revision  20190617 . The CLI is at version  1.0.10 .  cloudscheduler1 [options]\n        projects\n                locations-get  name  [-p  v ]... [-o  out ]\n                locations-jobs-create  parent  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-jobs-delete  name  [-p  v ]... [-o  out ]\n                locations-jobs-get  name  [-p  v ]... [-o  out ]\n                locations-jobs-list  parent  [-p  v ]... [-o  out ]\n                locations-jobs-patch  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-jobs-pause  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-jobs-resume  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-jobs-run  name  (-r  kv )... [-p  v ]... [-o  out ]\n                locations-list  name  [-p  v ]... [-o  out ]\n  cloudscheduler1 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  cloudscheduler1- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/cloudscheduler1-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/cloudscheduler1-secret.json , assuming that the required  cloudscheduler  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  cloudscheduler1 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/projects_locations-get/", 
            "text": "Gets information about a location.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-get ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nResource name for the location.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Get"
        }, 
        {
            "location": "/projects_locations-get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-get/#required-scalar-argument", 
            "text": "name   (string)  Resource name for the location.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-create/", 
            "text": "Creates a job.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-create ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\n\n\nRequired.\n\n\nThe location name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID\n.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nJob:\n  app-engine-http-target:\n    app-engine-routing:\n      host: string\n      instance: string\n      service: string\n      version: string\n    body: string\n    headers: { string: string }\n    http-method: string\n    relative-uri: string\n  attempt-deadline: string\n  description: string\n  http-target:\n    body: string\n    headers: { string: string }\n    http-method: string\n    oauth-token:\n      scope: string\n      service-account-email: string\n    oidc-token:\n      audience: string\n      service-account-email: string\n    uri: string\n  last-attempt-time: string\n  name: string\n  pubsub-target:\n    attributes: { string: string }\n    data: string\n    topic-name: string\n  retry-config:\n    max-backoff-duration: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff-duration: string\n    retry-count: integer\n  schedule: string\n  schedule-time: string\n  state: string\n  status:\n    code: integer\n    message: string\n  time-zone: string\n  user-update-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .app-engine-http-target.app-engine-routing    host=eirmod\n\n\n\n\n\n\nOutput only. The host that the job is sent to.\n\n\nFor more information about how App Engine requests are routed, see\n\nhere\n.\n\n\nThe host is constructed as:\n\n\n\n\n\n\nhost = [application_domain_name]\n/br\n\n  \n| [service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version_dot_service]+ \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version_dot_service] + \n#39;.\n#39; + [application_domain_name]\n\n\n\n\n\n\napplication_domain_name\n = The domain name of the app, for\n  example \napp-id\n.appspot.com, which is associated with the\n  job\ns project ID.\n\n\n\n\n\n\nservice =\n service\n\n\n\n\n\n\nversion =\n version\n\n\n\n\n\n\nversion_dot_service =\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance =\n instance\n\n\n\n\n\n\ninstance_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance_dot_version =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version\n\n\n\n\n\n\ninstance_dot_version_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\nIf service is empty, then the job will be sent\nto the service which is the default service when the job is attempted.\n\n\nIf version is empty, then the job will be sent\nto the version which is the default version when the job is attempted.\n\n\nIf instance is empty, then the job will be\nsent to an instance which is available when the job is attempted.\n\n\nIf service,\nversion, or\ninstance is invalid, then the job will be sent\nto the default version of the default service when the job is attempted.\n* \ninstance=sit\n\n    - App instance.\n\n\nBy default, the job is sent to an instance which is available when\nthe job is attempted.\n\n\nRequests can only be sent to a specific instance if\n\nmanual scaling is used in App Engine\nStandard\n.\nApp Engine Flex does not support instances. For more information, see\n\nApp Engine Standard request\nrouting\n\nand \nApp Engine Flex request\nrouting\n.\n* \nservice=stet\n\n    - App service.\n\n\nBy default, the job is sent to the service which is the default\nservice when the job is attempted.\n* \nversion=sed\n\n    - App version.\n\n\nBy default, the job is sent to the version which is the default\nversion when the job is attempted.\n\n\n\n\n\n\n\n\n\n\n..    body=et\n\n\n\n\n\n\nBody.\n\n\nHTTP request body. A request body is allowed only if the HTTP method is\nPOST or PUT. It will result in invalid argument error to set a body on a\njob with an incompatible HttpMethod.\n* \nheaders=key=dolores\n\n    - HTTP request headers.\n\n\nThis map contains the header field names and values. Headers can be set\nwhen the job is created.\n\n\nCloud Scheduler sets some headers to default values:\n\n\n\n\nUser-Agent\n: By default, this header is\n  \n#34;AppEngine-Google; (+http://code.google.com/appengine)\n#34;\n.\n  This header can be modified, but Cloud Scheduler will append\n  \n#34;AppEngine-Google; (+http://code.google.com/appengine)\n#34;\n to the\n  modified \nUser-Agent\n.\n\n\nX-CloudScheduler\n: This header will be set to true.\n\n\n\n\nIf the job has an body, Cloud Scheduler sets\nthe following headers:\n\n\n\n\nContent-Type\n: By default, the \nContent-Type\n header is set to\n  \n#34;application/octet-stream\n#34;\n. The default can be overridden by explictly\n  setting \nContent-Type\n to a particular media type when the job is\n  created.\n  For example, \nContent-Type\n can be set to \n#34;application/json\n#34;\n.\n\n\nContent-Length\n: This is computed by Cloud Scheduler. This value is\n  output only. It cannot be changed.\n\n\n\n\nThe headers below are output only. They cannot be set or overridden:\n\n\n\n\nX-Google-*\n: For Google internal use only.\n\n\nX-AppEngine-*\n: For Google internal use only.\n\n\n\n\nIn addition, some App Engine headers, which contain\njob-specific information, are also be sent to the job handler.\n    - the value will be associated with the given \nkey\n\n* \nhttp-method=kasd\n\n    - The HTTP method to use for the request. PATCH and OPTIONS are not\npermitted.\n* \nrelative-uri=accusam\n\n    - The relative URI.\n\n\nThe relative URL must begin with \n/\n and must be a valid HTTP relative URL.\nIt can contain a path, query string arguments, and \n#\n fragments.\nIf the relative URL is empty, then the root path \n/\n will be used.\nNo spaces are allowed, and the maximum length allowed is 2083 characters.\n\n\n\n\n\n\n\n\n\n\n..    attempt-deadline=takimata\n\n\n\n\n\n\nThe deadline for job attempts. If the request handler does not respond by\n    this deadline then the request is cancelled and the attempt is marked as a\n    \nDEADLINE_EXCEEDED\n failure. The failed attempt can be viewed in\n    execution logs. Cloud Scheduler will retry the job according\n    to the RetryConfig.\n\n\nThe allowed duration for this deadline is:\n* For HTTP targets, between 15 seconds and 30 minutes.\n* For App Engine HTTP targets, between 15\n  seconds and 24 hours.\n* \ndescription=justo\n\n    - Optionally caller-specified in CreateJob or\nUpdateJob.\n\n\nA human-readable description for the job. This string must not contain\nmore than 500 characters.\n* \nhttp-target    body=amet.\n\n    - HTTP request body. A request body is allowed only if the HTTP\nmethod is POST, PUT, or PATCH. It is an error to set body on a job with an\nincompatible HttpMethod.\n* \nheaders=key=erat\n\n    - The user can specify HTTP request headers to send with the job\ns\nHTTP request. This map contains the header field names and\nvalues. Repeated headers are not supported, but a header value can\ncontain commas. These headers represent a subset of the headers\nthat will accompany the job\ns HTTP request. Some HTTP request\nheaders will be ignored or replaced. A partial list of headers that\nwill be ignored or replaced is below:\n- Host: This will be computed by Cloud Scheduler and derived from\nuri.\n* \nContent-Length\n: This will be computed by Cloud Scheduler.\n* \nUser-Agent\n: This will be set to \n#34;Google-Cloud-Scheduler\n#34;\n.\n* \nX-Google-*\n: Google internal use only.\n* \nX-AppEngine-*\n: Google internal use only.\n\n\nThe total size of headers must be less than 80KB.\n    - the value will be associated with the given \nkey\n\n* \nhttp-method=labore\n\n    - Which HTTP method to use for the request.\n* \noauth-token    scope=sea\n\n    - OAuth scope to be used for generating OAuth access token.\nIf not specified, \nhttps://www.googleapis.com/auth/cloud-platform\n\nwill be used.\n* \nservice-account-email=nonumy\n\n    - \nService account email\n\nto be used for generating OAuth token.\nThe service account must be within the same project as the job. The caller\nmust have iam.serviceAccounts.actAs permission for the service account.\n\n\n\n\n\n\n\n\n\n\n..oidc-token    audience=dolores\n\n\n\n\nAudience to be used when generating OIDC token. If not specified, the URI\n    specified in target will be used.\n\n\n\n\n\n\n\n\nservice-account-email=gubergren\n\n\n\n\nService account email\n\n    to be used for generating OIDC token.\n    The service account must be within the same project as the job. The caller\n    must have iam.serviceAccounts.actAs permission for the service account.\n\n\n\n\n\n\n\n\n..    uri=sadipscing\n\n\n\n\n\n\nRequired.\n\n\nThe full URI path that the request will be sent to. This string\nmust begin with either \nhttp://\n or \nhttps://\n. Some examples of\nvalid values for uri are:\n\nhttp://acme.com\n and \nhttps://acme.com/sales:8080\n. Cloud Scheduler will\nencode some characters for safety and compatibility. The maximum allowed\nURL length is 2083 characters after encoding.\n\n\n\n\n\n\n\n\n\n\n..    last-attempt-time=aliquyam\n\n\n\n\nOutput only. The time the last job attempt started.\n\n\n\n\n\n\n\n\nname=ea\n\n\n\n\n\n\nOptionally caller-specified in CreateJob, after\n    which it becomes output only.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\n\n\nPROJECT_ID\n can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n   \nIdentifying\n   projects\n\n\nLOCATION_ID\n is the canonical ID for the job\ns location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.\n\n\nJOB_ID\n can contain only letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), or underscores (_). The maximum length is 500 characters.\n\n\npubsub-target    attributes=key=no\n\n\nAttributes for PubsubMessage.\n\n\n\n\n\n\n\n\nPubsub message must contain either non-empty data, or at least one\nattribute.\n    - the value will be associated with the given \nkey\n\n* \ndata=justo\n\n    - The message payload for PubsubMessage.\n\n\nPubsub message must contain either non-empty data, or at least one\nattribute.\n* \ntopic-name=justo\n\n    - Required.\n\n\nThe name of the Cloud Pub/Sub topic to which messages will\nbe published when a job is delivered. The topic name must be in the\nsame format as required by PubSub\ns\n\nPublishRequest.name\n,\nfor example \nprojects/PROJECT_ID/topics/TOPIC_ID\n.\n\n\nThe topic must be in the same project as the Cloud Scheduler job.\n\n\n\n\n\n\n\n\n\n\n..retry-config    max-backoff-duration=et\n\n\n\n\n\n\nThe maximum amount of time to wait before retrying a job after\n    it fails.\n\n\nThe default value of this field is 1 hour.\n* \nmax-doublings=84\n\n    - The time between retries will double \nmax_doublings\n times.\n\n\nA job\ns retry interval starts at\nmin_backoff_duration, then doubles\n\nmax_doublings\n times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff_duration up to\nretry_count times.\n\n\nFor example, if min_backoff_duration is\n10s, max_backoff_duration is 300s, and\n\nmax_doublings\n is 3, then the a job will first be retried in 10s. The\nretry interval will double three times, and then increase linearly by\n2^3 * 10s.  Finally, the job will retry at intervals of\nmax_backoff_duration until the job has\nbeen attempted retry_count times. Thus, the\nrequests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, ....\n\n\nThe default value of this field is 5.\n* \nmax-retry-duration=diam\n\n    - The time limit for retrying a failed job, measured from time when an\nexecution was first attempted. If specified with\nretry_count, the job will be retried until both\nlimits are reached.\n\n\nThe default value for max_retry_duration is zero, which means retry\nduration is unlimited.\n* \nmin-backoff-duration=ipsum\n\n    - The minimum amount of time to wait before retrying a job after\nit fails.\n\n\nThe default value of this field is 5 seconds.\n* \nretry-count=96\n\n    - The number of attempts that the system will make to run a job using the\nexponential backoff procedure described by\nmax_doublings.\n\n\nThe default value of retry_count is zero.\n\n\nIf retry_count is zero, a job attempt will \nnot\n be retried if\nit fails. Instead the Cloud Scheduler system will wait for the\nnext scheduled execution time.\n\n\nIf retry_count is set to a non-zero number then Cloud Scheduler\nwill retry failed attempts, using exponential backoff,\nretry_count times, or until the next scheduled execution time,\nwhichever comes first.\n\n\nValues greater than 5 and negative values are not allowed.\n\n\n\n\n\n\n\n\n\n\n..    schedule=et\n\n\n\n\n\n\nRequired, except when used with UpdateJob.\n\n\nDescribes the schedule on which the job will be executed.\n\n\nThe schedule can be either of the following types:\n\n\n\n\nCrontab\n\n\nEnglish-like\n\nschedule\n\n\n\n\nAs a general rule, execution \nn + 1\n of a job will not begin\nuntil execution \nn\n has finished. Cloud Scheduler will never\nallow two simultaneously outstanding executions. For example,\nthis implies that if the \nn+1\nth execution is scheduled to run at\n16:00 but the \nn\nth execution takes until 16:15, the \nn+1\nth\nexecution will not start until \n16:15\n.\nA scheduled start time will be delayed if the previous\nexecution has not ended when its scheduled time occurs.\n\n\nIf retry_count \n 0 and a job attempt fails,\nthe job will be tried a total of retry_count\ntimes, with exponential backoff, until the next scheduled start\ntime.\n* \nschedule-time=duo\n\n    - Output only. The next time the job is scheduled. Note that this may be a\nretry of a previously failed attempt or the next execution time\naccording to the schedule.\n* \nstate=aliquyam\n\n    - Output only. State of the job.\n* \nstatus    code=92\n\n    - The status code, which should be an enum value of google.rpc.Code.\n* \nmessage=lorem\n\n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.\n\n\n\n\n\n\n\n\n\n\n..    time-zone=eos\n\n\n\n\n\n\nSpecifies the time zone to be used in interpreting\n    schedule. The value of this field must be a time\n    zone name from the \ntz database\n.\n\n\nNote that some time zones include a provision for\ndaylight savings time. The rules for daylight saving time are\ndetermined by the chosen tz. For UTC use the string \nutc\n. If a\ntime zone is not specified, the default will be in UTC (also known\nas GMT).\n* \nuser-update-time=erat\n\n    - Output only. The creation time of the job.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs Create"
        }, 
        {
            "location": "/projects_locations-jobs-create/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-create ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-create/#required-scalar-argument", 
            "text": "parent   (string)   Required.  The location name. For example: projects/PROJECT_ID/locations/LOCATION_ID .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-create/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Job:\n  app-engine-http-target:\n    app-engine-routing:\n      host: string\n      instance: string\n      service: string\n      version: string\n    body: string\n    headers: { string: string }\n    http-method: string\n    relative-uri: string\n  attempt-deadline: string\n  description: string\n  http-target:\n    body: string\n    headers: { string: string }\n    http-method: string\n    oauth-token:\n      scope: string\n      service-account-email: string\n    oidc-token:\n      audience: string\n      service-account-email: string\n    uri: string\n  last-attempt-time: string\n  name: string\n  pubsub-target:\n    attributes: { string: string }\n    data: string\n    topic-name: string\n  retry-config:\n    max-backoff-duration: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff-duration: string\n    retry-count: integer\n  schedule: string\n  schedule-time: string\n  state: string\n  status:\n    code: integer\n    message: string\n  time-zone: string\n  user-update-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .app-engine-http-target.app-engine-routing    host=eirmod    Output only. The host that the job is sent to.  For more information about how App Engine requests are routed, see here .  The host is constructed as:    host = [application_domain_name] /br \n   | [service] +  #39;. #39; + [application_domain_name] /br \n   | [version] +  #39;. #39; + [application_domain_name] /br \n   | [version_dot_service]+  #39;. #39; + [application_domain_name] /br \n   | [instance] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_service] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version_dot_service] +  #39;. #39; + [application_domain_name]    application_domain_name  = The domain name of the app, for\n  example  app-id .appspot.com, which is associated with the\n  job s project ID.    service =  service    version =  version    version_dot_service = \n  version  +  #39;. #39; + \n  service    instance =  instance    instance_dot_service = \n  instance  +  #39;. #39; + \n  service    instance_dot_version = \n  instance  +  #39;. #39; + \n  version    instance_dot_version_dot_service = \n  instance  +  #39;. #39; + \n  version  +  #39;. #39; + \n  service    If service is empty, then the job will be sent\nto the service which is the default service when the job is attempted.  If version is empty, then the job will be sent\nto the version which is the default version when the job is attempted.  If instance is empty, then the job will be\nsent to an instance which is available when the job is attempted.  If service,\nversion, or\ninstance is invalid, then the job will be sent\nto the default version of the default service when the job is attempted.\n*  instance=sit \n    - App instance.  By default, the job is sent to an instance which is available when\nthe job is attempted.  Requests can only be sent to a specific instance if manual scaling is used in App Engine\nStandard .\nApp Engine Flex does not support instances. For more information, see App Engine Standard request\nrouting \nand  App Engine Flex request\nrouting .\n*  service=stet \n    - App service.  By default, the job is sent to the service which is the default\nservice when the job is attempted.\n*  version=sed \n    - App version.  By default, the job is sent to the version which is the default\nversion when the job is attempted.      ..    body=et    Body.  HTTP request body. A request body is allowed only if the HTTP method is\nPOST or PUT. It will result in invalid argument error to set a body on a\njob with an incompatible HttpMethod.\n*  headers=key=dolores \n    - HTTP request headers.  This map contains the header field names and values. Headers can be set\nwhen the job is created.  Cloud Scheduler sets some headers to default values:   User-Agent : By default, this header is\n   #34;AppEngine-Google; (+http://code.google.com/appengine) #34; .\n  This header can be modified, but Cloud Scheduler will append\n   #34;AppEngine-Google; (+http://code.google.com/appengine) #34;  to the\n  modified  User-Agent .  X-CloudScheduler : This header will be set to true.   If the job has an body, Cloud Scheduler sets\nthe following headers:   Content-Type : By default, the  Content-Type  header is set to\n   #34;application/octet-stream #34; . The default can be overridden by explictly\n  setting  Content-Type  to a particular media type when the job is\n  created.\n  For example,  Content-Type  can be set to  #34;application/json #34; .  Content-Length : This is computed by Cloud Scheduler. This value is\n  output only. It cannot be changed.   The headers below are output only. They cannot be set or overridden:   X-Google-* : For Google internal use only.  X-AppEngine-* : For Google internal use only.   In addition, some App Engine headers, which contain\njob-specific information, are also be sent to the job handler.\n    - the value will be associated with the given  key \n*  http-method=kasd \n    - The HTTP method to use for the request. PATCH and OPTIONS are not\npermitted.\n*  relative-uri=accusam \n    - The relative URI.  The relative URL must begin with  /  and must be a valid HTTP relative URL.\nIt can contain a path, query string arguments, and  #  fragments.\nIf the relative URL is empty, then the root path  /  will be used.\nNo spaces are allowed, and the maximum length allowed is 2083 characters.      ..    attempt-deadline=takimata    The deadline for job attempts. If the request handler does not respond by\n    this deadline then the request is cancelled and the attempt is marked as a\n     DEADLINE_EXCEEDED  failure. The failed attempt can be viewed in\n    execution logs. Cloud Scheduler will retry the job according\n    to the RetryConfig.  The allowed duration for this deadline is:\n* For HTTP targets, between 15 seconds and 30 minutes.\n* For App Engine HTTP targets, between 15\n  seconds and 24 hours.\n*  description=justo \n    - Optionally caller-specified in CreateJob or\nUpdateJob.  A human-readable description for the job. This string must not contain\nmore than 500 characters.\n*  http-target    body=amet. \n    - HTTP request body. A request body is allowed only if the HTTP\nmethod is POST, PUT, or PATCH. It is an error to set body on a job with an\nincompatible HttpMethod.\n*  headers=key=erat \n    - The user can specify HTTP request headers to send with the job s\nHTTP request. This map contains the header field names and\nvalues. Repeated headers are not supported, but a header value can\ncontain commas. These headers represent a subset of the headers\nthat will accompany the job s HTTP request. Some HTTP request\nheaders will be ignored or replaced. A partial list of headers that\nwill be ignored or replaced is below:\n- Host: This will be computed by Cloud Scheduler and derived from\nuri.\n*  Content-Length : This will be computed by Cloud Scheduler.\n*  User-Agent : This will be set to  #34;Google-Cloud-Scheduler #34; .\n*  X-Google-* : Google internal use only.\n*  X-AppEngine-* : Google internal use only.  The total size of headers must be less than 80KB.\n    - the value will be associated with the given  key \n*  http-method=labore \n    - Which HTTP method to use for the request.\n*  oauth-token    scope=sea \n    - OAuth scope to be used for generating OAuth access token.\nIf not specified,  https://www.googleapis.com/auth/cloud-platform \nwill be used.\n*  service-account-email=nonumy \n    -  Service account email \nto be used for generating OAuth token.\nThe service account must be within the same project as the job. The caller\nmust have iam.serviceAccounts.actAs permission for the service account.      ..oidc-token    audience=dolores   Audience to be used when generating OIDC token. If not specified, the URI\n    specified in target will be used.     service-account-email=gubergren   Service account email \n    to be used for generating OIDC token.\n    The service account must be within the same project as the job. The caller\n    must have iam.serviceAccounts.actAs permission for the service account.     ..    uri=sadipscing    Required.  The full URI path that the request will be sent to. This string\nmust begin with either  http://  or  https:// . Some examples of\nvalid values for uri are: http://acme.com  and  https://acme.com/sales:8080 . Cloud Scheduler will\nencode some characters for safety and compatibility. The maximum allowed\nURL length is 2083 characters after encoding.      ..    last-attempt-time=aliquyam   Output only. The time the last job attempt started.     name=ea    Optionally caller-specified in CreateJob, after\n    which it becomes output only.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .   PROJECT_ID  can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n    Identifying\n   projects  LOCATION_ID  is the canonical ID for the job s location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.  JOB_ID  can contain only letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), or underscores (_). The maximum length is 500 characters.  pubsub-target    attributes=key=no  Attributes for PubsubMessage.     Pubsub message must contain either non-empty data, or at least one\nattribute.\n    - the value will be associated with the given  key \n*  data=justo \n    - The message payload for PubsubMessage.  Pubsub message must contain either non-empty data, or at least one\nattribute.\n*  topic-name=justo \n    - Required.  The name of the Cloud Pub/Sub topic to which messages will\nbe published when a job is delivered. The topic name must be in the\nsame format as required by PubSub s PublishRequest.name ,\nfor example  projects/PROJECT_ID/topics/TOPIC_ID .  The topic must be in the same project as the Cloud Scheduler job.      ..retry-config    max-backoff-duration=et    The maximum amount of time to wait before retrying a job after\n    it fails.  The default value of this field is 1 hour.\n*  max-doublings=84 \n    - The time between retries will double  max_doublings  times.  A job s retry interval starts at\nmin_backoff_duration, then doubles max_doublings  times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff_duration up to\nretry_count times.  For example, if min_backoff_duration is\n10s, max_backoff_duration is 300s, and max_doublings  is 3, then the a job will first be retried in 10s. The\nretry interval will double three times, and then increase linearly by\n2^3 * 10s.  Finally, the job will retry at intervals of\nmax_backoff_duration until the job has\nbeen attempted retry_count times. Thus, the\nrequests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, ....  The default value of this field is 5.\n*  max-retry-duration=diam \n    - The time limit for retrying a failed job, measured from time when an\nexecution was first attempted. If specified with\nretry_count, the job will be retried until both\nlimits are reached.  The default value for max_retry_duration is zero, which means retry\nduration is unlimited.\n*  min-backoff-duration=ipsum \n    - The minimum amount of time to wait before retrying a job after\nit fails.  The default value of this field is 5 seconds.\n*  retry-count=96 \n    - The number of attempts that the system will make to run a job using the\nexponential backoff procedure described by\nmax_doublings.  The default value of retry_count is zero.  If retry_count is zero, a job attempt will  not  be retried if\nit fails. Instead the Cloud Scheduler system will wait for the\nnext scheduled execution time.  If retry_count is set to a non-zero number then Cloud Scheduler\nwill retry failed attempts, using exponential backoff,\nretry_count times, or until the next scheduled execution time,\nwhichever comes first.  Values greater than 5 and negative values are not allowed.      ..    schedule=et    Required, except when used with UpdateJob.  Describes the schedule on which the job will be executed.  The schedule can be either of the following types:   Crontab  English-like schedule   As a general rule, execution  n + 1  of a job will not begin\nuntil execution  n  has finished. Cloud Scheduler will never\nallow two simultaneously outstanding executions. For example,\nthis implies that if the  n+1 th execution is scheduled to run at\n16:00 but the  n th execution takes until 16:15, the  n+1 th\nexecution will not start until  16:15 .\nA scheduled start time will be delayed if the previous\nexecution has not ended when its scheduled time occurs.  If retry_count   0 and a job attempt fails,\nthe job will be tried a total of retry_count\ntimes, with exponential backoff, until the next scheduled start\ntime.\n*  schedule-time=duo \n    - Output only. The next time the job is scheduled. Note that this may be a\nretry of a previously failed attempt or the next execution time\naccording to the schedule.\n*  state=aliquyam \n    - Output only. State of the job.\n*  status    code=92 \n    - The status code, which should be an enum value of google.rpc.Code.\n*  message=lorem \n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.      ..    time-zone=eos    Specifies the time zone to be used in interpreting\n    schedule. The value of this field must be a time\n    zone name from the  tz database .  Note that some time zones include a provision for\ndaylight savings time. The rules for daylight saving time are\ndetermined by the chosen tz. For UTC use the string  utc . If a\ntime zone is not specified, the default will be in UTC (also known\nas GMT).\n*  user-update-time=erat \n    - Output only. The creation time of the job.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-jobs-create/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-jobs-create/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-create/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-delete/", 
            "text": "Deletes a job.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-delete ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs Delete"
        }, 
        {
            "location": "/projects_locations-jobs-delete/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-delete ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-delete/#required-scalar-argument", 
            "text": "name   (string)   Required.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-delete/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-delete/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-get/", 
            "text": "Gets a job.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-get ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs Get"
        }, 
        {
            "location": "/projects_locations-jobs-get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-get/#required-scalar-argument", 
            "text": "name   (string)   Required.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-list/", 
            "text": "Lists jobs.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nparent\n \n(string)\n\n\n\n\nRequired.\n\n\nThe location name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID\n.\n\n\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\n\n\nRequested page size.\n\n\nThe maximum page size is 500. If unspecified, the page size will\nbe the maximum. Fewer jobs than requested might be returned,\neven if more jobs exist; use next_page_token to determine if more\njobs exist.\n\n\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA token identifying a page of results the server will return. To\n    request the first page results, page_token must be empty. To\n    request the next page of results, page_token must be the value of\n    next_page_token returned from\n    the previous call to ListJobs. It is an error to\n    switch the value of filter or\n    order_by while iterating through pages.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs List"
        }, 
        {
            "location": "/projects_locations-jobs-list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-list/#required-scalar-argument", 
            "text": "parent   (string)   Required.  The location name. For example: projects/PROJECT_ID/locations/LOCATION_ID .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-size=integer    Requested page size.  The maximum page size is 500. If unspecified, the page size will\nbe the maximum. Fewer jobs than requested might be returned,\neven if more jobs exist; use next_page_token to determine if more\njobs exist.      -p page-token=string   A token identifying a page of results the server will return. To\n    request the first page results, page_token must be empty. To\n    request the next page of results, page_token must be the value of\n    next_page_token returned from\n    the previous call to ListJobs. It is an error to\n    switch the value of filter or\n    order_by while iterating through pages.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-jobs-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-patch/", 
            "text": "Updates a job.\n\n\nIf successful, the updated Job is returned. If the job does\nnot exist, \nNOT_FOUND\n is returned.\n\n\nIf UpdateJob does not successfully return, it is possible for the\njob to be in an Job.State.UPDATE_FAILED state. A job in this state may\nnot be executed. If this happens, retry the UpdateJob request\nuntil a successful response is received.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-patch ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nOptionally caller-specified in CreateJob, after\n    which it becomes output only.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\n\n\nPROJECT_ID\n can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n   \nIdentifying\n   projects\n\n\nLOCATION_ID\n is the canonical ID for the job\ns location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.\n\n\nJOB_ID\n can contain only letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), or underscores (_). The maximum length is 500 characters.\n\n\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nJob:\n  app-engine-http-target:\n    app-engine-routing:\n      host: string\n      instance: string\n      service: string\n      version: string\n    body: string\n    headers: { string: string }\n    http-method: string\n    relative-uri: string\n  attempt-deadline: string\n  description: string\n  http-target:\n    body: string\n    headers: { string: string }\n    http-method: string\n    oauth-token:\n      scope: string\n      service-account-email: string\n    oidc-token:\n      audience: string\n      service-account-email: string\n    uri: string\n  last-attempt-time: string\n  name: string\n  pubsub-target:\n    attributes: { string: string }\n    data: string\n    topic-name: string\n  retry-config:\n    max-backoff-duration: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff-duration: string\n    retry-count: integer\n  schedule: string\n  schedule-time: string\n  state: string\n  status:\n    code: integer\n    message: string\n  time-zone: string\n  user-update-time: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n\n\n-r .app-engine-http-target.app-engine-routing    host=sadipscing\n\n\n\n\n\n\nOutput only. The host that the job is sent to.\n\n\nFor more information about how App Engine requests are routed, see\n\nhere\n.\n\n\nThe host is constructed as:\n\n\n\n\n\n\nhost = [application_domain_name]\n/br\n\n  \n| [service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [version_dot_service]+ \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_service] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version] + \n#39;.\n#39; + [application_domain_name]\n/br\n\n  \n| [instance_dot_version_dot_service] + \n#39;.\n#39; + [application_domain_name]\n\n\n\n\n\n\napplication_domain_name\n = The domain name of the app, for\n  example \napp-id\n.appspot.com, which is associated with the\n  job\ns project ID.\n\n\n\n\n\n\nservice =\n service\n\n\n\n\n\n\nversion =\n version\n\n\n\n\n\n\nversion_dot_service =\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance =\n instance\n\n\n\n\n\n\ninstance_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\ninstance_dot_version =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version\n\n\n\n\n\n\ninstance_dot_version_dot_service =\n\n  instance \n+ \n#39;.\n#39; +\n\n  version \n+ \n#39;.\n#39; +\n\n  service\n\n\n\n\n\n\nIf service is empty, then the job will be sent\nto the service which is the default service when the job is attempted.\n\n\nIf version is empty, then the job will be sent\nto the version which is the default version when the job is attempted.\n\n\nIf instance is empty, then the job will be\nsent to an instance which is available when the job is attempted.\n\n\nIf service,\nversion, or\ninstance is invalid, then the job will be sent\nto the default version of the default service when the job is attempted.\n* \ninstance=dolor\n\n    - App instance.\n\n\nBy default, the job is sent to an instance which is available when\nthe job is attempted.\n\n\nRequests can only be sent to a specific instance if\n\nmanual scaling is used in App Engine\nStandard\n.\nApp Engine Flex does not support instances. For more information, see\n\nApp Engine Standard request\nrouting\n\nand \nApp Engine Flex request\nrouting\n.\n* \nservice=eirmod\n\n    - App service.\n\n\nBy default, the job is sent to the service which is the default\nservice when the job is attempted.\n* \nversion=elitr\n\n    - App version.\n\n\nBy default, the job is sent to the version which is the default\nversion when the job is attempted.\n\n\n\n\n\n\n\n\n\n\n..    body=amet\n\n\n\n\n\n\nBody.\n\n\nHTTP request body. A request body is allowed only if the HTTP method is\nPOST or PUT. It will result in invalid argument error to set a body on a\njob with an incompatible HttpMethod.\n* \nheaders=key=no\n\n    - HTTP request headers.\n\n\nThis map contains the header field names and values. Headers can be set\nwhen the job is created.\n\n\nCloud Scheduler sets some headers to default values:\n\n\n\n\nUser-Agent\n: By default, this header is\n  \n#34;AppEngine-Google; (+http://code.google.com/appengine)\n#34;\n.\n  This header can be modified, but Cloud Scheduler will append\n  \n#34;AppEngine-Google; (+http://code.google.com/appengine)\n#34;\n to the\n  modified \nUser-Agent\n.\n\n\nX-CloudScheduler\n: This header will be set to true.\n\n\n\n\nIf the job has an body, Cloud Scheduler sets\nthe following headers:\n\n\n\n\nContent-Type\n: By default, the \nContent-Type\n header is set to\n  \n#34;application/octet-stream\n#34;\n. The default can be overridden by explictly\n  setting \nContent-Type\n to a particular media type when the job is\n  created.\n  For example, \nContent-Type\n can be set to \n#34;application/json\n#34;\n.\n\n\nContent-Length\n: This is computed by Cloud Scheduler. This value is\n  output only. It cannot be changed.\n\n\n\n\nThe headers below are output only. They cannot be set or overridden:\n\n\n\n\nX-Google-*\n: For Google internal use only.\n\n\nX-AppEngine-*\n: For Google internal use only.\n\n\n\n\nIn addition, some App Engine headers, which contain\njob-specific information, are also be sent to the job handler.\n    - the value will be associated with the given \nkey\n\n* \nhttp-method=labore\n\n    - The HTTP method to use for the request. PATCH and OPTIONS are not\npermitted.\n* \nrelative-uri=eirmod\n\n    - The relative URI.\n\n\nThe relative URL must begin with \n/\n and must be a valid HTTP relative URL.\nIt can contain a path, query string arguments, and \n#\n fragments.\nIf the relative URL is empty, then the root path \n/\n will be used.\nNo spaces are allowed, and the maximum length allowed is 2083 characters.\n\n\n\n\n\n\n\n\n\n\n..    attempt-deadline=dolore\n\n\n\n\n\n\nThe deadline for job attempts. If the request handler does not respond by\n    this deadline then the request is cancelled and the attempt is marked as a\n    \nDEADLINE_EXCEEDED\n failure. The failed attempt can be viewed in\n    execution logs. Cloud Scheduler will retry the job according\n    to the RetryConfig.\n\n\nThe allowed duration for this deadline is:\n* For HTTP targets, between 15 seconds and 30 minutes.\n* For App Engine HTTP targets, between 15\n  seconds and 24 hours.\n* \ndescription=invidunt\n\n    - Optionally caller-specified in CreateJob or\nUpdateJob.\n\n\nA human-readable description for the job. This string must not contain\nmore than 500 characters.\n* \nhttp-target    body=aliquyam\n\n    - HTTP request body. A request body is allowed only if the HTTP\nmethod is POST, PUT, or PATCH. It is an error to set body on a job with an\nincompatible HttpMethod.\n* \nheaders=key=accusam\n\n    - The user can specify HTTP request headers to send with the job\ns\nHTTP request. This map contains the header field names and\nvalues. Repeated headers are not supported, but a header value can\ncontain commas. These headers represent a subset of the headers\nthat will accompany the job\ns HTTP request. Some HTTP request\nheaders will be ignored or replaced. A partial list of headers that\nwill be ignored or replaced is below:\n- Host: This will be computed by Cloud Scheduler and derived from\nuri.\n* \nContent-Length\n: This will be computed by Cloud Scheduler.\n* \nUser-Agent\n: This will be set to \n#34;Google-Cloud-Scheduler\n#34;\n.\n* \nX-Google-*\n: Google internal use only.\n* \nX-AppEngine-*\n: Google internal use only.\n\n\nThe total size of headers must be less than 80KB.\n    - the value will be associated with the given \nkey\n\n* \nhttp-method=lorem\n\n    - Which HTTP method to use for the request.\n* \noauth-token    scope=sea\n\n    - OAuth scope to be used for generating OAuth access token.\nIf not specified, \nhttps://www.googleapis.com/auth/cloud-platform\n\nwill be used.\n* \nservice-account-email=et\n\n    - \nService account email\n\nto be used for generating OAuth token.\nThe service account must be within the same project as the job. The caller\nmust have iam.serviceAccounts.actAs permission for the service account.\n\n\n\n\n\n\n\n\n\n\n..oidc-token    audience=duo\n\n\n\n\nAudience to be used when generating OIDC token. If not specified, the URI\n    specified in target will be used.\n\n\n\n\n\n\n\n\nservice-account-email=et\n\n\n\n\nService account email\n\n    to be used for generating OIDC token.\n    The service account must be within the same project as the job. The caller\n    must have iam.serviceAccounts.actAs permission for the service account.\n\n\n\n\n\n\n\n\n..    uri=eirmod\n\n\n\n\n\n\nRequired.\n\n\nThe full URI path that the request will be sent to. This string\nmust begin with either \nhttp://\n or \nhttps://\n. Some examples of\nvalid values for uri are:\n\nhttp://acme.com\n and \nhttps://acme.com/sales:8080\n. Cloud Scheduler will\nencode some characters for safety and compatibility. The maximum allowed\nURL length is 2083 characters after encoding.\n\n\n\n\n\n\n\n\n\n\n..    last-attempt-time=sanctus\n\n\n\n\nOutput only. The time the last job attempt started.\n\n\n\n\n\n\n\n\nname=et\n\n\n\n\n\n\nOptionally caller-specified in CreateJob, after\n    which it becomes output only.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\n\n\nPROJECT_ID\n can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n   \nIdentifying\n   projects\n\n\nLOCATION_ID\n is the canonical ID for the job\ns location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.\n\n\nJOB_ID\n can contain only letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), or underscores (_). The maximum length is 500 characters.\n\n\npubsub-target    attributes=key=amet\n\n\nAttributes for PubsubMessage.\n\n\n\n\n\n\n\n\nPubsub message must contain either non-empty data, or at least one\nattribute.\n    - the value will be associated with the given \nkey\n\n* \ndata=et\n\n    - The message payload for PubsubMessage.\n\n\nPubsub message must contain either non-empty data, or at least one\nattribute.\n* \ntopic-name=consetetur\n\n    - Required.\n\n\nThe name of the Cloud Pub/Sub topic to which messages will\nbe published when a job is delivered. The topic name must be in the\nsame format as required by PubSub\ns\n\nPublishRequest.name\n,\nfor example \nprojects/PROJECT_ID/topics/TOPIC_ID\n.\n\n\nThe topic must be in the same project as the Cloud Scheduler job.\n\n\n\n\n\n\n\n\n\n\n..retry-config    max-backoff-duration=ut\n\n\n\n\n\n\nThe maximum amount of time to wait before retrying a job after\n    it fails.\n\n\nThe default value of this field is 1 hour.\n* \nmax-doublings=85\n\n    - The time between retries will double \nmax_doublings\n times.\n\n\nA job\ns retry interval starts at\nmin_backoff_duration, then doubles\n\nmax_doublings\n times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff_duration up to\nretry_count times.\n\n\nFor example, if min_backoff_duration is\n10s, max_backoff_duration is 300s, and\n\nmax_doublings\n is 3, then the a job will first be retried in 10s. The\nretry interval will double three times, and then increase linearly by\n2^3 * 10s.  Finally, the job will retry at intervals of\nmax_backoff_duration until the job has\nbeen attempted retry_count times. Thus, the\nrequests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, ....\n\n\nThe default value of this field is 5.\n* \nmax-retry-duration=sed\n\n    - The time limit for retrying a failed job, measured from time when an\nexecution was first attempted. If specified with\nretry_count, the job will be retried until both\nlimits are reached.\n\n\nThe default value for max_retry_duration is zero, which means retry\nduration is unlimited.\n* \nmin-backoff-duration=dolor\n\n    - The minimum amount of time to wait before retrying a job after\nit fails.\n\n\nThe default value of this field is 5 seconds.\n* \nretry-count=53\n\n    - The number of attempts that the system will make to run a job using the\nexponential backoff procedure described by\nmax_doublings.\n\n\nThe default value of retry_count is zero.\n\n\nIf retry_count is zero, a job attempt will \nnot\n be retried if\nit fails. Instead the Cloud Scheduler system will wait for the\nnext scheduled execution time.\n\n\nIf retry_count is set to a non-zero number then Cloud Scheduler\nwill retry failed attempts, using exponential backoff,\nretry_count times, or until the next scheduled execution time,\nwhichever comes first.\n\n\nValues greater than 5 and negative values are not allowed.\n\n\n\n\n\n\n\n\n\n\n..    schedule=dolor\n\n\n\n\n\n\nRequired, except when used with UpdateJob.\n\n\nDescribes the schedule on which the job will be executed.\n\n\nThe schedule can be either of the following types:\n\n\n\n\nCrontab\n\n\nEnglish-like\n\nschedule\n\n\n\n\nAs a general rule, execution \nn + 1\n of a job will not begin\nuntil execution \nn\n has finished. Cloud Scheduler will never\nallow two simultaneously outstanding executions. For example,\nthis implies that if the \nn+1\nth execution is scheduled to run at\n16:00 but the \nn\nth execution takes until 16:15, the \nn+1\nth\nexecution will not start until \n16:15\n.\nA scheduled start time will be delayed if the previous\nexecution has not ended when its scheduled time occurs.\n\n\nIf retry_count \n 0 and a job attempt fails,\nthe job will be tried a total of retry_count\ntimes, with exponential backoff, until the next scheduled start\ntime.\n* \nschedule-time=et\n\n    - Output only. The next time the job is scheduled. Note that this may be a\nretry of a previously failed attempt or the next execution time\naccording to the schedule.\n* \nstate=consetetur\n\n    - Output only. State of the job.\n* \nstatus    code=49\n\n    - The status code, which should be an enum value of google.rpc.Code.\n* \nmessage=voluptua.\n\n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.\n\n\n\n\n\n\n\n\n\n\n..    time-zone=lorem\n\n\n\n\n\n\nSpecifies the time zone to be used in interpreting\n    schedule. The value of this field must be a time\n    zone name from the \ntz database\n.\n\n\nNote that some time zones include a provision for\ndaylight savings time. The rules for daylight saving time are\ndetermined by the chosen tz. For UTC use the string \nutc\n. If a\ntime zone is not specified, the default will be in UTC (also known\nas GMT).\n* \nuser-update-time=gubergren\n\n    - Output only. The creation time of the job.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p update-mask=string\n\n\nA  mask used to specify which fields of the job are being updated.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs Patch"
        }, 
        {
            "location": "/projects_locations-jobs-patch/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-patch ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-patch/#required-scalar-argument", 
            "text": "name   (string)   Optionally caller-specified in CreateJob, after\n    which it becomes output only.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .   PROJECT_ID  can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n    Identifying\n   projects  LOCATION_ID  is the canonical ID for the job s location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.  JOB_ID  can contain only letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), or underscores (_). The maximum length is 500 characters.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-patch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  Job:\n  app-engine-http-target:\n    app-engine-routing:\n      host: string\n      instance: string\n      service: string\n      version: string\n    body: string\n    headers: { string: string }\n    http-method: string\n    relative-uri: string\n  attempt-deadline: string\n  description: string\n  http-target:\n    body: string\n    headers: { string: string }\n    http-method: string\n    oauth-token:\n      scope: string\n      service-account-email: string\n    oidc-token:\n      audience: string\n      service-account-email: string\n    uri: string\n  last-attempt-time: string\n  name: string\n  pubsub-target:\n    attributes: { string: string }\n    data: string\n    topic-name: string\n  retry-config:\n    max-backoff-duration: string\n    max-doublings: integer\n    max-retry-duration: string\n    min-backoff-duration: string\n    retry-count: integer\n  schedule: string\n  schedule-time: string\n  state: string\n  status:\n    code: integer\n    message: string\n  time-zone: string\n  user-update-time: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.    -r .app-engine-http-target.app-engine-routing    host=sadipscing    Output only. The host that the job is sent to.  For more information about how App Engine requests are routed, see here .  The host is constructed as:    host = [application_domain_name] /br \n   | [service] +  #39;. #39; + [application_domain_name] /br \n   | [version] +  #39;. #39; + [application_domain_name] /br \n   | [version_dot_service]+  #39;. #39; + [application_domain_name] /br \n   | [instance] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_service] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version] +  #39;. #39; + [application_domain_name] /br \n   | [instance_dot_version_dot_service] +  #39;. #39; + [application_domain_name]    application_domain_name  = The domain name of the app, for\n  example  app-id .appspot.com, which is associated with the\n  job s project ID.    service =  service    version =  version    version_dot_service = \n  version  +  #39;. #39; + \n  service    instance =  instance    instance_dot_service = \n  instance  +  #39;. #39; + \n  service    instance_dot_version = \n  instance  +  #39;. #39; + \n  version    instance_dot_version_dot_service = \n  instance  +  #39;. #39; + \n  version  +  #39;. #39; + \n  service    If service is empty, then the job will be sent\nto the service which is the default service when the job is attempted.  If version is empty, then the job will be sent\nto the version which is the default version when the job is attempted.  If instance is empty, then the job will be\nsent to an instance which is available when the job is attempted.  If service,\nversion, or\ninstance is invalid, then the job will be sent\nto the default version of the default service when the job is attempted.\n*  instance=dolor \n    - App instance.  By default, the job is sent to an instance which is available when\nthe job is attempted.  Requests can only be sent to a specific instance if manual scaling is used in App Engine\nStandard .\nApp Engine Flex does not support instances. For more information, see App Engine Standard request\nrouting \nand  App Engine Flex request\nrouting .\n*  service=eirmod \n    - App service.  By default, the job is sent to the service which is the default\nservice when the job is attempted.\n*  version=elitr \n    - App version.  By default, the job is sent to the version which is the default\nversion when the job is attempted.      ..    body=amet    Body.  HTTP request body. A request body is allowed only if the HTTP method is\nPOST or PUT. It will result in invalid argument error to set a body on a\njob with an incompatible HttpMethod.\n*  headers=key=no \n    - HTTP request headers.  This map contains the header field names and values. Headers can be set\nwhen the job is created.  Cloud Scheduler sets some headers to default values:   User-Agent : By default, this header is\n   #34;AppEngine-Google; (+http://code.google.com/appengine) #34; .\n  This header can be modified, but Cloud Scheduler will append\n   #34;AppEngine-Google; (+http://code.google.com/appengine) #34;  to the\n  modified  User-Agent .  X-CloudScheduler : This header will be set to true.   If the job has an body, Cloud Scheduler sets\nthe following headers:   Content-Type : By default, the  Content-Type  header is set to\n   #34;application/octet-stream #34; . The default can be overridden by explictly\n  setting  Content-Type  to a particular media type when the job is\n  created.\n  For example,  Content-Type  can be set to  #34;application/json #34; .  Content-Length : This is computed by Cloud Scheduler. This value is\n  output only. It cannot be changed.   The headers below are output only. They cannot be set or overridden:   X-Google-* : For Google internal use only.  X-AppEngine-* : For Google internal use only.   In addition, some App Engine headers, which contain\njob-specific information, are also be sent to the job handler.\n    - the value will be associated with the given  key \n*  http-method=labore \n    - The HTTP method to use for the request. PATCH and OPTIONS are not\npermitted.\n*  relative-uri=eirmod \n    - The relative URI.  The relative URL must begin with  /  and must be a valid HTTP relative URL.\nIt can contain a path, query string arguments, and  #  fragments.\nIf the relative URL is empty, then the root path  /  will be used.\nNo spaces are allowed, and the maximum length allowed is 2083 characters.      ..    attempt-deadline=dolore    The deadline for job attempts. If the request handler does not respond by\n    this deadline then the request is cancelled and the attempt is marked as a\n     DEADLINE_EXCEEDED  failure. The failed attempt can be viewed in\n    execution logs. Cloud Scheduler will retry the job according\n    to the RetryConfig.  The allowed duration for this deadline is:\n* For HTTP targets, between 15 seconds and 30 minutes.\n* For App Engine HTTP targets, between 15\n  seconds and 24 hours.\n*  description=invidunt \n    - Optionally caller-specified in CreateJob or\nUpdateJob.  A human-readable description for the job. This string must not contain\nmore than 500 characters.\n*  http-target    body=aliquyam \n    - HTTP request body. A request body is allowed only if the HTTP\nmethod is POST, PUT, or PATCH. It is an error to set body on a job with an\nincompatible HttpMethod.\n*  headers=key=accusam \n    - The user can specify HTTP request headers to send with the job s\nHTTP request. This map contains the header field names and\nvalues. Repeated headers are not supported, but a header value can\ncontain commas. These headers represent a subset of the headers\nthat will accompany the job s HTTP request. Some HTTP request\nheaders will be ignored or replaced. A partial list of headers that\nwill be ignored or replaced is below:\n- Host: This will be computed by Cloud Scheduler and derived from\nuri.\n*  Content-Length : This will be computed by Cloud Scheduler.\n*  User-Agent : This will be set to  #34;Google-Cloud-Scheduler #34; .\n*  X-Google-* : Google internal use only.\n*  X-AppEngine-* : Google internal use only.  The total size of headers must be less than 80KB.\n    - the value will be associated with the given  key \n*  http-method=lorem \n    - Which HTTP method to use for the request.\n*  oauth-token    scope=sea \n    - OAuth scope to be used for generating OAuth access token.\nIf not specified,  https://www.googleapis.com/auth/cloud-platform \nwill be used.\n*  service-account-email=et \n    -  Service account email \nto be used for generating OAuth token.\nThe service account must be within the same project as the job. The caller\nmust have iam.serviceAccounts.actAs permission for the service account.      ..oidc-token    audience=duo   Audience to be used when generating OIDC token. If not specified, the URI\n    specified in target will be used.     service-account-email=et   Service account email \n    to be used for generating OIDC token.\n    The service account must be within the same project as the job. The caller\n    must have iam.serviceAccounts.actAs permission for the service account.     ..    uri=eirmod    Required.  The full URI path that the request will be sent to. This string\nmust begin with either  http://  or  https:// . Some examples of\nvalid values for uri are: http://acme.com  and  https://acme.com/sales:8080 . Cloud Scheduler will\nencode some characters for safety and compatibility. The maximum allowed\nURL length is 2083 characters after encoding.      ..    last-attempt-time=sanctus   Output only. The time the last job attempt started.     name=et    Optionally caller-specified in CreateJob, after\n    which it becomes output only.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .   PROJECT_ID  can contain letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), colons (:), or periods (.).\n   For more information, see\n    Identifying\n   projects  LOCATION_ID  is the canonical ID for the job s location.\n   The list of available locations can be obtained by calling\n   ListLocations.\n   For more information, see https://cloud.google.com/about/locations/.  JOB_ID  can contain only letters ([A-Za-z]), numbers ([0-9]),\n   hyphens (-), or underscores (_). The maximum length is 500 characters.  pubsub-target    attributes=key=amet  Attributes for PubsubMessage.     Pubsub message must contain either non-empty data, or at least one\nattribute.\n    - the value will be associated with the given  key \n*  data=et \n    - The message payload for PubsubMessage.  Pubsub message must contain either non-empty data, or at least one\nattribute.\n*  topic-name=consetetur \n    - Required.  The name of the Cloud Pub/Sub topic to which messages will\nbe published when a job is delivered. The topic name must be in the\nsame format as required by PubSub s PublishRequest.name ,\nfor example  projects/PROJECT_ID/topics/TOPIC_ID .  The topic must be in the same project as the Cloud Scheduler job.      ..retry-config    max-backoff-duration=ut    The maximum amount of time to wait before retrying a job after\n    it fails.  The default value of this field is 1 hour.\n*  max-doublings=85 \n    - The time between retries will double  max_doublings  times.  A job s retry interval starts at\nmin_backoff_duration, then doubles max_doublings  times, then increases linearly, and finally\nretries retries at intervals of\nmax_backoff_duration up to\nretry_count times.  For example, if min_backoff_duration is\n10s, max_backoff_duration is 300s, and max_doublings  is 3, then the a job will first be retried in 10s. The\nretry interval will double three times, and then increase linearly by\n2^3 * 10s.  Finally, the job will retry at intervals of\nmax_backoff_duration until the job has\nbeen attempted retry_count times. Thus, the\nrequests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, ....  The default value of this field is 5.\n*  max-retry-duration=sed \n    - The time limit for retrying a failed job, measured from time when an\nexecution was first attempted. If specified with\nretry_count, the job will be retried until both\nlimits are reached.  The default value for max_retry_duration is zero, which means retry\nduration is unlimited.\n*  min-backoff-duration=dolor \n    - The minimum amount of time to wait before retrying a job after\nit fails.  The default value of this field is 5 seconds.\n*  retry-count=53 \n    - The number of attempts that the system will make to run a job using the\nexponential backoff procedure described by\nmax_doublings.  The default value of retry_count is zero.  If retry_count is zero, a job attempt will  not  be retried if\nit fails. Instead the Cloud Scheduler system will wait for the\nnext scheduled execution time.  If retry_count is set to a non-zero number then Cloud Scheduler\nwill retry failed attempts, using exponential backoff,\nretry_count times, or until the next scheduled execution time,\nwhichever comes first.  Values greater than 5 and negative values are not allowed.      ..    schedule=dolor    Required, except when used with UpdateJob.  Describes the schedule on which the job will be executed.  The schedule can be either of the following types:   Crontab  English-like schedule   As a general rule, execution  n + 1  of a job will not begin\nuntil execution  n  has finished. Cloud Scheduler will never\nallow two simultaneously outstanding executions. For example,\nthis implies that if the  n+1 th execution is scheduled to run at\n16:00 but the  n th execution takes until 16:15, the  n+1 th\nexecution will not start until  16:15 .\nA scheduled start time will be delayed if the previous\nexecution has not ended when its scheduled time occurs.  If retry_count   0 and a job attempt fails,\nthe job will be tried a total of retry_count\ntimes, with exponential backoff, until the next scheduled start\ntime.\n*  schedule-time=et \n    - Output only. The next time the job is scheduled. Note that this may be a\nretry of a previously failed attempt or the next execution time\naccording to the schedule.\n*  state=consetetur \n    - Output only. State of the job.\n*  status    code=49 \n    - The status code, which should be an enum value of google.rpc.Code.\n*  message=voluptua. \n    - A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.      ..    time-zone=lorem    Specifies the time zone to be used in interpreting\n    schedule. The value of this field must be a time\n    zone name from the  tz database .  Note that some time zones include a provision for\ndaylight savings time. The rules for daylight saving time are\ndetermined by the chosen tz. For UTC use the string  utc . If a\ntime zone is not specified, the default will be in UTC (also known\nas GMT).\n*  user-update-time=gubergren \n    - Output only. The creation time of the job.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-jobs-patch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-jobs-patch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-patch/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p update-mask=string  A  mask used to specify which fields of the job are being updated.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-jobs-patch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-pause/", 
            "text": "Pauses a job.\n\n\nIf a job is paused then the system will stop executing the job\nuntil it is re-enabled via ResumeJob. The\nstate of the job is stored in state; if paused it\nwill be set to Job.State.PAUSED. A job must be in Job.State.ENABLED\nto be paused.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-pause ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPauseJobRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs Pause"
        }, 
        {
            "location": "/projects_locations-jobs-pause/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-pause ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-pause/#required-scalar-argument", 
            "text": "name   (string)   Required.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-pause/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PauseJobRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-jobs-pause/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-jobs-pause/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-pause/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-resume/", 
            "text": "Resume a job.\n\n\nThis method reenables a job after it has been Job.State.PAUSED. The\nstate of a job is stored in Job.state; after calling this method it\nwill be set to Job.State.ENABLED. A job must be in\nJob.State.PAUSED to be resumed.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-resume ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nResumeJobRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs Resume"
        }, 
        {
            "location": "/projects_locations-jobs-resume/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-resume ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-resume/#required-scalar-argument", 
            "text": "name   (string)   Required.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-resume/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  ResumeJobRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-jobs-resume/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-jobs-resume/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-resume/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-jobs-run/", 
            "text": "Forces a job to run now.\n\n\nWhen this method is called, Cloud Scheduler will dispatch the job, even\nif the job is already running.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-jobs-run ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\n\n\nRequired.\n\n\nThe job name. For example:\n\nprojects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID\n.\n\n\nRequired Request Value\n\n\n\n\n\n\n\n\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nRunJobRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations Jobs Run"
        }, 
        {
            "location": "/projects_locations-jobs-run/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-jobs-run ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-jobs-run/#required-scalar-argument", 
            "text": "name   (string)   Required.  The job name. For example: projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID .", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-jobs-run/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  RunJobRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/projects_locations-jobs-run/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/projects_locations-jobs-run/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-jobs-run/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/projects_locations-list/", 
            "text": "Lists information about the supported locations for this service.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \ncloudscheduler1 --scope \nscope\n projects locations-list ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe resource that owns the locations collection, if applicable.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nThe standard list page token.\n\n\n\n\n\n\n\n\n-p filter=string\n\n\n\n\nThe standard list filter.\n\n\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nThe standard list page size.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Locations List"
        }, 
        {
            "location": "/projects_locations-list/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  cloudscheduler1 --scope  scope  projects locations-list ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/projects_locations-list/#required-scalar-argument", 
            "text": "name   (string)  The resource that owns the locations collection, if applicable.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/projects_locations-list/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/projects_locations-list/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-token=string   The standard list page token.     -p filter=string   The standard list filter.     -p page-size=integer   The standard list page size.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/projects_locations-list/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}