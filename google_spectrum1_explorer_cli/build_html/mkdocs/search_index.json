{
    "docs": [
        {
            "location": "/", 
            "text": "The \nspectrum1-explorer\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle spectrum\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nspectrum\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-spectrum1_explorer-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nspectrum\n API at revision \n20170306\n. The CLI is at version \n1.0.8\n.\n\n\nspectrum1-explorer [options]\n        paws\n                get-spectrum (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                get-spectrum-batch (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                init (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                notify-spectrum-use (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                register (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                verify-device (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  spectrum1-explorer --help\n\nConfiguration:\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nspectrum1-explorer-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/spectrum1-explorer-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/spectrum1-explorer-secret.json\n, assuming that the required \nspectrum\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nspectrum1-explorer --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-spectrum1_explorer-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  spectrum  API at revision  20170306 . The CLI is at version  1.0.8 .  spectrum1-explorer [options]\n        paws\n                get-spectrum (-r  kv )... [-p  v ]... [-o  out ]\n                get-spectrum-batch (-r  kv )... [-p  v ]... [-o  out ]\n                init (-r  kv )... [-p  v ]... [-o  out ]\n                notify-spectrum-use (-r  kv )... [-p  v ]... [-o  out ]\n                register (-r  kv )... [-p  v ]... [-o  out ]\n                verify-device (-r  kv )... [-p  v ]... [-o  out ]\n  spectrum1-explorer --help\n\nConfiguration:\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  spectrum1-explorer- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/spectrum1-explorer-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/spectrum1-explorer-secret.json , assuming that the required  spectrum  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  spectrum1-explorer --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/paws_get-spectrum/", 
            "text": "Requests information about the available spectrum for a device at a location. Requests from a fixed-mode device must include owner information so the device can be registered with the database.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPawsGetSpectrumRequest:\n  antenna:\n    height: number\n    height-type: string\n    height-uncertainty: number\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  master-device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  owner:\n    operator:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n    owner:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n  request-type: string\n  type: string\n  version: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .antenna    height=0.617752856951\n\n\nThe antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative.\n\n\n\n\n\n\nheight-type=sit\n\n\nIf the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL.\n\n\n\n\n\n\n\n\nheight-uncertainty=0.365848359249\n\n\n\n\nThe height uncertainty in meters. Whether this is required depends on the regulatory domain.\n\n\n\n\n\n\n\n\n..device-desc    etsi-en-device-category=sed\n\n\n\n\nSpecifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-emissions-class=et\n\n\nSpecifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-type=dolores\n\n\nSpecifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-technology-id=kasd\n\n\nSpecifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\nfcc-id=accusam\n\n\nSpecifies the device\ns FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.\n\n\n\n\n\n\nfcc-tvbd-device-type=takimata\n\n\nSpecifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.\n\n\n\n\n\n\nmanufacturer-id=justo\n\n\nThe manufacturer\ns ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\nmodel-id=amet.\n\n\nThe device\ns model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\n\n\nruleset-ids=erat\n\n\n\n\n\n\nThe list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.\n\n\nFor information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n* \nserial-number=labore\n\n    - The manufacturer\ns device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.\n\n\n\n\n\n\n\n\n\n\n..location    confidence=92\n\n\n\n\nThe location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.\n\n\n\n\n\n\npoint.center    latitude=0.109288397621\n\n\nA required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\nlongitude=0.820437629783\n\n\n\n\nA required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\n..    orientation=0.398739054055\n\n\n\n\nA floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.\n\n\n\n\n\n\nsemi-major-axis=0.0653431304201\n\n\nA floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\nsemi-minor-axis=0.699208331616\n\n\n\n\nA floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\n...master-device-desc    etsi-en-device-category=ea\n\n\n\n\nSpecifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-emissions-class=no\n\n\nSpecifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-type=justo\n\n\nSpecifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-technology-id=justo\n\n\nSpecifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\nfcc-id=et\n\n\nSpecifies the device\ns FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.\n\n\n\n\n\n\nfcc-tvbd-device-type=et\n\n\nSpecifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.\n\n\n\n\n\n\nmanufacturer-id=diam\n\n\nThe manufacturer\ns ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\nmodel-id=ipsum\n\n\nThe device\ns model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\n\n\nruleset-ids=lorem\n\n\n\n\n\n\nThe list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.\n\n\nFor information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n* \nserial-number=et\n\n    - The manufacturer\ns device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.\n\n\n\n\n\n\n\n\n\n\n..owner.operator.adr    code=duo\n\n\n\n\nThe postal code associated with the address. For example: 94423.\n\n\n\n\n\n\ncountry=aliquyam\n\n\nThe country name. For example: US.\n\n\n\n\n\n\nlocality=sea\n\n\nThe city or local equivalent portion of the address. For example: San Jose.\n\n\n\n\n\n\npobox=lorem\n\n\nAn optional post office box number.\n\n\n\n\n\n\nregion=eos\n\n\nThe state or local equivalent portion of the address. For example: CA.\n\n\n\n\n\n\n\n\nstreet=erat\n\n\n\n\nThe street number and name. For example: 123 Any St.\n\n\n\n\n\n\n\n\n..email    text=sadipscing\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..    fn=dolor\n\n\n\n\nThe full name of the contact person. For example: John A. Smith.\n\n\n\n\n\n\n\n\norg    text=eirmod\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..tel    uri=elitr\n\n\n\n\nA nested telephone URI of the form: tel:+1-123-456-7890.\n\n\n\n\n\n\n\n\n...owner.adr    code=amet\n\n\n\n\nThe postal code associated with the address. For example: 94423.\n\n\n\n\n\n\ncountry=no\n\n\nThe country name. For example: US.\n\n\n\n\n\n\nlocality=labore\n\n\nThe city or local equivalent portion of the address. For example: San Jose.\n\n\n\n\n\n\npobox=eirmod\n\n\nAn optional post office box number.\n\n\n\n\n\n\nregion=dolore\n\n\nThe state or local equivalent portion of the address. For example: CA.\n\n\n\n\n\n\n\n\nstreet=invidunt\n\n\n\n\nThe street number and name. For example: 123 Any St.\n\n\n\n\n\n\n\n\n..email    text=aliquyam\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..    fn=accusam\n\n\n\n\nThe full name of the contact person. For example: John A. Smith.\n\n\n\n\n\n\n\n\norg    text=lorem\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..tel    uri=sea\n\n\n\n\nA nested telephone URI of the form: tel:+1-123-456-7890.\n\n\n\n\n\n\n\n\n....    request-type=et\n\n\n\n\nThe request type parameter is an optional parameter that can be used to modify an available spectrum request, but its use depends on applicable regulatory rules. It may be used, for example, to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the deviceDesc parameter for the device on whose behalf the request is made is required.\n\n\n\n\n\n\ntype=duo\n\n\n\n\nThe message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).\n\n\nRequired field.\n* \nversion=et\n\n    - The PAWS version. Must be exactly 1.0.\n\n\nRequired field.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get Spectrum"
        }, 
        {
            "location": "/paws_get-spectrum/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PawsGetSpectrumRequest:\n  antenna:\n    height: number\n    height-type: string\n    height-uncertainty: number\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  master-device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  owner:\n    operator:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n    owner:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n  request-type: string\n  type: string\n  version: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .antenna    height=0.617752856951  The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative.    height-type=sit  If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL.     height-uncertainty=0.365848359249   The height uncertainty in meters. Whether this is required depends on the regulatory domain.     ..device-desc    etsi-en-device-category=sed   Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.    etsi-en-device-emissions-class=et  Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.    etsi-en-device-type=dolores  Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.    etsi-en-technology-id=kasd  Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.    fcc-id=accusam  Specifies the device s FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.    fcc-tvbd-device-type=takimata  Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.    manufacturer-id=justo  The manufacturer s ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.    model-id=amet.  The device s model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.     ruleset-ids=erat    The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n*  serial-number=labore \n    - The manufacturer s device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.      ..location    confidence=92   The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.    point.center    latitude=0.109288397621  A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     longitude=0.820437629783   A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     ..    orientation=0.398739054055   A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.    semi-major-axis=0.0653431304201  A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     semi-minor-axis=0.699208331616   A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     ...master-device-desc    etsi-en-device-category=ea   Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.    etsi-en-device-emissions-class=no  Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.    etsi-en-device-type=justo  Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.    etsi-en-technology-id=justo  Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.    fcc-id=et  Specifies the device s FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.    fcc-tvbd-device-type=et  Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.    manufacturer-id=diam  The manufacturer s ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.    model-id=ipsum  The device s model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.     ruleset-ids=lorem    The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n*  serial-number=et \n    - The manufacturer s device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.      ..owner.operator.adr    code=duo   The postal code associated with the address. For example: 94423.    country=aliquyam  The country name. For example: US.    locality=sea  The city or local equivalent portion of the address. For example: San Jose.    pobox=lorem  An optional post office box number.    region=eos  The state or local equivalent portion of the address. For example: CA.     street=erat   The street number and name. For example: 123 Any St.     ..email    text=sadipscing   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..    fn=dolor   The full name of the contact person. For example: John A. Smith.     org    text=eirmod   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..tel    uri=elitr   A nested telephone URI of the form: tel:+1-123-456-7890.     ...owner.adr    code=amet   The postal code associated with the address. For example: 94423.    country=no  The country name. For example: US.    locality=labore  The city or local equivalent portion of the address. For example: San Jose.    pobox=eirmod  An optional post office box number.    region=dolore  The state or local equivalent portion of the address. For example: CA.     street=invidunt   The street number and name. For example: 123 Any St.     ..email    text=aliquyam   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..    fn=accusam   The full name of the contact person. For example: John A. Smith.     org    text=lorem   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..tel    uri=sea   A nested telephone URI of the form: tel:+1-123-456-7890.     ....    request-type=et   The request type parameter is an optional parameter that can be used to modify an available spectrum request, but its use depends on applicable regulatory rules. It may be used, for example, to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the deviceDesc parameter for the device on whose behalf the request is made is required.    type=duo   The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).  Required field.\n*  version=et \n    - The PAWS version. Must be exactly 1.0.  Required field.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/paws_get-spectrum/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/paws_get-spectrum/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/paws_get-spectrum/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/paws_get-spectrum-batch/", 
            "text": "The Google Spectrum Database does not support batch requests, so this method always yields an UNIMPLEMENTED error.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPawsGetSpectrumBatchRequest:\n  antenna:\n    height: number\n    height-type: string\n    height-uncertainty: number\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  master-device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  owner:\n    operator:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n    owner:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n  request-type: string\n  type: string\n  version: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .antenna    height=0.610793242854\n\n\nThe antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative.\n\n\n\n\n\n\nheight-type=sanctus\n\n\nIf the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL.\n\n\n\n\n\n\n\n\nheight-uncertainty=0.790427604532\n\n\n\n\nThe height uncertainty in meters. Whether this is required depends on the regulatory domain.\n\n\n\n\n\n\n\n\n..device-desc    etsi-en-device-category=amet\n\n\n\n\nSpecifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-emissions-class=et\n\n\nSpecifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-type=consetetur\n\n\nSpecifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-technology-id=ut\n\n\nSpecifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\nfcc-id=ea\n\n\nSpecifies the device\ns FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.\n\n\n\n\n\n\nfcc-tvbd-device-type=sed\n\n\nSpecifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.\n\n\n\n\n\n\nmanufacturer-id=dolor\n\n\nThe manufacturer\ns ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\nmodel-id=dolor\n\n\nThe device\ns model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\n\n\nruleset-ids=dolor\n\n\n\n\n\n\nThe list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.\n\n\nFor information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n* \nserial-number=et\n\n    - The manufacturer\ns device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.\n\n\n\n\n\n\n\n\n\n\n..master-device-desc    etsi-en-device-category=consetetur\n\n\n\n\nSpecifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-emissions-class=amet.\n\n\nSpecifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-type=voluptua.\n\n\nSpecifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-technology-id=lorem\n\n\nSpecifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\nfcc-id=gubergren\n\n\nSpecifies the device\ns FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.\n\n\n\n\n\n\nfcc-tvbd-device-type=justo\n\n\nSpecifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.\n\n\n\n\n\n\nmanufacturer-id=sit\n\n\nThe manufacturer\ns ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\nmodel-id=vero\n\n\nThe device\ns model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\n\n\nruleset-ids=diam\n\n\n\n\n\n\nThe list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.\n\n\nFor information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n* \nserial-number=rebum.\n\n    - The manufacturer\ns device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.\n\n\n\n\n\n\n\n\n\n\n..owner.operator.adr    code=consetetur\n\n\n\n\nThe postal code associated with the address. For example: 94423.\n\n\n\n\n\n\ncountry=sadipscing\n\n\nThe country name. For example: US.\n\n\n\n\n\n\nlocality=vero\n\n\nThe city or local equivalent portion of the address. For example: San Jose.\n\n\n\n\n\n\npobox=sadipscing\n\n\nAn optional post office box number.\n\n\n\n\n\n\nregion=invidunt\n\n\nThe state or local equivalent portion of the address. For example: CA.\n\n\n\n\n\n\n\n\nstreet=consetetur\n\n\n\n\nThe street number and name. For example: 123 Any St.\n\n\n\n\n\n\n\n\n..email    text=dolore\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..    fn=duo\n\n\n\n\nThe full name of the contact person. For example: John A. Smith.\n\n\n\n\n\n\n\n\norg    text=aliquyam\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..tel    uri=lorem\n\n\n\n\nA nested telephone URI of the form: tel:+1-123-456-7890.\n\n\n\n\n\n\n\n\n...owner.adr    code=et\n\n\n\n\nThe postal code associated with the address. For example: 94423.\n\n\n\n\n\n\ncountry=clita\n\n\nThe country name. For example: US.\n\n\n\n\n\n\nlocality=consetetur\n\n\nThe city or local equivalent portion of the address. For example: San Jose.\n\n\n\n\n\n\npobox=takimata\n\n\nAn optional post office box number.\n\n\n\n\n\n\nregion=nonumy\n\n\nThe state or local equivalent portion of the address. For example: CA.\n\n\n\n\n\n\n\n\nstreet=kasd\n\n\n\n\nThe street number and name. For example: 123 Any St.\n\n\n\n\n\n\n\n\n..email    text=sanctus\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..    fn=takimata\n\n\n\n\nThe full name of the contact person. For example: John A. Smith.\n\n\n\n\n\n\n\n\norg    text=at\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..tel    uri=labore\n\n\n\n\nA nested telephone URI of the form: tel:+1-123-456-7890.\n\n\n\n\n\n\n\n\n....    request-type=invidunt\n\n\n\n\nThe request type parameter is an optional parameter that can be used to modify an available spectrum batch request, but its use depends on applicable regulatory rules. For example, It may be used to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the device descriptor parameter for the device on whose behalf the batch request is made is required.\n\n\n\n\n\n\ntype=ea\n\n\n\n\nThe message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).\n\n\nRequired field.\n* \nversion=sadipscing\n\n    - The PAWS version. Must be exactly 1.0.\n\n\nRequired field.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Get Spectrum Batch"
        }, 
        {
            "location": "/paws_get-spectrum-batch/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PawsGetSpectrumBatchRequest:\n  antenna:\n    height: number\n    height-type: string\n    height-uncertainty: number\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  master-device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  owner:\n    operator:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n    owner:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n  request-type: string\n  type: string\n  version: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .antenna    height=0.610793242854  The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative.    height-type=sanctus  If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL.     height-uncertainty=0.790427604532   The height uncertainty in meters. Whether this is required depends on the regulatory domain.     ..device-desc    etsi-en-device-category=amet   Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.    etsi-en-device-emissions-class=et  Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.    etsi-en-device-type=consetetur  Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.    etsi-en-technology-id=ut  Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.    fcc-id=ea  Specifies the device s FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.    fcc-tvbd-device-type=sed  Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.    manufacturer-id=dolor  The manufacturer s ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.    model-id=dolor  The device s model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.     ruleset-ids=dolor    The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n*  serial-number=et \n    - The manufacturer s device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.      ..master-device-desc    etsi-en-device-category=consetetur   Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.    etsi-en-device-emissions-class=amet.  Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.    etsi-en-device-type=voluptua.  Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.    etsi-en-technology-id=lorem  Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.    fcc-id=gubergren  Specifies the device s FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.    fcc-tvbd-device-type=justo  Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.    manufacturer-id=sit  The manufacturer s ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.    model-id=vero  The device s model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.     ruleset-ids=diam    The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n*  serial-number=rebum. \n    - The manufacturer s device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.      ..owner.operator.adr    code=consetetur   The postal code associated with the address. For example: 94423.    country=sadipscing  The country name. For example: US.    locality=vero  The city or local equivalent portion of the address. For example: San Jose.    pobox=sadipscing  An optional post office box number.    region=invidunt  The state or local equivalent portion of the address. For example: CA.     street=consetetur   The street number and name. For example: 123 Any St.     ..email    text=dolore   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..    fn=duo   The full name of the contact person. For example: John A. Smith.     org    text=aliquyam   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..tel    uri=lorem   A nested telephone URI of the form: tel:+1-123-456-7890.     ...owner.adr    code=et   The postal code associated with the address. For example: 94423.    country=clita  The country name. For example: US.    locality=consetetur  The city or local equivalent portion of the address. For example: San Jose.    pobox=takimata  An optional post office box number.    region=nonumy  The state or local equivalent portion of the address. For example: CA.     street=kasd   The street number and name. For example: 123 Any St.     ..email    text=sanctus   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..    fn=takimata   The full name of the contact person. For example: John A. Smith.     org    text=at   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..tel    uri=labore   A nested telephone URI of the form: tel:+1-123-456-7890.     ....    request-type=invidunt   The request type parameter is an optional parameter that can be used to modify an available spectrum batch request, but its use depends on applicable regulatory rules. For example, It may be used to request generic slave device parameters without having to specify the device descriptor for a specific device. When the requestType parameter is missing, the request is for a specific device (master or slave), and the device descriptor parameter for the device on whose behalf the batch request is made is required.    type=ea   The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).  Required field.\n*  version=sadipscing \n    - The PAWS version. Must be exactly 1.0.  Required field.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/paws_get-spectrum-batch/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/paws_get-spectrum-batch/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/paws_get-spectrum-batch/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/paws_init/", 
            "text": "Initializes the connection between a white space device and the database.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPawsInitRequest:\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  type: string\n  version: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .device-desc    etsi-en-device-category=rebum.\n\n\nSpecifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-emissions-class=dolore\n\n\nSpecifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-type=nonumy\n\n\nSpecifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-technology-id=sed\n\n\nSpecifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\nfcc-id=aliquyam\n\n\nSpecifies the device\ns FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.\n\n\n\n\n\n\nfcc-tvbd-device-type=sit\n\n\nSpecifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.\n\n\n\n\n\n\nmanufacturer-id=eirmod\n\n\nThe manufacturer\ns ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\nmodel-id=consetetur\n\n\nThe device\ns model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\n\n\nruleset-ids=labore\n\n\n\n\n\n\nThe list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.\n\n\nFor information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n* \nserial-number=sed\n\n    - The manufacturer\ns device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.\n\n\n\n\n\n\n\n\n\n\n..location    confidence=85\n\n\n\n\nThe location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.\n\n\n\n\n\n\npoint.center    latitude=0.392950472417\n\n\nA required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\nlongitude=0.194532199219\n\n\n\n\nA required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\n..    orientation=0.76272977112\n\n\n\n\nA floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.\n\n\n\n\n\n\nsemi-major-axis=0.624898723733\n\n\nA floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\nsemi-minor-axis=0.417527511227\n\n\n\n\nA floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\n...    type=labore\n\n\n\n\n\n\nThe message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).\n\n\nRequired field.\n* \nversion=ipsum\n\n    - The PAWS version. Must be exactly 1.0.\n\n\nRequired field.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Init"
        }, 
        {
            "location": "/paws_init/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PawsInitRequest:\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  type: string\n  version: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .device-desc    etsi-en-device-category=rebum.  Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.    etsi-en-device-emissions-class=dolore  Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.    etsi-en-device-type=nonumy  Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.    etsi-en-technology-id=sed  Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.    fcc-id=aliquyam  Specifies the device s FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.    fcc-tvbd-device-type=sit  Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.    manufacturer-id=eirmod  The manufacturer s ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.    model-id=consetetur  The device s model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.     ruleset-ids=labore    The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n*  serial-number=sed \n    - The manufacturer s device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.      ..location    confidence=85   The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.    point.center    latitude=0.392950472417  A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     longitude=0.194532199219   A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     ..    orientation=0.76272977112   A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.    semi-major-axis=0.624898723733  A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     semi-minor-axis=0.417527511227   A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     ...    type=labore    The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).  Required field.\n*  version=ipsum \n    - The PAWS version. Must be exactly 1.0.  Required field.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/paws_init/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/paws_init/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/paws_init/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/paws_notify-spectrum-use/", 
            "text": "Notifies the database that the device has selected certain frequency ranges for transmission. Only to be invoked when required by the regulator. The Google Spectrum Database does not operate in domains that require notification, so this always yields an UNIMPLEMENTED error.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPawsNotifySpectrumUseRequest:\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  type: string\n  version: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .device-desc    etsi-en-device-category=aliquyam\n\n\nSpecifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-emissions-class=dolores\n\n\nSpecifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-type=sit\n\n\nSpecifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-technology-id=diam\n\n\nSpecifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\nfcc-id=ut\n\n\nSpecifies the device\ns FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.\n\n\n\n\n\n\nfcc-tvbd-device-type=justo\n\n\nSpecifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.\n\n\n\n\n\n\nmanufacturer-id=est\n\n\nThe manufacturer\ns ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\nmodel-id=amet\n\n\nThe device\ns model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\n\n\nruleset-ids=accusam\n\n\n\n\n\n\nThe list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.\n\n\nFor information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n* \nserial-number=clita\n\n    - The manufacturer\ns device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.\n\n\n\n\n\n\n\n\n\n\n..location    confidence=22\n\n\n\n\nThe location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.\n\n\n\n\n\n\npoint.center    latitude=0.3052778683\n\n\nA required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\nlongitude=0.440065447838\n\n\n\n\nA required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\n..    orientation=0.379056915385\n\n\n\n\nA floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.\n\n\n\n\n\n\nsemi-major-axis=0.636549512895\n\n\nA floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\nsemi-minor-axis=0.1440693261\n\n\n\n\nA floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\n...    type=dolores\n\n\n\n\n\n\nThe message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).\n\n\nRequired field.\n* \nversion=eos\n\n    - The PAWS version. Must be exactly 1.0.\n\n\nRequired field.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Notify Spectrum Use"
        }, 
        {
            "location": "/paws_notify-spectrum-use/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PawsNotifySpectrumUseRequest:\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  type: string\n  version: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .device-desc    etsi-en-device-category=aliquyam  Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.    etsi-en-device-emissions-class=dolores  Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.    etsi-en-device-type=sit  Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.    etsi-en-technology-id=diam  Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.    fcc-id=ut  Specifies the device s FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.    fcc-tvbd-device-type=justo  Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.    manufacturer-id=est  The manufacturer s ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.    model-id=amet  The device s model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.     ruleset-ids=accusam    The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n*  serial-number=clita \n    - The manufacturer s device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.      ..location    confidence=22   The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.    point.center    latitude=0.3052778683  A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     longitude=0.440065447838   A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     ..    orientation=0.379056915385   A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.    semi-major-axis=0.636549512895  A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     semi-minor-axis=0.1440693261   A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     ...    type=dolores    The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).  Required field.\n*  version=eos \n    - The PAWS version. Must be exactly 1.0.  Required field.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/paws_notify-spectrum-use/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/paws_notify-spectrum-use/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/paws_notify-spectrum-use/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/paws_register/", 
            "text": "The Google Spectrum Database implements registration in the getSpectrum method. As such this always returns an UNIMPLEMENTED error.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPawsRegisterRequest:\n  antenna:\n    height: number\n    height-type: string\n    height-uncertainty: number\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  device-owner:\n    operator:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n    owner:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  type: string\n  version: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .antenna    height=0.236711616706\n\n\nThe antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative.\n\n\n\n\n\n\nheight-type=duo\n\n\nIf the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL.\n\n\n\n\n\n\n\n\nheight-uncertainty=0.0858312730549\n\n\n\n\nThe height uncertainty in meters. Whether this is required depends on the regulatory domain.\n\n\n\n\n\n\n\n\n..device-desc    etsi-en-device-category=aliquyam\n\n\n\n\nSpecifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-emissions-class=ea\n\n\nSpecifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-device-type=ea\n\n\nSpecifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\netsi-en-technology-id=et\n\n\nSpecifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.\n\n\n\n\n\n\nfcc-id=dolor\n\n\nSpecifies the device\ns FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.\n\n\n\n\n\n\nfcc-tvbd-device-type=diam\n\n\nSpecifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.\n\n\n\n\n\n\nmanufacturer-id=kasd\n\n\nThe manufacturer\ns ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\nmodel-id=invidunt\n\n\nThe device\ns model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.\n\n\n\n\n\n\n\n\nruleset-ids=rebum.\n\n\n\n\n\n\nThe list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.\n\n\nFor information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n* \nserial-number=lorem\n\n    - The manufacturer\ns device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.\n\n\n\n\n\n\n\n\n\n\n..device-owner.operator.adr    code=clita\n\n\n\n\nThe postal code associated with the address. For example: 94423.\n\n\n\n\n\n\ncountry=invidunt\n\n\nThe country name. For example: US.\n\n\n\n\n\n\nlocality=eirmod\n\n\nThe city or local equivalent portion of the address. For example: San Jose.\n\n\n\n\n\n\npobox=at\n\n\nAn optional post office box number.\n\n\n\n\n\n\nregion=consetetur\n\n\nThe state or local equivalent portion of the address. For example: CA.\n\n\n\n\n\n\n\n\nstreet=et\n\n\n\n\nThe street number and name. For example: 123 Any St.\n\n\n\n\n\n\n\n\n..email    text=sed\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..    fn=sit\n\n\n\n\nThe full name of the contact person. For example: John A. Smith.\n\n\n\n\n\n\n\n\norg    text=takimata\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..tel    uri=elitr\n\n\n\n\nA nested telephone URI of the form: tel:+1-123-456-7890.\n\n\n\n\n\n\n\n\n...owner.adr    code=nonumy\n\n\n\n\nThe postal code associated with the address. For example: 94423.\n\n\n\n\n\n\ncountry=rebum.\n\n\nThe country name. For example: US.\n\n\n\n\n\n\nlocality=lorem\n\n\nThe city or local equivalent portion of the address. For example: San Jose.\n\n\n\n\n\n\npobox=lorem\n\n\nAn optional post office box number.\n\n\n\n\n\n\nregion=diam\n\n\nThe state or local equivalent portion of the address. For example: CA.\n\n\n\n\n\n\n\n\nstreet=ut\n\n\n\n\nThe street number and name. For example: 123 Any St.\n\n\n\n\n\n\n\n\n..email    text=ut\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..    fn=amet.\n\n\n\n\nThe full name of the contact person. For example: John A. Smith.\n\n\n\n\n\n\n\n\norg    text=ipsum\n\n\n\n\nThe text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.\n\n\n\n\n\n\n\n\n..tel    uri=ut\n\n\n\n\nA nested telephone URI of the form: tel:+1-123-456-7890.\n\n\n\n\n\n\n\n\n....location    confidence=98\n\n\n\n\nThe location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.\n\n\n\n\n\n\npoint.center    latitude=0.915204993436\n\n\nA required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\nlongitude=0.649303628005\n\n\n\n\nA required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency\ns Technical Report TR8350.2.\n\n\n\n\n\n\n\n\n..    orientation=0.615268420345\n\n\n\n\nA floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.\n\n\n\n\n\n\nsemi-major-axis=0.930485818219\n\n\nA floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\nsemi-minor-axis=0.735189875377\n\n\n\n\nA floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.\n\n\n\n\n\n\n\n\n...    type=dolor\n\n\n\n\n\n\nThe message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).\n\n\nRequired field.\n* \nversion=et\n\n    - The PAWS version. Must be exactly 1.0.\n\n\nRequired field.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Register"
        }, 
        {
            "location": "/paws_register/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PawsRegisterRequest:\n  antenna:\n    height: number\n    height-type: string\n    height-uncertainty: number\n  device-desc:\n    etsi-en-device-category: string\n    etsi-en-device-emissions-class: string\n    etsi-en-device-type: string\n    etsi-en-technology-id: string\n    fcc-id: string\n    fcc-tvbd-device-type: string\n    manufacturer-id: string\n    model-id: string\n    ruleset-ids: [string]\n    serial-number: string\n  device-owner:\n    operator:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n    owner:\n      adr:\n        code: string\n        country: string\n        locality: string\n        pobox: string\n        region: string\n        street: string\n      email:\n        text: string\n      fn: string\n      org:\n        text: string\n      tel:\n        uri: string\n  location:\n    confidence: integer\n    point:\n      center:\n        latitude: number\n        longitude: number\n      orientation: number\n      semi-major-axis: number\n      semi-minor-axis: number\n  type: string\n  version: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .antenna    height=0.236711616706  The antenna height in meters. Whether the antenna height is required depends on the device type and the regulatory domain. Note that the height may be negative.    height-type=duo  If the height is required, then the height type (AGL for above ground level or AMSL for above mean sea level) is also required. The default is AGL.     height-uncertainty=0.0858312730549   The height uncertainty in meters. Whether this is required depends on the regulatory domain.     ..device-desc    etsi-en-device-category=aliquyam   Specifies the ETSI white space device category. Valid values are the strings master and slave. This field is case-insensitive. Consult the ETSI documentation for details about the device types.    etsi-en-device-emissions-class=ea  Specifies the ETSI white space device emissions class. The values are represented by numeric strings, such as 1, 2, etc. Consult the ETSI documentation for details about the device types.    etsi-en-device-type=ea  Specifies the ETSI white space device type. Valid values are single-letter strings, such as A, B, etc. Consult the ETSI documentation for details about the device types.    etsi-en-technology-id=et  Specifies the ETSI white space device technology identifier. The string value must not exceed 64 characters in length. Consult the ETSI documentation for details about the device types.    fcc-id=dolor  Specifies the device s FCC certification identifier. The value is an identifier string whose length should not exceed 32 characters. Note that, in practice, a valid FCC ID may be limited to 19 characters.    fcc-tvbd-device-type=diam  Specifies the TV Band White Space device type, as defined by the FCC. Valid values are FIXED, MODE_1, MODE_2.    manufacturer-id=kasd  The manufacturer s ID may be required by the regulatory domain. This should represent the name of the device manufacturer, should be consistent across all devices from the same manufacturer, and should be distinct from that of other manufacturers. The string value must not exceed 64 characters in length.    model-id=invidunt  The device s model ID may be required by the regulatory domain. The string value must not exceed 64 characters in length.     ruleset-ids=rebum.    The list of identifiers for rulesets supported by the device. A database may require that the device provide this list before servicing the device requests. If the database does not support any of the rulesets specified in the list, the database may refuse to service the device requests. If present, the list must contain at least one entry.  For information about the valid requests, see section 9.2 of the PAWS specification. Currently, FccTvBandWhiteSpace-2010 is the only supported ruleset.\n    - Each invocation of this argument appends the given value to the array.\n*  serial-number=lorem \n    - The manufacturer s device serial number; required by the applicable regulatory domain. The length of the value must not exceed 64 characters.      ..device-owner.operator.adr    code=clita   The postal code associated with the address. For example: 94423.    country=invidunt  The country name. For example: US.    locality=eirmod  The city or local equivalent portion of the address. For example: San Jose.    pobox=at  An optional post office box number.    region=consetetur  The state or local equivalent portion of the address. For example: CA.     street=et   The street number and name. For example: 123 Any St.     ..email    text=sed   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..    fn=sit   The full name of the contact person. For example: John A. Smith.     org    text=takimata   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..tel    uri=elitr   A nested telephone URI of the form: tel:+1-123-456-7890.     ...owner.adr    code=nonumy   The postal code associated with the address. For example: 94423.    country=rebum.  The country name. For example: US.    locality=lorem  The city or local equivalent portion of the address. For example: San Jose.    pobox=lorem  An optional post office box number.    region=diam  The state or local equivalent portion of the address. For example: CA.     street=ut   The street number and name. For example: 123 Any St.     ..email    text=ut   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..    fn=amet.   The full name of the contact person. For example: John A. Smith.     org    text=ipsum   The text string associated with this item. For example, for an org field: ACME, inc. For an email field: smith@example.com.     ..tel    uri=ut   A nested telephone URI of the form: tel:+1-123-456-7890.     ....location    confidence=98   The location confidence level, as an integer percentage, may be required, depending on the regulatory domain. When the parameter is optional and not provided, its value is assumed to be 95. Valid values range from 0 to 99, since, in practice, 100-percent confidence is not achievable. The confidence value is meaningful only when geolocation refers to a point with uncertainty.    point.center    latitude=0.915204993436  A required floating-point number that expresses the latitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     longitude=0.649303628005   A required floating-point number that expresses the longitude in degrees using the WGS84 datum. For details on this encoding, see the National Imagery and Mapping Agency s Technical Report TR8350.2.     ..    orientation=0.615268420345   A floating-point number that expresses the orientation of the ellipse, representing the rotation, in degrees, of the semi-major axis from North towards the East. For example, when the uncertainty is greatest along the North-South direction, orientation is 0 degrees; conversely, if the uncertainty is greatest along the East-West direction, orientation is 90 degrees. When orientation is not present, the orientation is assumed to be 0.    semi-major-axis=0.930485818219  A floating-point number that expresses the location uncertainty along the major axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     semi-minor-axis=0.735189875377   A floating-point number that expresses the location uncertainty along the minor axis of the ellipse. May be required by the regulatory domain. When the uncertainty is optional, the default value is 0.     ...    type=dolor    The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).  Required field.\n*  version=et \n    - The PAWS version. Must be exactly 1.0.  Required field.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/paws_register/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/paws_register/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/paws_register/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/paws_verify-device/", 
            "text": "Validates a device for white space use in accordance with regulatory rules. The Google Spectrum Database does not support master/slave configurations, so this always yields an UNIMPLEMENTED error.\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nPawsVerifyDeviceRequest:\n  type: string\n  version: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .    type=et\n\n\n\n\nThe message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).\n\n\nRequired field.\n* \nversion=vero\n\n    - The PAWS version. Must be exactly 1.0.\n\n\nRequired field.\n\n\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for the response.\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.\n\n\n\n\n\n\n\n\n-p user-ip=string\n\n\n\n\nIP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Verify Device"
        }, 
        {
            "location": "/paws_verify-device/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  PawsVerifyDeviceRequest:\n  type: string\n  version: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .    type=et   The message type (e.g., INIT_REQ, AVAIL_SPECTRUM_REQ, ...).  Required field.\n*  version=vero \n    - The PAWS version. Must be exactly 1.0.  Required field.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/paws_verify-device/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/paws_verify-device/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/paws_verify-device/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p alt=string   Data format for the response.     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.     -p user-ip=string   IP address of the site where the request originates. Use this if you want to enforce per-user limits.", 
            "title": "Optional General Properties"
        }
    ]
}