{
    "docs": [
        {
            "location": "/", 
            "text": "The \nremotebuildexecution2\n command-line interface \n(CLI)\n allows to use most features of the \nGoogle Remote Build Execution\n service from the comfort of your terminal.\n\n\nBy default all output is printed to standard out, but flags can be set to direct it into a file independent of your shell's\ncapabilities. Errors will be printed to standard error, and cause the program's exit code to be non-zero.\n\n\nIf data-structures are requested, these will be returned as pretty-printed JSON, to be useful as input to other tools.\n\n\nEverything else about the \nRemote Build Execution\n API can be found at the\n\nofficial documentation site\n.\n\n\nInstallation and Source Code\n\n\nInstall the command-line interface with cargo using:\n\n\ncargo install google-remotebuildexecution2-cli\n\n\n\n\nFind the source code \non github\n.\n\n\nUsage\n\n\nThis documentation was generated from the \nRemote Build Execution\n API at revision \n20190702\n. The CLI is at version \n1.0.10\n.\n\n\nremotebuildexecution2 [options]\n        action-results\n                get \ninstance-name\n \nhash\n \nsize-bytes\n [-p \nv\n]... [-o \nout\n]\n                update \ninstance-name\n \nhash\n \nsize-bytes\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        actions\n                execute \ninstance-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n        blobs\n                batch-read \ninstance-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                batch-update \ninstance-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                find-missing \ninstance-name\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n                get-tree \ninstance-name\n \nhash\n \nsize-bytes\n [-p \nv\n]... [-o \nout\n]\n        methods\n                get-capabilities \ninstance-name\n [-p \nv\n]... [-o \nout\n]\n        operations\n                wait-execution \nname\n (-r \nkv\n)... [-p \nv\n]... [-o \nout\n]\n  remotebuildexecution2 --help\n\nConfiguration:\n  [--scope \nurl\n]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir \nfolder\n\n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.\n\n\n\n\n\nConfiguration\n\n\nThe program will store all persistent data in the \n~/.google-service-cli\n directory in \nJSON\n files prefixed with \nremotebuildexecution2-\n.  You can change the directory used to store configuration with the \n--config-dir\n flag on a per-invocation basis.\n\n\nMore information about the various kinds of persistent data are given in the following paragraphs.\n\n\nAuthentication\n\n\nMost APIs require a user to authenticate any request. If this is the case, the \nscope\n determines the \nset of permissions granted. The granularity of these is usually no more than \nread-only\n or \nfull-access\n.\n\n\nIf not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the \n--scope\n flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.\n\n\nThe first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.\n\n\nIf a scope was authenticated by the user, the respective information will be stored as \nJSON\n in the configuration\ndirectory, e.g. \n~/.google-service-cli/remotebuildexecution2-token-\nscope-hash\n.json\n. No manual management of these tokens\nis necessary.\n\n\nTo revoke granted authentication, please refer to the \nofficial documentation\n.\n\n\nApplication Secrets\n\n\nIn order to allow any application to use Google services, it will need to be registered using the \n\nGoogle Developer Console\n. APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.\n\n\nTo allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.\n\n\nYou can workaround this limitation by putting your own secrets file at this location: \n\n~/.google-service-cli/remotebuildexecution2-secret.json\n, assuming that the required \nremotebuildexecution\n API \nwas enabled for it. Such a secret file can be downloaded in the \nGoogle Developer Console\n at \n\nAPIs \n auth -\n Credentials -\n Download JSON\n and used as is.\n\n\nLearn more about how to setup Google projects and enable APIs using the \nofficial documentation\n.\n\n\nDebugging\n\n\nEven though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error \nas-is\n.\n\n\nThe \n--debug\n flag will print all client-server communication to standard error, whereas the \n--debug-auth\n flag\nwill cause all communication related to authentication to standard error.\nIf the \n--debug\n flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.\n\n\nYou may consider redirecting standard error into a file for ease of use, e.g. \nremotebuildexecution2 --debug \nresource\n \nmethod\n [options] 2\ndebug.txt\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#installation-and-source-code", 
            "text": "Install the command-line interface with cargo using:  cargo install google-remotebuildexecution2-cli  Find the source code  on github .", 
            "title": "Installation and Source Code"
        }, 
        {
            "location": "/#usage", 
            "text": "This documentation was generated from the  Remote Build Execution  API at revision  20190702 . The CLI is at version  1.0.10 .  remotebuildexecution2 [options]\n        action-results\n                get  instance-name   hash   size-bytes  [-p  v ]... [-o  out ]\n                update  instance-name   hash   size-bytes  (-r  kv )... [-p  v ]... [-o  out ]\n        actions\n                execute  instance-name  (-r  kv )... [-p  v ]... [-o  out ]\n        blobs\n                batch-read  instance-name  (-r  kv )... [-p  v ]... [-o  out ]\n                batch-update  instance-name  (-r  kv )... [-p  v ]... [-o  out ]\n                find-missing  instance-name  (-r  kv )... [-p  v ]... [-o  out ]\n                get-tree  instance-name   hash   size-bytes  [-p  v ]... [-o  out ]\n        methods\n                get-capabilities  instance-name  [-p  v ]... [-o  out ]\n        operations\n                wait-execution  name  (-r  kv )... [-p  v ]... [-o  out ]\n  remotebuildexecution2 --help\n\nConfiguration:\n  [--scope  url ]...\n            Specify the authentication a method should be executed in. Each scope\n            requires the user to grant this application permission to use it.\n            If unset, it defaults to the shortest scope url for a particular method.\n  --config-dir  folder \n            A directory into which we will store our persistent data. Defaults to\n            a user-writable directory that we will create during the first invocation.\n            [default: ~/.google-service-cli]\n  --debug\n            Output all server communication to standard error. `tx` and `rx` are placed\n            into the same stream.\n  --debug-auth\n            Output all communication related to authentication to standard error. `tx`\n            and `rx` are placed into the same stream.", 
            "title": "Usage"
        }, 
        {
            "location": "/#configuration", 
            "text": "The program will store all persistent data in the  ~/.google-service-cli  directory in  JSON  files prefixed with  remotebuildexecution2- .  You can change the directory used to store configuration with the  --config-dir  flag on a per-invocation basis.  More information about the various kinds of persistent data are given in the following paragraphs.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#authentication", 
            "text": "Most APIs require a user to authenticate any request. If this is the case, the  scope  determines the \nset of permissions granted. The granularity of these is usually no more than  read-only  or  full-access .  If not set, the system will automatically select the smallest feasible scope, e.g. when invoking a\nmethod that is read-only, it will ask only for a read-only scope. \nYou may use the  --scope  flag to specify a scope directly. \nAll applicable scopes are documented in the respective method's CLI documentation.  The first time a scope is used, the user is asked for permission. Follow the instructions given \nby the CLI to grant permissions, or to decline.  If a scope was authenticated by the user, the respective information will be stored as  JSON  in the configuration\ndirectory, e.g.  ~/.google-service-cli/remotebuildexecution2-token- scope-hash .json . No manual management of these tokens\nis necessary.  To revoke granted authentication, please refer to the  official documentation .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#application-secrets", 
            "text": "In order to allow any application to use Google services, it will need to be registered using the  Google Developer Console . APIs the application may use are then enabled for it\none by one. Most APIs can be used for free and have a daily quota.  To allow more comfortable usage of the CLI without forcing anyone to register an own application, the CLI\ncomes with a default application secret that is configured accordingly. This also means that heavy usage\nall around the world may deplete the daily quota.  You can workaround this limitation by putting your own secrets file at this location:  ~/.google-service-cli/remotebuildexecution2-secret.json , assuming that the required  remotebuildexecution  API \nwas enabled for it. Such a secret file can be downloaded in the  Google Developer Console  at  APIs   auth -  Credentials -  Download JSON  and used as is.  Learn more about how to setup Google projects and enable APIs using the  official documentation .", 
            "title": "Application Secrets"
        }, 
        {
            "location": "/#debugging", 
            "text": "Even though the CLI does its best to provide usable error messages, sometimes it might be desirable to know\nwhat exactly led to a particular issue. This is done by allowing all client-server communication to be \noutput to standard error  as-is .  The  --debug  flag will print all client-server communication to standard error, whereas the  --debug-auth  flag\nwill cause all communication related to authentication to standard error.\nIf the  --debug  flag is set, error-results will be debug-printed, possibly yielding more information about the \nissue at hand.  You may consider redirecting standard error into a file for ease of use, e.g.  remotebuildexecution2 --debug  resource   method  [options] 2 debug.txt .", 
            "title": "Debugging"
        }, 
        {
            "location": "/action-results_get/", 
            "text": "Retrieve a cached execution result.\n\n\nImplementations SHOULD ensure that any blobs referenced from the\nContentAddressableStorage\nare available at the time of returning the\nActionResult and will be\nfor some period of time afterwards. The TTLs of the referenced blobs SHOULD be increased\nif necessary and applicable.\n\n\nErrors:\n\n\n\n\nNOT_FOUND\n: The requested \nActionResult\n is not in the cache.\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n action-results get ...\n\n\nRequired Scalar Arguments\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\nhash\n \n(string)\n\n\nThe hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.\n\n\n\n\n\n\nsize-bytes\n \n(string)\n\n\nThe size of the blob, in bytes.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p inline-stderr=boolean\n\n\n\n\nA hint to the server to request inlining stderr in the\n    ActionResult message.\n\n\n\n\n\n\n\n\n-p inline-stdout=boolean\n\n\n\n\nA hint to the server to request inlining stdout in the\n    ActionResult message.\n\n\n\n\n\n\n\n\n-p inline-output-files=string\n\n\n\n\nA hint to the server to inline the contents of the listed output files.\n    Each path needs to exactly match one path in \noutput_files\n in the\n    Command message.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get"
        }, 
        {
            "location": "/action-results_get/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  action-results get ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/action-results_get/#required-scalar-arguments", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.    hash   (string)  The hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.    size-bytes   (string)  The size of the blob, in bytes.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/action-results_get/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/action-results_get/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p inline-stderr=boolean   A hint to the server to request inlining stderr in the\n    ActionResult message.     -p inline-stdout=boolean   A hint to the server to request inlining stdout in the\n    ActionResult message.     -p inline-output-files=string   A hint to the server to inline the contents of the listed output files.\n    Each path needs to exactly match one path in  output_files  in the\n    Command message.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/action-results_get/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/action-results_update/", 
            "text": "Upload a new execution result.\n\n\nIn order to allow the server to perform access control based on the type of\naction, and to assist with client debugging, the client MUST first upload\nthe Action that produced the\nresult, along with its\nCommand, into the\n\nContentAddressableStorage\n.\n\n\nErrors:\n\n\n\n\nINVALID_ARGUMENT\n: One or more arguments are invalid.\n\n\nFAILED_PRECONDITION\n: One or more errors occurred in updating the\n  action result, such as a missing command or action.\n\n\nRESOURCE_EXHAUSTED\n: There is insufficient storage space to add the\n  entry to the cache.\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n action-results update ...\n\n\nRequired Scalar Arguments\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\nhash\n \n(string)\n\n\nThe hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.\n\n\n\n\n\n\nsize-bytes\n \n(string)\n\n\nThe size of the blob, in bytes.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBuildBazelRemoteExecutionV2ActionResult:\n  execution-metadata:\n    execution-completed-timestamp: string\n    execution-start-timestamp: string\n    input-fetch-completed-timestamp: string\n    input-fetch-start-timestamp: string\n    output-upload-completed-timestamp: string\n    output-upload-start-timestamp: string\n    queued-timestamp: string\n    worker: string\n    worker-completed-timestamp: string\n    worker-start-timestamp: string\n  exit-code: integer\n  stderr-digest:\n    hash: string\n    size-bytes: string\n  stderr-raw: string\n  stdout-digest:\n    hash: string\n    size-bytes: string\n  stdout-raw: string\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .execution-metadata    execution-completed-timestamp=eirmod\n\n\nWhen the worker completed executing the action command.\n\n\n\n\n\n\nexecution-start-timestamp=sit\n\n\nWhen the worker started executing the action command.\n\n\n\n\n\n\ninput-fetch-completed-timestamp=stet\n\n\nWhen the worker finished fetching action inputs.\n\n\n\n\n\n\ninput-fetch-start-timestamp=sed\n\n\nWhen the worker started fetching action inputs.\n\n\n\n\n\n\noutput-upload-completed-timestamp=et\n\n\nWhen the worker finished uploading action outputs.\n\n\n\n\n\n\noutput-upload-start-timestamp=dolores\n\n\nWhen the worker started uploading action outputs.\n\n\n\n\n\n\nqueued-timestamp=kasd\n\n\nWhen was the action added to the queue.\n\n\n\n\n\n\nworker=accusam\n\n\nThe name of the worker which ran the execution.\n\n\n\n\n\n\nworker-completed-timestamp=takimata\n\n\nWhen the worker completed the action, including all stages.\n\n\n\n\n\n\n\n\nworker-start-timestamp=justo\n\n\n\n\nWhen the worker received the action.\n\n\n\n\n\n\n\n\n..    exit-code=100\n\n\n\n\nThe exit code of the command.\n\n\n\n\n\n\nstderr-digest    hash=erat\n\n\nThe hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.\n\n\n\n\n\n\n\n\nsize-bytes=labore\n\n\n\n\nThe size of the blob, in bytes.\n\n\n\n\n\n\n\n\n..    stderr-raw=sea\n\n\n\n\nThe standard error buffer of the action. The server SHOULD NOT inline\n    stderr unless requested by the client in the\n    GetActionResultRequest\n    message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n    would cause the response to exceed message size limits.\n\n\n\n\n\n\nstdout-digest    hash=nonumy\n\n\nThe hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.\n\n\n\n\n\n\n\n\nsize-bytes=dolores\n\n\n\n\nThe size of the blob, in bytes.\n\n\n\n\n\n\n\n\n..    stdout-raw=gubergren\n\n\n\n\nThe standard output buffer of the action. The server SHOULD NOT inline\n    stdout unless requested by the client in the\n    GetActionResultRequest\n    message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n    would cause the response to exceed message size limits.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n-p results-cache-policy-priority=integer\n\n\n\n\nThe priority (relative importance) of this content in the overall cache.\n    Generally, a lower value means a longer retention time or other advantage,\n    but the interpretation of a given value is server-dependent. A priority of\n    0 means a \ndefault\n value, decided by the server.\n\n\nThe particular semantics of this field is up to the server. In particular,\nevery server will have their own supported range of priorities, and will\ndecide how these map into retention/eviction policy.\n\n\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Update"
        }, 
        {
            "location": "/action-results_update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  action-results update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/action-results_update/#required-scalar-arguments", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.    hash   (string)  The hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.    size-bytes   (string)  The size of the blob, in bytes.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/action-results_update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BuildBazelRemoteExecutionV2ActionResult:\n  execution-metadata:\n    execution-completed-timestamp: string\n    execution-start-timestamp: string\n    input-fetch-completed-timestamp: string\n    input-fetch-start-timestamp: string\n    output-upload-completed-timestamp: string\n    output-upload-start-timestamp: string\n    queued-timestamp: string\n    worker: string\n    worker-completed-timestamp: string\n    worker-start-timestamp: string\n  exit-code: integer\n  stderr-digest:\n    hash: string\n    size-bytes: string\n  stderr-raw: string\n  stdout-digest:\n    hash: string\n    size-bytes: string\n  stdout-raw: string  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .execution-metadata    execution-completed-timestamp=eirmod  When the worker completed executing the action command.    execution-start-timestamp=sit  When the worker started executing the action command.    input-fetch-completed-timestamp=stet  When the worker finished fetching action inputs.    input-fetch-start-timestamp=sed  When the worker started fetching action inputs.    output-upload-completed-timestamp=et  When the worker finished uploading action outputs.    output-upload-start-timestamp=dolores  When the worker started uploading action outputs.    queued-timestamp=kasd  When was the action added to the queue.    worker=accusam  The name of the worker which ran the execution.    worker-completed-timestamp=takimata  When the worker completed the action, including all stages.     worker-start-timestamp=justo   When the worker received the action.     ..    exit-code=100   The exit code of the command.    stderr-digest    hash=erat  The hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.     size-bytes=labore   The size of the blob, in bytes.     ..    stderr-raw=sea   The standard error buffer of the action. The server SHOULD NOT inline\n    stderr unless requested by the client in the\n    GetActionResultRequest\n    message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n    would cause the response to exceed message size limits.    stdout-digest    hash=nonumy  The hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.     size-bytes=dolores   The size of the blob, in bytes.     ..    stdout-raw=gubergren   The standard output buffer of the action. The server SHOULD NOT inline\n    stdout unless requested by the client in the\n    GetActionResultRequest\n    message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n    would cause the response to exceed message size limits.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/action-results_update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/action-results_update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/action-results_update/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.   -p results-cache-policy-priority=integer   The priority (relative importance) of this content in the overall cache.\n    Generally, a lower value means a longer retention time or other advantage,\n    but the interpretation of a given value is server-dependent. A priority of\n    0 means a  default  value, decided by the server.  The particular semantics of this field is up to the server. In particular,\nevery server will have their own supported range of priorities, and will\ndecide how these map into retention/eviction policy.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/action-results_update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/actions_execute/", 
            "text": "Execute an action remotely.\n\n\nIn order to execute an action, the client must first upload all of the\ninputs, the\nCommand to run, and the\nAction into the\nContentAddressableStorage.\nIt then calls \nExecute\n with an \naction_digest\n referring to them. The\nserver will run the action and eventually return the result.\n\n\nThe input \nAction\ns fields MUST meet the various canonicalization\nrequirements specified in the documentation for their types so that it has\nthe same digest as other logically equivalent \nAction\ns. The server MAY\nenforce the requirements and return errors if a non-canonical input is\nreceived. It MAY also proceed without verifying some or all of the\nrequirements, such as for performance reasons. If the server does not\nverify the requirement, then it will treat the \nAction\n as distinct from\nanother logically equivalent action if they hash differently.\n\n\nReturns a stream of\ngoogle.longrunning.Operation messages\ndescribing the resulting execution, with eventual \nresponse\n\nExecuteResponse. The\n\nmetadata\n on the operation is of type\nExecuteOperationMetadata.\n\n\nIf the client remains connected after the first response is returned after\nthe server, then updates are streamed as if the client had called\nWaitExecution\nuntil the execution completes or the request reaches an error. The\noperation can also be queried using Operations\nAPI.\n\n\nThe server NEED NOT implement other methods or functionality of the\nOperations API.\n\n\nErrors discovered during creation of the \nOperation\n will be reported\nas gRPC Status errors, while errors that occurred while running the\naction will be reported in the \nstatus\n field of the \nExecuteResponse\n. The\nserver MUST NOT set the \nerror\n field of the \nOperation\n proto.\nThe possible errors include:\n\n\n\n\nINVALID_ARGUMENT\n: One or more arguments are invalid.\n\n\nFAILED_PRECONDITION\n: One or more errors occurred in setting up the\n  action requested, such as a missing input or command or no worker being\n  available. The client may be able to fix the errors and retry.\n\n\nRESOURCE_EXHAUSTED\n: There is insufficient quota of some resource to run\n  the action.\n\n\nUNAVAILABLE\n: Due to a transient condition, such as all workers being\n  occupied (and the server does not support a queue), the action could not\n  be started. The client should retry.\n\n\nINTERNAL\n: An internal error occurred in the execution engine or the\n  worker.\n\n\nDEADLINE_EXCEEDED\n: The execution timed out.\n\n\nCANCELLED\n: The operation was cancelled by the client. This status is\n  only possible if the server implements the Operations API CancelOperation\n  method, and it was called for the current execution.\n\n\n\n\nIn the case of a missing input or command, the server SHOULD additionally\nsend a PreconditionFailure error detail\nwhere, for each requested blob not present in the CAS, there is a\n\nViolation\n with a \ntype\n of \nMISSING\n and a \nsubject\n of\n\n#34;blobs/{hash}/{size}\n#34;\n indicating the digest of the missing blob.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n actions execute ...\n\n\nRequired Scalar Argument\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBuildBazelRemoteExecutionV2ExecuteRequest:\n  action-digest:\n    hash: string\n    size-bytes: string\n  execution-policy:\n    priority: integer\n  results-cache-policy:\n    priority: integer\n  skip-cache-lookup: boolean\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\n\n\n-r .action-digest    hash=sadipscing\n\n\nThe hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.\n\n\n\n\n\n\n\n\nsize-bytes=aliquyam\n\n\n\n\nThe size of the blob, in bytes.\n\n\n\n\n\n\n\n\n..execution-policy    priority=35\n\n\n\n\nThe priority (relative importance) of this action. Generally, a lower value\n    means that the action should be run sooner than actions having a greater\n    priority value, but the interpretation of a given value is server-\n    dependent. A priority of 0 means the \ndefault\n priority. Priorities may be\n    positive or negative, and such actions should run later or sooner than\n    actions having the default priority, respectively. The particular semantics\n    of this field is up to the server. In particular, every server will have\n    their own supported range of priorities, and will decide how these map into\n    scheduling policy.\n\n\n\n\n\n\n\n\n..results-cache-policy    priority=40\n\n\n\n\n\n\nThe priority (relative importance) of this content in the overall cache.\n    Generally, a lower value means a longer retention time or other advantage,\n    but the interpretation of a given value is server-dependent. A priority of\n    0 means a \ndefault\n value, decided by the server.\n\n\nThe particular semantics of this field is up to the server. In particular,\nevery server will have their own supported range of priorities, and will\ndecide how these map into retention/eviction policy.\n\n\n\n\n\n\n\n\n\n\n..    skip-cache-lookup=true\n\n\n\n\nIf true, the action will be executed even if its result is already\n    present in the ActionCache.\n    The execution is still allowed to be merged with other in-flight executions\n    of the same action, however - semantically, the service MUST only guarantee\n    that the results of an execution with this field set were not visible\n    before the corresponding execution request was sent.\n    Note that actions from execution requests setting this field set are still\n    eligible to be entered into the action cache upon completion, and services\n    SHOULD overwrite any existing entries that may exist. This allows\n    skip_cache_lookup requests to be used as a mechanism for replacing action\n    cache entries that reference outputs no longer available or that are\n    poisoned in any way.\n    If false, the result may be served from the action cache.\n\n\n\n\n\n\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Execute"
        }, 
        {
            "location": "/actions_execute/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  actions execute ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/actions_execute/#required-scalar-argument", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/actions_execute/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BuildBazelRemoteExecutionV2ExecuteRequest:\n  action-digest:\n    hash: string\n    size-bytes: string\n  execution-policy:\n    priority: integer\n  results-cache-policy:\n    priority: integer\n  skip-cache-lookup: boolean  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.   -r .action-digest    hash=sadipscing  The hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.     size-bytes=aliquyam   The size of the blob, in bytes.     ..execution-policy    priority=35   The priority (relative importance) of this action. Generally, a lower value\n    means that the action should be run sooner than actions having a greater\n    priority value, but the interpretation of a given value is server-\n    dependent. A priority of 0 means the  default  priority. Priorities may be\n    positive or negative, and such actions should run later or sooner than\n    actions having the default priority, respectively. The particular semantics\n    of this field is up to the server. In particular, every server will have\n    their own supported range of priorities, and will decide how these map into\n    scheduling policy.     ..results-cache-policy    priority=40    The priority (relative importance) of this content in the overall cache.\n    Generally, a lower value means a longer retention time or other advantage,\n    but the interpretation of a given value is server-dependent. A priority of\n    0 means a  default  value, decided by the server.  The particular semantics of this field is up to the server. In particular,\nevery server will have their own supported range of priorities, and will\ndecide how these map into retention/eviction policy.      ..    skip-cache-lookup=true   If true, the action will be executed even if its result is already\n    present in the ActionCache.\n    The execution is still allowed to be merged with other in-flight executions\n    of the same action, however - semantically, the service MUST only guarantee\n    that the results of an execution with this field set were not visible\n    before the corresponding execution request was sent.\n    Note that actions from execution requests setting this field set are still\n    eligible to be entered into the action cache upon completion, and services\n    SHOULD overwrite any existing entries that may exist. This allows\n    skip_cache_lookup requests to be used as a mechanism for replacing action\n    cache entries that reference outputs no longer available or that are\n    poisoned in any way.\n    If false, the result may be served from the action cache.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/actions_execute/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/actions_execute/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/actions_execute/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/blobs_batch-read/", 
            "text": "Download many blobs at once.\n\n\nThe server may enforce a limit of the combined total size of blobs\nto be downloaded using this API. This limit may be obtained using the\nCapabilities API.\nRequests exceeding the limit should either be split into smaller\nchunks or downloaded using the\nByteStream API, as appropriate.\n\n\nThis request is equivalent to calling a Bytestream \nRead\n request\non each individual blob, in parallel. The requests may succeed or fail\nindependently.\n\n\nErrors:\n\n\n\n\nINVALID_ARGUMENT\n: The client attempted to read more than the\n  server supported limit.\n\n\n\n\nEvery error on individual read will be returned in the corresponding digest\nstatus.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n blobs batch-read ...\n\n\nRequired Scalar Argument\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBuildBazelRemoteExecutionV2BatchReadBlobsRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Batch Read"
        }, 
        {
            "location": "/blobs_batch-read/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  blobs batch-read ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/blobs_batch-read/#required-scalar-argument", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/blobs_batch-read/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BuildBazelRemoteExecutionV2BatchReadBlobsRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/blobs_batch-read/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/blobs_batch-read/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/blobs_batch-read/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/blobs_batch-update/", 
            "text": "Upload many blobs at once.\n\n\nThe server may enforce a limit of the combined total size of blobs\nto be uploaded using this API. This limit may be obtained using the\nCapabilities API.\nRequests exceeding the limit should either be split into smaller\nchunks or uploaded using the\nByteStream API, as appropriate.\n\n\nThis request is equivalent to calling a Bytestream \nWrite\n request\non each individual blob, in parallel. The requests may succeed or fail\nindependently.\n\n\nErrors:\n\n\n\n\nINVALID_ARGUMENT\n: The client attempted to upload more than the\n  server supported limit.\n\n\n\n\nIndividual requests may return the following errors, additionally:\n\n\n\n\nRESOURCE_EXHAUSTED\n: There is insufficient disk quota to store the blob.\n\n\nINVALID_ARGUMENT\n: The\nDigest does not match the\nprovided data.\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n blobs batch-update ...\n\n\nRequired Scalar Argument\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBuildBazelRemoteExecutionV2BatchUpdateBlobsRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Batch Update"
        }, 
        {
            "location": "/blobs_batch-update/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  blobs batch-update ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/blobs_batch-update/#required-scalar-argument", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/blobs_batch-update/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BuildBazelRemoteExecutionV2BatchUpdateBlobsRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/blobs_batch-update/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/blobs_batch-update/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/blobs_batch-update/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/blobs_find-missing/", 
            "text": "Determine if blobs are present in the CAS.\n\n\nClients can use this API before uploading blobs to determine which ones are\nalready present in the CAS and do not need to be uploaded again.\n\n\nThere are no method-specific errors.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n blobs find-missing ...\n\n\nRequired Scalar Argument\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBuildBazelRemoteExecutionV2FindMissingBlobsRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Find Missing"
        }, 
        {
            "location": "/blobs_find-missing/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  blobs find-missing ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/blobs_find-missing/#required-scalar-argument", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/blobs_find-missing/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BuildBazelRemoteExecutionV2FindMissingBlobsRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/blobs_find-missing/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/blobs_find-missing/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/blobs_find-missing/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/blobs_get-tree/", 
            "text": "Fetch the entire directory tree rooted at a node.\n\n\nThis request must be targeted at a\nDirectory stored in the\nContentAddressableStorage\n(CAS). The server will enumerate the \nDirectory\n tree recursively and\nreturn every node descended from the root.\n\n\nThe GetTreeRequest.page_token parameter can be used to skip ahead in\nthe stream (e.g. when retrying a partially completed and aborted request),\nby setting it to a value taken from GetTreeResponse.next_page_token of the\nlast successfully processed GetTreeResponse).\n\n\nThe exact traversal order is unspecified and, unless retrieving subsequent\npages from an earlier request, is not guaranteed to be stable across\nmultiple invocations of \nGetTree\n.\n\n\nIf part of the tree is missing from the CAS, the server will return the\nportion present and omit the rest.\n\n\n\n\nNOT_FOUND\n: The requested tree root is not present in the CAS.\n\n\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n blobs get-tree ...\n\n\nRequired Scalar Arguments\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\nhash\n \n(string)\n\n\nThe hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.\n\n\n\n\n\n\nsize-bytes\n \n(string)\n\n\nThe size of the blob, in bytes.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional Method Properties\n\n\nYou may set the following properties to further configure the call. Please note that \n-p\n is followed by one \nor more key-value-pairs, and is called like this \n-p k1=v1 k2=v2\n even though the listing below repeats the\n\n-p\n for completeness.\n\n\n\n\n\n\n-p page-size=integer\n\n\n\n\nA maximum page size to request. If present, the server will request no more\n    than this many items. Regardless of whether a page size is specified, the\n    server may place its own limit on the number of items to be returned and\n    require the client to retrieve more items using a subsequent request.\n\n\n\n\n\n\n\n\n-p page-token=string\n\n\n\n\nA page token, which must be a value received in a previous\n    GetTreeResponse.\n    If present, the server will use it to return the following page of results.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get Tree"
        }, 
        {
            "location": "/blobs_get-tree/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  blobs get-tree ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/blobs_get-tree/#required-scalar-arguments", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.    hash   (string)  The hash. In the case of SHA-256, it will always be a lowercase hex string\n    exactly 64 characters long.    size-bytes   (string)  The size of the blob, in bytes.", 
            "title": "Required Scalar Arguments"
        }, 
        {
            "location": "/blobs_get-tree/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/blobs_get-tree/#optional-method-properties", 
            "text": "You may set the following properties to further configure the call. Please note that  -p  is followed by one \nor more key-value-pairs, and is called like this  -p k1=v1 k2=v2  even though the listing below repeats the -p  for completeness.    -p page-size=integer   A maximum page size to request. If present, the server will request no more\n    than this many items. Regardless of whether a page size is specified, the\n    server may place its own limit on the number of items to be returned and\n    require the client to retrieve more items using a subsequent request.     -p page-token=string   A page token, which must be a value received in a previous\n    GetTreeResponse.\n    If present, the server will use it to return the following page of results.", 
            "title": "Optional Method Properties"
        }, 
        {
            "location": "/blobs_get-tree/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/methods_get-capabilities/", 
            "text": "GetCapabilities returns the server capabilities configuration of the\nremote endpoint.\nOnly the capabilities of the services supported by the endpoint will\nbe returned:\n* Execution + CAS + Action Cache endpoints should return both\n  CacheCapabilities and ExecutionCapabilities.\n* Execution only endpoints should return ExecutionCapabilities.\n* CAS + Action Cache only endpoints should return CacheCapabilities.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n methods get-capabilities ...\n\n\nRequired Scalar Argument\n\n\n\n\ninstance-name\n \n(string)\n\n\nThe instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.\n\n\n\n\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Get Capabilities"
        }, 
        {
            "location": "/methods_get-capabilities/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  methods get-capabilities ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/methods_get-capabilities/#required-scalar-argument", 
            "text": "instance-name   (string)  The instance of the execution system to operate against. A server may\n    support multiple instances of the execution system (with their own workers,\n    storage, caches, etc.). The server MAY require use of this field to select\n    between them in an implementation-defined fashion, otherwise it can be\n    omitted.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/methods_get-capabilities/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/methods_get-capabilities/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }, 
        {
            "location": "/operations_wait-execution/", 
            "text": "Wait for an execution operation to complete. When the client initially\nmakes the request, the server immediately responds with the current status\nof the execution. The server will leave the request stream open until the\noperation completes, and then respond with the completed operation. The\nserver MAY choose to stream additional updates as execution progresses,\nsuch as to provide an update as to the state of the execution.\n\n\nScopes\n\n\nYou will need authorization for the \nhttps://www.googleapis.com/auth/cloud-platform\n scope to make a valid call.\n\n\nIf unset, the scope for this method defaults to \nhttps://www.googleapis.com/auth/cloud-platform\n.\nYou can set the scope for this method like this: \nremotebuildexecution2 --scope \nscope\n operations wait-execution ...\n\n\nRequired Scalar Argument\n\n\n\n\nname\n \n(string)\n\n\nThe name of the Operation\n    returned by Execute.\n\n\n\n\n\n\n\n\nRequired Request Value\n\n\nThe request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.\n\n\nFor example, a structure like this:\n\n\nBuildBazelRemoteExecutionV2WaitExecutionRequest:\n\n\n\n\n\ncan be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.\n\n\nAbout Cursors\n\n\nThe cursor position is key to comfortably set complex nested structures. The following rules apply:\n\n\n\n\nThe cursor position is always set relative to the current one, unless the field name starts with the \n.\n character. Fields can be nested such as in \n-r f.s.o\n .\n\n\nThe cursor position is set relative to the top-level structure if it starts with \n.\n, e.g. \n-r .s.s\n\n\nYou can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify \n-r struct.sub_struct=bar\n.\n\n\nYou can move the cursor one level up by using \n..\n. Each additional \n.\n moves it up one additional level. E.g. \n...\n would go three levels up.\n\n\n\n\nOptional Output Flags\n\n\nThe method's return value a JSON encoded structure, which will be written to standard output by default.\n\n\n\n\n-o out\n\n\nout\n specifies the \ndestination\n to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The \ndestination\n may be \n-\n to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.\n\n\n\n\n\n\n\n\nOptional General Properties\n\n\nThe following properties can configure any call, and are not specific to this method.\n\n\n\n\n\n\n-p $-xgafv=string\n\n\n\n\nV1 error format.\n\n\n\n\n\n\n\n\n-p access-token=string\n\n\n\n\nOAuth access token.\n\n\n\n\n\n\n\n\n-p alt=string\n\n\n\n\nData format for response.\n\n\n\n\n\n\n\n\n-p callback=string\n\n\n\n\nJSONP\n\n\n\n\n\n\n\n\n-p fields=string\n\n\n\n\nSelector specifying which fields to include in a partial response.\n\n\n\n\n\n\n\n\n-p key=string\n\n\n\n\nAPI key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n\n\n\n\n\n\n\n\n-p oauth-token=string\n\n\n\n\nOAuth 2.0 token for the current user.\n\n\n\n\n\n\n\n\n-p pretty-print=boolean\n\n\n\n\nReturns response with indentations and line breaks.\n\n\n\n\n\n\n\n\n-p quota-user=string\n\n\n\n\nAvailable to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n\n\n\n\n\n\n\n\n-p upload-type=string\n\n\n\n\nLegacy upload protocol for media (e.g. \nmedia\n, \nmultipart\n).\n\n\n\n\n\n\n\n\n-p upload-protocol=string\n\n\n\n\nUpload protocol for media (e.g. \nraw\n, \nmultipart\n).", 
            "title": "Wait Execution"
        }, 
        {
            "location": "/operations_wait-execution/#scopes", 
            "text": "You will need authorization for the  https://www.googleapis.com/auth/cloud-platform  scope to make a valid call.  If unset, the scope for this method defaults to  https://www.googleapis.com/auth/cloud-platform .\nYou can set the scope for this method like this:  remotebuildexecution2 --scope  scope  operations wait-execution ...", 
            "title": "Scopes"
        }, 
        {
            "location": "/operations_wait-execution/#required-scalar-argument", 
            "text": "name   (string)  The name of the Operation\n    returned by Execute.", 
            "title": "Required Scalar Argument"
        }, 
        {
            "location": "/operations_wait-execution/#required-request-value", 
            "text": "The request value is a data-structure with various fields. Each field may be a simple scalar or another data-structure.\nIn the latter case it is advised to set the field-cursor to the data-structure's field to specify values more concisely.  For example, a structure like this:  BuildBazelRemoteExecutionV2WaitExecutionRequest:  can be set completely with the following arguments which are assumed to be executed in the given order. Note how the cursor position is adjusted to the respective structures, allowing simple field names to be used most of the time.", 
            "title": "Required Request Value"
        }, 
        {
            "location": "/operations_wait-execution/#about-cursors", 
            "text": "The cursor position is key to comfortably set complex nested structures. The following rules apply:   The cursor position is always set relative to the current one, unless the field name starts with the  .  character. Fields can be nested such as in  -r f.s.o  .  The cursor position is set relative to the top-level structure if it starts with  . , e.g.  -r .s.s  You can also set nested fields without setting the cursor explicitly. For example, to set a value relative to the current cursor position, you would specify  -r struct.sub_struct=bar .  You can move the cursor one level up by using  .. . Each additional  .  moves it up one additional level. E.g.  ...  would go three levels up.", 
            "title": "About Cursors"
        }, 
        {
            "location": "/operations_wait-execution/#optional-output-flags", 
            "text": "The method's return value a JSON encoded structure, which will be written to standard output by default.   -o out  out  specifies the  destination  to which to write the server's result to.\n  It will be a JSON-encoded structure.\n  The  destination  may be  -  to indicate standard output, or a filepath that is to contain the received bytes.\n  If unset, it defaults to standard output.", 
            "title": "Optional Output Flags"
        }, 
        {
            "location": "/operations_wait-execution/#optional-general-properties", 
            "text": "The following properties can configure any call, and are not specific to this method.    -p $-xgafv=string   V1 error format.     -p access-token=string   OAuth access token.     -p alt=string   Data format for response.     -p callback=string   JSONP     -p fields=string   Selector specifying which fields to include in a partial response.     -p key=string   API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.     -p oauth-token=string   OAuth 2.0 token for the current user.     -p pretty-print=boolean   Returns response with indentations and line breaks.     -p quota-user=string   Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.     -p upload-type=string   Legacy upload protocol for media (e.g.  media ,  multipart ).     -p upload-protocol=string   Upload protocol for media (e.g.  raw ,  multipart ).", 
            "title": "Optional General Properties"
        }
    ]
}